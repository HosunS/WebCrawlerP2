¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE52676¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueX°trac_form_token=fea9effad38f3d24f582728b; httponly; Path=/wiki/public, trac_session=393b08d60875dea8ae1049e4; expires=Mon, 06 May 2019 22:10:26 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueGExpiresAv¢DtypeEvalueXFri, 01 Jan 1999 00:00:00 GMT¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueMCache-ControlAv¢DtypeEvalueOmust-revalidate¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXTue, 05 Feb 2019 22:10:26 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueWtext/html;charset=utf-8Kraw_content¢DtypeEvalueYÍÄ<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

    <html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      cs122b-2019-winter-project2 (diff) â€“ Public
    </title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/wiki/public/search" />
        <link rel="help" href="/wiki/public/wiki/TracGuide" />
        <link rel="up" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=history" title="Page history" />
        <link rel="next" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=10" title="Version 10" />
        <link rel="start" href="/wiki/public/wiki" />
        <link rel="stylesheet" href="/wiki/public/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/diff.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/tracwysiwyg/editor.css" />
        <link rel="tracwysiwyg.base" href="/wiki/public" />
        <link rel="prev" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=8" title="Version 8" />
        <link rel="shortcut icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
    <style id="trac-noscript" type="text/css">.trac-noscript { display: none !important }</style>
    <script type="text/javascript">
      var _tracwysiwyg={};
    </script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/jquery.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/babel.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/trac.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/search.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/diff.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/tracwysiwyg/wysiwyg.js"></script>
    <script type="text/javascript">
      jQuery("#trac-noscript").remove();
      jQuery(document).ready(function($) {
        $(".trac-autofocus").focus();
        $(".trac-target-new").attr("target", "_blank");
        setTimeout(function() { $(".trac-scroll").scrollToTop() }, 1);
        $(".trac-disable-on-submit").disableOnSubmit();
      });
    </script>
    <link rel="stylesheet" type="text/css" href="/wiki/public/chrome/common/css/diff.css" />
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW" />
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.ics.uci.edu/"><img src="/wiki/public/chrome/site/ics.jpg" alt="ICS Logo" height="67" width="128" /></a>
      </div>
      <form id="search" action="/wiki/public/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/wiki/public/login">Login</a></li><li><a href="/wiki/public/prefs">Preferences</a></li><li class="last"><a href="/wiki/public/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
        <ul>
          <li class="first"><span>&larr; <a class="prev" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=8" title="Version 8">Previous Change</a></span></li><li><a href="/wiki/public/wiki/cs122b-2019-winter-project2?action=history" title="Page history">Wiki History</a></li><li class="last"><span><a class="next" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=10" title="Version 10">Next Change</a> &rarr;</span></li>
        </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
      <h1>
        Changes between
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8">Version 8</a> and
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9">Version 9</a> of
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2">cs122b-2019-winter-project2</a>
      </h1>
      <form method="post" id="prefs" action="/wiki/public/wiki/cs122b-2019-winter-project2?version=9"><div><input type="hidden" name="__FORM_TOKEN" value="fea9effad38f3d24f582728b" /></div>
        <div>
          <input type="hidden" name="action" value="diff" />
          <input type="hidden" name="version" value="9" />
          <input type="hidden" name="old_version" value="8" />
          
  <label for="style">View differences</label>
  <select id="style" name="style">
    <option selected="selected" value="inline">inline</option>
    <option value="sidebyside">side by side</option>
  </select>
  <div class="field">
    <label><input type="radio" name="contextall" value="0" checked="checked" />
             Show</label>
      <label><input type="text" name="contextlines" id="contextlines" size="2" maxlength="3" value="2" />
             lines around each change</label><br />
    <label><input type="radio" name="contextall" value="1" />
           Show the changes in full context</label>
  </div>
  <fieldset id="ignore">
    <legend>Ignore:</legend>
    <div class="field">
      <input type="checkbox" id="ignoreblanklines" name="ignoreblanklines" />
      <label for="ignoreblanklines">Blank lines</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorecase" name="ignorecase" />
      <label for="ignorecase">Case changes</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorewhitespace" name="ignorewhitespace" />
      <label for="ignorewhitespace">White space changes</label>
    </div>
  </fieldset>
  <div class="buttons">
    <input type="submit" name="update" value="Update" />
  </div>

        </div>
      </form>
      <dl id="overview">
        <dt class="property time">Timestamp:</dt>
        <dd class="time">
            Jan 14, 2019 10:18:30 PM (<a class="timeline" href="/wiki/public/timeline?from=2019-01-14T22%3A18%3A30-08%3A00&amp;precision=second" title="See timeline at Jan 14, 2019 10:18:30 PM">3 weeks</a> ago)
        </dd>
        <dt class="property author">Author:</dt>
        <dd class="author">
          avinask
        </dd>
        <dt class="property message">Comment:</dt>
        <dd class="message">
          
          <p>
--
</p>

        </dd>
      </dl>
      <div class="diff">
        <div class="legend" id="diff-legend">
          <h3>Legend:</h3>
          <dl>
            <dt class="unmod"></dt><dd>Unmodified</dd>
            <dt class="add"></dt><dd>Added</dd>
            <dt class="rem"></dt><dd>Removed</dd>
            <dt class="mod"></dt><dd>Modified</dd>
          </dl>
        </div>
        <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2 id="file0">
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9">cs122b-2019-winter-project2</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Version 8">
                    <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L1">
                      v8</a>
                  </th>
                  <th title="Version 9">
                    <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L1">
                      v9</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="mod">
                      <tr class="first">
                        <th>1</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>2</th><th>Â </th><td class="l"><span>= Project 2: Starting Fabflix Business (Under Construction)=</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>1</th><td class="r"><span>= Project 2: Starting Fabflix Business (Under Construction) =</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3</th><th>2</th><td class="l"><span>'''Due: Week 5 Friday, May. 4 11:45 pm. Due on Github.'''</span></td>
                  </tr><tr>
                          <th>4</th><th>3</th><td class="l"><span></span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L11">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L10">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11</th><th>10</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>12</th><th>11</th><td class="l"><span>'''Resources'''</span></td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th>Â </th><th>12</th><td class="r"><ins></ins></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>13</th><th>13</th><td class="l"><span>&nbsp;* Examples we provided:</span></td>
                  </tr><tr>
                          <th>14</th><th>14</th><td class="l"><span>&nbsp; &nbsp;* [#FormExample Form example], [http://users.polytech.unice.fr/~buffa/cours/internet/POLYS/servlets/Servlet-Tutorial-Form-Data.html an online tutorial of Servlet and use form data]</span></td>
                  </tr><tr>
                          <th>15</th><th>15</th><td class="l"><span>&nbsp; &nbsp;* [#ServletSession Servlet Session examples]</span></td>
                  </tr><tr>
                          <th>16</th><th>16</th><td class="l"><span>&nbsp; &nbsp;* [#BackendAPI Frontend-Backend Separation] (Optional): project1-api-example and project2-login-example</span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>17</th><th>Â </th><td class="l"><span>&nbsp; &nbsp;* [#JSP JSP example] (Optional) [https://www.guru99.com/jsp-tutorial.html online JSP tutorial] </span></td>
                      </tr><tr>
                        <th>18</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>19</th><th>Â </th><td class="l"><span>&nbsp;* A very good !JavaScript and jQuery tutorial: [http://jqfundamentals.com/ http://jqfundamentals.com/] </span></td>
                      </tr><tr>
                        <th>20</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>21</th><th>Â </th><td class="l"><span>&nbsp;* Bootstrap is a popular !JavaScript library to make your webpage looks modern and pretty. Here are some tutorials: https://www.toptal.com/front-end/what-is-bootstrap-a-short-tutorial-on-the-what-why-and-how https://www.codeofaninja.com/2014/05/bootstrap-tutorial-beginners-step-step.html</span></td>
                      </tr><tr>
                        <th>22</th><th>Â </th><td class="l"><span></span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>17</th><td class="r"><span>&nbsp; &nbsp;* [#JSP JSP example] (Optional) [https://www.guru99.com/jsp-tutorial.html online JSP tutorial]</span></td>
                      </tr><tr>
                        <th>Â </th><th>18</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>19</th><td class="r"><span>&nbsp;* A very good !JavaScript and jQuery tutorial: http://jqfundamentals.com/</span></td>
                      </tr><tr>
                        <th>Â </th><th>20</th><td class="r"><span></span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>21</th><td class="r"><span>&nbsp;* Bootstrap is a popular !JavaScript library to make your webpage look modern and pretty. Here are some tutorials: https://www.toptal.com/front-end/what-is-bootstrap-a-short-tutorial-on-the-what-why-and-how https://www.codeofaninja.com/2014/05/bootstrap-tutorial-beginners-step-step.html</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>23</th><th>22</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>24</th><th>23</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L40">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L39">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>40</th><th>39</th><td class="l"><span>&nbsp; &nbsp;* star's name. You need to return the stars whose name contains the name user types in. For example, the name "Peter Anteater" should appear when searching "Peter" or "Anteater".</span></td>
                  </tr><tr>
                          <th>41</th><th>40</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>42</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>43</th><th>Â </th><td class="l"><span>&nbsp; Check http://www.imdb.com/search/title&nbsp; to see an example of the interface. Of course, your interface can have a&nbsp; different style.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>41</th><td class="r"><span>&nbsp; Check http://www.imdb.com/search/title&nbsp; &nbsp;to see an example of the interface. Of course, your interface can have a&nbsp; different style.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>44</th><th>42</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>45</th><th>43</th><td class="l"><span>&nbsp;* The "Movie list" page shows the results of the search, and the results are formatted as a table with at least the following columns:</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L56">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L54">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>56</th><th>54</th><td class="l"><span>&nbsp;* ''Substring matching'': The user does not have to provide an exact value for an attribute, and the system should support "substring matching". For example, a query asking for "term" for the "title" attribute should return movies such as "Terminal" and "Terminator." You can use the "LIKE" and "ILIKE" SQL operators for pattern matching in any way you wish.&nbsp; For example:</span></td>
                  </tr><tr>
                          <th>57</th><th>55</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>58</th><th>Â </th><td class="l"><span>&nbsp; '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>SELECT "column_name"'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [[BR]]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FROM "table_name"'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [[BR]]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WHERE "column_name" LIKE pattern'''</del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [[BR]]</span></td>
                      </tr><tr>
                        <th>59</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>60</th><th>Â </th><td class="l"><span>&nbsp; '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<del>pattern'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; often consists of wildcards.[[BR]]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Note: '''</del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; You are required to write an explanation of how/where you use the LIKE predicate in your codebase. You should put this in a text file (plain text or markdown) in your Github repository, for example, "like-predicate.txt", or "like-predicate.md"</span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>56</th><td class="r"><span>&nbsp; '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>&nbsp;SELECT "column_name"'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[[BR]]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FROM "table_name"'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[[BR]]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;WHERE "column_name" LIKE pattern''' </ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [[BR]]</span></td>
                      </tr><tr>
                        <th>Â </th><th>57</th><td class="r"><span></span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>58</th><td class="r"><span>&nbsp; '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<ins>&nbsp;pattern'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;often consists of wildcards.[[BR]]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Note: ''' </ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; You are required to write an explanation of how/where you use the LIKE predicate in your codebase. You should put this in a text file (plain text or markdown) in your Github repository, for example, "like-predicate.txt", or "like-predicate.md"</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>61</th><th>59</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>62</th><th>60</th><td class="l"><span>&nbsp;* Here are some examples:</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L106">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L104">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>106</th><th>104</th><td class="l"><span>&nbsp;1. Implement the page to do checkout.[[BR]]</span></td>
                  </tr><tr>
                          <th>107</th><th>105</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>108</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>109</th><th>106</th><td class="l"><span>----</span></td>
                  </tr><tr>
                          <th>110</th><th>107</th><td class="l"><span>[[Span(id=BackendAPI)]]</span></td>
                  </tr><tr>
                          <th>111</th><th>108</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>112</th><th>109</th><td class="l"><span>== Frontend-Backend Separation And !DataSource (Optional) ==</span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>113</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>114</th><th>110</th><td class="l"><span>An "old" way to develop Web sites is to use Java Servlet or JSP to generate HTML pages.&nbsp; This approach is gradually becoming out of date and no longer considered a good practice. In project 2, we suggest you separate the frontend and backend. The frontend fetches the data by sending HTTP requests to the backend and then displays the returned data. The Java Servlet backend only provides API in a JSON format to the frontend. The frontend needs to be written in HTML, CSS, and JS files. '''This approach is not required, but if you choose to implement this way, you will get 5% extra credit on project 2.'''</span></td>
                  </tr><tr>
                          <th>115</th><th>111</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>116</th><th>Â </th><td class="l"><span>This approach involves lots of !JavaScript and jQuery programming, so we highly recommend you to go through this very nice online tutorial:&nbsp; [http://jqfundamentals.com/ http://jqfundamentals.com/] </span></td>
                      </tr><tr>
                        <th>117</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>118</th><th>Â </th><td class="l"><span>===&nbsp; &nbsp; &nbsp; &nbsp;GET API example ===</span></td>
                      </tr><tr>
                        <th>119</th><th>Â </th><td class="l"><span>Here's an example [https://github.com/UCI-Chenli-teaching/project1-api-example project1-api-example] that uses this approach to show a list of stars, which is similar to the project1-star-example we provided in project 1. </span></td>
                      </tr><tr>
                        <th>120</th><th>Â </th><td class="l"><span>Note starting with this example we use !DataSource managed by Tomcat, thus we don't have to set database information in each servlet. To config a !DataSource, following tutorial here&nbsp; [https://tomcat.apache.org/tomcat-8.0-doc/jndi-datasource-examples-howto.html https://tomcat.apache.org/tomcat-8.0-doc/jndi-datasource-examples-howto.html] </span></td>
                      </tr><tr>
                        <th>121</th><th>Â </th><td class="l"><span>Follow the instruction on README.md to deploy and test the examples on tomcat. </span></td>
                      </tr><tr>
                        <th>122</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>123</th><th>Â </th><td class="l"><span>===&nbsp; &nbsp; &nbsp; &nbsp;POST API example ===</span></td>
                      </tr><tr>
                        <th>124</th><th>Â </th><td class="l"><span>Here's an example [https://github.com/UCI-Chenli-teaching/2019w-project2-login-example project2-login-example] to show you how to implement the login feature using the new frontend-backend-separation design.</span></td>
                      </tr><tr>
                        <th>125</th><th>Â </th><td class="l"><span>Follow the instruction on README.md to deploy and test the examples on tomcat. </span></td>
                      </tr><tr>
                        <th>126</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>127</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>128</th><th>Â </th><td class="l"><span></span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>112</th><td class="r"><span>This approach involves lots of !JavaScript and jQuery programming, so we highly recommend you to go through this very nice online tutorial:&nbsp; http://jqfundamentals.com/</span></td>
                      </tr><tr>
                        <th>Â </th><th>113</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>114</th><td class="r"><span>=== GET API example ===</span></td>
                      </tr><tr>
                        <th>Â </th><th>115</th><td class="r"><span>Here's an example [https://github.com/UCI-Chenli-teaching/project1-api-example project1-api-example] that uses this approach to show a list of stars, which is similar to the project1-star-example we provided in project 1.&nbsp; Note starting with this example we use !DataSource managed by Tomcat, thus we don't have to set database information in each servlet. To config a !DataSource, following tutorial here&nbsp; https://tomcat.apache.org/tomcat-8.0-doc/jndi-datasource-examples-howto.html&nbsp; Follow the instruction on README.md to deploy and test the examples on tomcat.</span></td>
                      </tr><tr>
                        <th>Â </th><th>116</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>117</th><td class="r"><span>=== POST API example ===</span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>118</th><td class="r"><span>Here's an example [https://github.com/UCI-Chenli-teaching/2019w-project2-login-example project2-login-example] to show you how to implement the login feature using the new frontend-backend-separation design. Follow the instruction on README.md to deploy and test the examples on tomcat.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>129</th><th>119</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>130</th><th>120</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L138">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L128">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>138</th><th>128</th><td class="l"><span>Here's an example [https://github.com/UCI-Chenli-teaching/2019w-project2-form-example project2-form-example] to show you how to implement an HTML &lt;form&gt; to send user search query to the backend, and display the search result within an HTML &lt;table&gt;.</span></td>
                  </tr><tr>
                          <th>139</th><th>129</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>140</th><th>Â </th><td class="l"><span>Follow the instruction on README.md to deploy the example on tomcat. </span></td>
                      </tr><tr>
                        <th>141</th><th>Â </th><td class="l"><span>Click the link http://localhost:8080/project2-form-example,&nbsp; then enter the search entry and click the "Submit Order" button.&nbsp; It will take the value in the "Last Name" box to query a backend credit card table to retrieve records with that last name.</span></td>
                      </tr><tr>
                        <th>142</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>143</th><th>Â </th><td class="l"><span>Note: In the project2-form-example, we used {{{@WebServlet}}} annotation to declare the configuration of a Servlet {{{FormServlet}}} right on top of class Form definition. This is a relatively new feature supported since Servlet 3.0. In order to scan web.xml properly with Servlet 3.0 or newer, you will need to modify the web.xml as followed:</span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>130</th><td class="r"><span>Follow the instruction on README.md to deploy the example on tomcat.&nbsp; Click the link http://localhost:8080/project2-form-example,&nbsp; then enter the search entry and click the "Submit Order" button.&nbsp; It will take the value in the "Last Name" box to query a backend credit card table to retrieve records with that last name.</span></td>
                      </tr><tr>
                        <th>Â </th><th>131</th><td class="r"><span></span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>132</th><td class="r"><span>Note: In the project2-form-example, we used `@WebServlet` annotation to declare the configuration of a Servlet `FormServlet` right on top of class Form definition. This is a relatively new feature supported since Servlet 3.0. In order to scan web.xml properly with Servlet 3.0 or newer, you will need to modify the web.xml as followed:</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>144</th><th>133</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>145</th><th>134</th><td class="l"><span>{{{</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L150">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L139">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>150</th><th>139</th><td class="l"><span>&nbsp; &nbsp; version="3.0"&gt;</span></td>
                  </tr><tr>
                          <th>151</th><th>140</th><td class="l"><span>}}}</span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>152</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>153</th><th>Â </th><td class="l"><span>For more information: </span></td>
                      </tr><tr>
                        <th>154</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>155</th><th>Â </th><td class="l"><span>* [https://stackoverflow.com/questions/6535676/webservlet-annotation-with-tomcat-7 @WebServlet annotation with Tomcat]</span></td>
                      </tr><tr>
                        <th>156</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>157</th><th>Â </th><td class="l"><span></span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>141</th><td class="r"><span>For more information:</span></td>
                      </tr><tr>
                        <th>Â </th><th>142</th><td class="r"><span></span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>143</th><td class="r"><span>&nbsp;* [https://stackoverflow.com/questions/6535676/webservlet-annotation-with-tomcat-7 @WebServlet annotation with Tomcat]</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>158</th><th>144</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>159</th><th>145</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L161">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L147">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>161</th><th>147</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>162</th><th>148</th><td class="l"><span>== Servlet session examples ==</span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>163</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>164</th><th>149</th><td class="l"><span>Session provides a way to identify a user across more than one page request or visit a website and to store information about that user.</span></td>
                  </tr><tr>
                          <th>165</th><th>150</th><td class="l"><span></span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L177">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L162">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>177</th><th>162</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>178</th><th>163</th><td class="l"><span>== JSP example (Optional) ==</span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>179</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>180</th><th>Â </th><td class="l"><span>An alternative technology to use is JSP (Java Servlet Pages). JSP is old technology, but it's still very handy to use. Normal Java Servlet lets you write HTML string in the print statements in Java, which is clumsy. JSP enables you to conveniently write Java code inside HTML. </span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>164</th><td class="r"><span>An alternative technology to use is JSP (Java Servlet Pages). JSP is old technology, but it's still very handy to use. Normal Java Servlet lets you write HTML string in the print statements in Java, which is clumsy. JSP enables you to conveniently write Java code inside HTML.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>181</th><th>165</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>182</th><th>166</th><td class="l"><span>Here's an example [https://github.com/UCI-Chenli-teaching/2019w-project2-jsp-example project2-jsp-example] that generates the HTML page with JSP, similar to the project1-star-example.</span></td>
                  </tr><tr>
                          <th>183</th><th>167</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>184</th><th>Â </th><td class="l"><span>Follow the instruction on README.md to deploy the example on tomcat. <del></del></span></td>
                      </tr><tr>
                        <th>185</th><th>Â </th><td class="l"><span>Then click:</span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>168</th><td class="r"><span>Follow the instruction on README.md to deploy the example on tomcat. <ins>&nbsp;Then click:</ins></span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>169</th><td class="r"><span></span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>186</th><th>170</th><td class="l"><span>&nbsp; http://localhost:8080/project2-jsp-example/index.jsp</span></td>
                  </tr><tr>
                          <th>187</th><th>171</th><td class="l"><span></span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L193">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L177">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>193</th><th>177</th><td class="l"><span>&nbsp;* https://www.guru99.com/jsp-tutorial.html</span></td>
                  </tr><tr>
                          <th>194</th><th>178</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>195</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>196</th><th>179</th><td class="l"><span>----</span></td>
                  </tr><tr>
                          <th>197</th><th>180</th><td class="l"><span>[[Span(id=DeploymentOnAWS)]]</span></td>
                  </tr><tr>
                          <th>198</th><th>181</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>199</th><th>182</th><td class="l"><span>== Deployment On AWS and Submissions ==</span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>200</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>201</th><th>183</th><td class="l"><span>Use Github for your project 2 code and deploy on AWS, similar to what you have done in project 1.</span></td>
                  </tr><tr>
                          <th>202</th><th>184</th><td class="l"><span></span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L205">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L187">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>205</th><th>187</th><td class="l"><span>b) Make sure that if you git clone your project to a new environment, it will run correctly, especially on AWS, because you will clone a version to AWS instance and demo with it.</span></td>
                  </tr><tr>
                          <th>206</th><th>188</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>207</th><th>Â </th><td class="l"><span>c) The submission usually should be IDE free. So only commit your .html, .js, .css, .java, README.md, .gitignore, etc. </span></td>
                      </tr><tr>
                        <th>208</th><th>Â </th><td class="l"><span>Do not commit IDE setting files, for example, .eclipse folder, .idea folder. These should be included in the .gitignore file.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>189</th><td class="r"><span>c) The submission usually should be IDE free. So only commit your .html, .js, .css, .java, README.md, .gitignore, etc.&nbsp; Do not commit IDE setting files, for example, .eclipse folder, .idea folder. These should be included in the .gitignore file.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>209</th><th>190</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>210</th><th>191</th><td class="l"><span>d) '''Do not use the upload file feature in Github to submit your codebase.'''</span></td>
                  </tr><tr>
                          <th>211</th><th>192</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>212</th><th>Â </th><td class="l"><span>e) We will run a script to get the '''LAST''' commit on '''github master branch''' within 24 hours after the due time (grace period). </span></td>
                      </tr><tr>
                        <th>213</th><th>Â </th><td class="l"><span>If you want to use the grace period (with 10 points marked), you can keep pushing commits to github within 24 hours. </span></td>
                      </tr><tr>
                        <th>214</th><th>Â </th><td class="l"><span>If you do not want to use grace period, '''DO NOT''' push any commits to github until the grace period is passed. You can keep editing and commit locally if you want though.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>193</th><td class="r"><span>e) We will run a script to get the '''LAST''' commit on '''github master branch''' within 24 hours after the due time (grace period).&nbsp; If you want to use the grace period (with 10 points marked), you can keep pushing commits to github within 24 hours.&nbsp; If you do not want to use grace period, '''DO NOT''' push any commits to github until the grace period is passed. You can keep editing and commit locally if you want though.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>215</th><th>194</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>216</th><th>195</th><td class="l"><span>f) Any commits pushed to github after grace period will be ignored.</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L218">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L197">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>218</th><th>197</th><td class="l"><span>g) After the grace period, we will post a google sheet containing the last commit that we find on github. Please check and confirm it because you will need to demo with this commit.</span></td>
                  </tr><tr>
                          <th>219</th><th>198</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>220</th><th>Â </th><td class="l"><span>h) Signup for demo slots. Demo signup sheet will be posted separately after due. </span></td>
                      </tr><tr>
                        <th>221</th><th>Â </th><td class="l"><span></span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>199</th><td class="r"><span>h) Signup for demo slots. Demo signup sheet will be posted separately after due.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>222</th><th>200</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>223</th><th>201</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L234">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L212">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>234</th><th>212</th><td class="l"><span>You could refer to this [https://docs.google.com/spreadsheets/d/1e3sr9DYy3OXAxaD5s0dYzAJ1HbjuuR7aJvyP2JT3Ix4/edit#gid=940689423 checklist] for detailed criteria.</span></td>
                  </tr><tr>
                          <th>235</th><th>213</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>236</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>237</th><th>214</th><td class="l"><span>=== Follow these steps when showing the demo to the TA ===</span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="first">
                          <th>238</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr class="last">
                          <th>239</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>240</th><th>215</th><td class="l"><span>a) Prior to the demo, make sure your AWS instance is up and running, everything is working fine, data is populated, etc... Don't deploy the project 2 app on AWS Tomcat yet.</span></td>
                  </tr><tr>
                          <th>241</th><th>216</th><td class="l"><span></span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=8#L246">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=9#L221">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>246</th><th>221</th><td class="l"><span>d) The TA will ask you to briefly explain your codebase or explain how certain functionalities are implemented. You need to show that you understand what's going on with your project. Failing to answer the questions will lead to deductions on your grade.</span></td>
                  </tr><tr>
                          <th>247</th><th>222</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>248</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>249</th><th>223</th><td class="l"><span>'''Important''': there are lots of functionalities to show during the demo and the time is very limited. '''Unable to finish the demo under 15 minutes will be aborted, rescheduled with 10% penalty in the current project.''' '''Be prepared''' when coming to the demo.</span></td>
                  </tr><tr>
                          <th>250</th><th>224</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>251</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>252</th><th>225</th><td class="l"><span>----</span></td>
                  </tr><tr>
                          <th>253</th><th>226</th><td class="l"><span>== If you chose a different domain ==</span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>254</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>255</th><th>Â </th><td class="l"><span>You may design your own flow of interfaces that is suitable for your application. However, your application must cover the functionalities mentioned above, including login, conditional search, browsing, selection, sorting, navigation between pages, and error handling. If your domain doesn't require a shopping cart and checkout, come up with two features that are comparable.&nbsp; You are required to draw your application workflow (similar to the Fabflix diagram above) and present it during the demo session. It is your responsibility to make sure that your design and implementation meet all the requirements. If you are not sure about it, make sure to post it on Piazza or come to office hours to discuss.&nbsp; </span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>227</th><td class="r"><span>You may design your own flow of interfaces that is suitable for your application. However, your application must cover the functionalities mentioned above, including login, conditional search, browsing, selection, sorting, navigation between pages, and error handling. If your domain doesn't require a shopping cart and checkout, come up with two features that are comparable.&nbsp; You are required to draw your application workflow (similar to the Fabflix diagram above) and present it during the demo session. It is your responsibility to make sure that your design and implementation meet all the requirements. If you are not sure about it, make sure to post it on Piazza or come to office hours to discuss.</span></td>
                      </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
      </div>
  </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/wiki/public/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/wiki/public/about"><strong>Trac 1.0.13</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ