¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1388¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 06 Apr 2017 21:08:50 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"56c-54c85ea68b3e9"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXMon, 11 Feb 2019 06:59:19 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYl<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, November 20, 2009</title>
</head>
<body>
<a href="/~theory/"><img src="/~theory/logo/shortTheory.gif" width="
521" height="82" border="0" alt="ICS Theory Group"></a>
<h2> November 20, Fall Quarter 2009: Thoery Seminar </h2>
<h3>1:00pm in 1423 Bren Hall</h3>
<h1>   
Preprocessing
Imprecise Points for Efficient Triangulation
</h1>
<h2> Maarten Loffler, UC Irvine </h2>


<p>

Traditional algorithms in computational geometry often take a set of
points in the plane as input. An underlying assumption of these algorithms
is that the input points are given precisely. In practice, data is often
collected by imperfect methods and hence imprecise, and the validity of
the output of these algorithms can be questioned. Still, we often have
some information about the imprecision of the points available, such as an
error region around each point.

We investigate what the value of this information is. In this talk, we
show how to preprocess a set of disjoint regions in the plane of total
complexity n in O(n log n) time so that if later one point per set is
specified with precise coordinates, a triangulation of the points can be
computed in linear time. We also show how to compute the Delaunay
triangulation in linear time, but with more restrictions on the shapes of
the regions.


</body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ