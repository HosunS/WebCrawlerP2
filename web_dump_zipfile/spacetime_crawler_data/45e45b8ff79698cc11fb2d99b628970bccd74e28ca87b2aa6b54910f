¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD2627¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 18 Jan 2019 21:54:44 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"1a10-57fc28f17f5c4-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 01:43:21 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
Int. Colloq. Automata, Languages, and Programming (ICALP)
</h2>
<ul>
<li><b>Reset sequences for monotonic automata</b>.<br>
D. Eppstein.<br>
<i>15th Int. Coll. Automata, Languages and Programming,</i>
Tampere, Finland, 1988.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 317, 1988, pp. 230&ndash;238.<br>
<a href="Epp-SJC-90.pdf"><i>SIAM J. Computing</i> 19 (3): 500&ndash;510, 1990</a>.
<p>
Automata theory.
A reset sequence for a DFA is an input such that, no matter which
state the DFA starts in, it ends up after the input in a known state.
These have been used by Natarajan and Goldberg for certain robot motion
planning problems (in fact the conference version of this paper used
the title "Reset sequences for finite automata
with application to design of parts orienters"), and also in coding
theory where they arise in the design of
self-synchronizing codes.  This paper considers DFAs in which the
transition functions respect a given cyclic ordering of the states, and
shows that their shortest reset sequences can be found quickly.
It also considers parallel algorithms for the problem.
There remains open a gap between <i>n<sup>2</sup></i> and <i>n<sup>3</sup></i>
in the maximum length of reset sequences for general automata.
<p>(<a href="/~eppstein/bibs/eppstein.html#Reset sequences for monotonic automata">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Reset-sequences-for-monotonic-automata.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein90reset.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=681434">ACM DL (ICALP)</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=80025">ACM DL (SJC)</a>)
<p>
<li><b>Parallel algorithmic techniques for combinatorial computation</b>.<br>
D. Eppstein and
<a href="//www.scs.gatech.edu/people/zvi-galil">Z. Galil</a>.<br>
<i>Ann. Rev. Comput. Sci.</i> 3: 233&ndash;283, 1988.<br>
Invited talk by Z. Galil,
<a href="EppGal-ICALP-89.pdf"><i>16th Int. Coll. Automata, Languages and Programming,</i> Stresa, Italy, 1989</a>.<br>
<a href="//doi.org/10.1007/BFb0035768">Springer, <i>Lecture Notes in Comp. Sci.</i> 372, 1989, pp. 304&ndash;318</a>.
<p>
This survey on parallel algorithms emphasized the use of basic
subroutines such as prefix sums, Euler tours, ear decomposition, and matrix
multiplication for solving more complicated graph problems.
<p>(<a href="/~eppstein/bibs/eppstein.html#Parallel algorithmic techniques for combinatorial computation">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Parallel-algorithmic-techniques-for-combinatorial-computation.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein88parallel.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=53603">ACM DL (ARCS)</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=681611">ACM DL (ICALP)</a>)
<p>
<li><b>The expected extremes in a Delaunay triangulation</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
D. Eppstein, and F. Yao.<br>
<i>18th Int. Coll. Automata, Languages and Programming,</i>
Madrid, Spain, 1991.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 510, 1991, 674&ndash;685.<br>
<a href="BerEppYao-IJCGA-91.pdf"><i>Int. J. Comp. Geom. &amp; Appl.</i> 1 (1): 79&ndash;92, 1991</a>.
<p>
Discusses the expected behavior of Delaunay triangulations for
points chosen uniformly at random (without edge effects).
The main result is that within a region containing <i>n</i> points,
the expected maximum degree is bounded to within a constant factor
of log <i>n</i> / log log <i>n.</i>
<p>(<a href="/~eppstein/bibs/eppstein.html#The expected extremes in a Delaunay triangulation">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/The-expected-extremes-in-a-Delaunay-triangulation.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/bern91expected.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=111766">ACM DL</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=684542">ACM DL (2)</a>)
<p>
<li><b>Stable-matching Voronoi diagrams:
combinatorial complexity and algorithms</b>.<br>
<a href="//www.cs.technion.ac.il/~barequet/">G. Barequet</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
N. Mamano.<br>
<a href="//arxiv.org/abs/1804.09411">arXiv:1804.09411</a><br>
<i>Proc. 45th International Colloquium on Automata, Languages, and
Programming (ICALP 2018)</i>, Prague.<br>
<a href="//doi.org/10.4230/LIPIcs.ICALP.2018.89">Leibniz International
Proceedings in Informatics (LIPIcs) 107, pp. 89:1&ndash;89:14</a>.<br>
<p>
The stable-matching Voronoi diagram of a collection of point sites in
the plane, each with a specified area, is a collection of disjoint
regions of the plane, one for each site and having the specified area,
so that no pair of a point and a site are closer to each other than to
the farthest other site and point that they may be matched to.
We prove nearly-matching upper and lower bounds on the combinatorial
complexity of these diagrams and provide algorithms that can compute them
in a polynomial number of primitive steps.
<p>
<li><b>Optimally sorting evolving data</b>.<br>
J. Besa,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
T. Johnson.<br>
<a href="//arxiv.org/abs/1805.03350">arXiv:1805.03350</a><br>
<i>Proc. 45th International Colloquium on Automata, Languages, and
Programming (ICALP 2018)</i>, Prague.<br>
<a href="//doi.org/10.4230/LIPIcs.ICALP.2018.81">Leibniz International Proceedings in Informatics (LIPIcs) 107, pp. 81:1&ndash;81:13</a>.<br>
<p>
Suppose that a collection of objects has a linear order that is evolving
by swaps of randomly chosen consecutive elements. We would like to
maintain an approximation to this order using an algorithm that performs
one comparison per swap. We show that repeated insertion sort can
maintain linear inversion distance from the underlying order, the best
possible.
<p>
</ul>

<hr><p>
<a href="conf.html">Conferences</a> &ndash;
<a href="/~eppstein/pubs/">Publications</a> &ndash;
<a href="/~eppstein/">David Eppstein</a> &ndash;
<a href="/~theory/">Theory Group</a> &ndash;
<a href="/">Inf. &amp; Comp. Sci.</a> &ndash;
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ