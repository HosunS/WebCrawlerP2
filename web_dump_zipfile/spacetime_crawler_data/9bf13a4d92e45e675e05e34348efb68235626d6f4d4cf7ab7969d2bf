¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalueˆ¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE10805¢Ak¢DtypeEvalueSContent-DispositionAv¢DtypeEvalueX+attachment; filename=cs122b-2017-winter.txt¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueXitrac_session=beb7bfb11a7426003f713df0; expires=Thu, 09 May 2019 04:22:36 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 04:22:36 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain;charset=utf-8Kraw_content¢DtypeEvalueY*5[[PageOutline]]

= CS122B Winter 2017: Projects in Databases and Web Applications =
Time: T/Th 11:00 am â€“ 12:20 pm (Check [https://www.reg.uci.edu/calendars/quarterly/2015-2016/quarterly15-16.html UCI Calendar] for holiday information)[[BR]]   Location: [https://eee.uci.edu/toolbox/roomfinder/class.php?ccode=34150&quarter=W17 HSLH 100A].

 * '''Instructor''': [http://www.ics.uci.edu/~chenli Chen Li] chenli AT ics.uci.edu [[BR]]  Office hours: !Tuesdays/Thursdays, 9:50 pm - 10:50 pm, DBH 2092
 * '''TA''': Nailah Alhassoun nailahAT uci.edu  [[BR]] Office hours: TBD[[BR]]
 * '''Reader''': Chen Luo, cluo8 AT uci.edu [[BR]]

== Online Discussion ==
 * '''Piazza ''': http://piazza.com/uci/winter2016/cs122b [[BR]]

== Projects (Subject to change) ==
 * [https://docs.google.com/spreadsheets/d/1PfHaHOoQ4iW-5OfHA8AF1qwJeVbw4Gqxyoz_3AORU8Y/edit?usp=sharing Group Signup Sheet]
 * [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project1 Project 1]: MySQL creation, JDBC, Tomcat, AWS. '''Due: 1/13/2016, Wednesday, 11:45 pm. Submit on EEE'''.
 * [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project2 Project 2]: Developing Fablix Web site. '''Due: 2/1/2016, Monday, 11:45 pm. Submit on EEE'''.  [http://gateway.hopto.org:9000/fabflix An earlier demo]
 * [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project3 Project 3]: Securing and Tuning Fabflix. '''Due: 2/15/2016, Monday, 11:45 pm. Submit on EEE'''.
 * [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project4 Project 4]: XML Parsing, Ajax, and FULLTEXT Search.Â '''Due: Feb. 29, 2016, Monday, 11:45 pm. Submit on EEE'''
 * [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project5 Project 5]: Scaling Fabfix and supporting Android. '''Due: March 13, 2016, Sunday, 11:45 pm. Submit on EEE'''

== Syllabus ==
|| No. || '''Date''' || '''Notes''' ||
|| 01 || 01/05/16, Tu || [attachment:notes01-intro.ppt Introduction], [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project1 Project 1] ||
|| 02 || 01/07/16, Th || [wiki:cs122b-2016-winter-project1#setup-aws Setup AWS], [wiki:cs122b-2016-winter-project1#jdbc-samples Sample JDBC Programs] ||
|| 03 || 01/12/16, Tu || [attachment:notes02-odbc.ppt ODBC] ||
|| 04 || 01/14/16, Th || [http://jeromejaglale.com/doc/ubuntu/mysql_enable_logging MySQL Logging], [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project2 Project 2], [wiki:cs122b-2016-winter-project2#TomcatTestExample TomcatTest Example], [wiki:cs122b-2016-winter-project2#FormExample Form Example] ||
|| 05 || 01/19/16, Tu || [http://serverfault.com/questions/127640/where-are-my-tomcat-logs Tomcat Logging], [wiki:cs122b-2016-winter-project2#ServletSession Servlet Session Example], [https://www.youtube.com/watch?v=VqW9fnkhqrs '"Cookie Idea" in Movie Memento'] ||
|| 06 || 01/21/16, Th || [http://www.w3schools.com/tags/ref_httpmethods.asp GET/POST methods], Shopping cart (client vs server),  Caching, [http://www.petefreitag.com/item/451.cfm Pagination], [wiki:cs122b-2016-winter-project2#Pooling Connection Pooling] ||
|| 07 || 01/26/16, Tu || "Browsing", "Searching", [http://www.javascript-coder.com/window-popup/javascript-window-open.phtml Open a Window Using Javascript], Javascript debugging,  [wiki:cs122b-2016-winter-project2#JSP JSP], [attachment:notes03-webapps.ppt Web Application Architectures] ||
|| 08 || 01/28/16, Th || CGI, [http://www.fastcgi.com/ FastCGI], [http://www.w3schools.com/asp/showasp.asp?filename=demo_text ASP], Quiz 1 ||
|| 09 || 02/01/16, Tu || [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project3 Project 3], reCAPTCHA, HTTPS ||
|| 10 || 02/04/16, Th || Jmeter ||
|| 11 || 02/09/16, Tu || [attachment:notes05-extend-db.ppt Extending DB Functionalities], [http://flamingo.ics.uci.edu/toolkit/ UDF Example in Linux] ||
|| 12 || 02/11/16, Th || [attachment:notes04-performance-tuning.ppt Performance tuning], XML Overview ||
|| 13 || 02/16/16, Tu || [attachment:notes06-xml.ppt XML Parsing], [attachment:wiki:cs122b-2016-winter-project4:employees.xml Sample Employee XML File], [attachment:wiki:cs122b-2016-winter-project4:SAXParserExample.java SAX Parser], [attachment:wiki:cs122b-2016-winter-project4:Employee.java Employee.java], [attachment:wiki:cs122b-2016-winter-project4:DomParserExample.java DOM Parser] ||
|| 14 || 02/18/16, Th || [wiki:cs122b-2016-winter-project4#AjaxExample Ajax Example], Ajax Task of Project 4, Quiz 2 ||
|| 15 || 02/23/16, Tu || [wiki:cs122b-2016-winter-mysql-fulltext MySQL Full-Text Search] ([http://dev.mysql.com/doc/refman/5.0/en//fulltext-search.html 1], [http://dev.mysql.com/doc/refman/5.0/en//fulltext-boolean.html 2]), [attachment:notes07-inverted-index.ppt Inverted Index] ||
|| 16 || 02/25/16, Th || [http://publib.boulder.ibm.com/infocenter/iseries/v6r1m0/index.jsp?topic=/rzaha/transaut.htm AutoCommit], [attachment:BatchInsert.java Batch Insert], [https://dev.mysql.com/doc/refman/5.1/en/load-data.html Load data file], [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project5-mysql-master-slave MySQL Replication] ||
|| 17 || 03/01/16, Tu || Load balancing in  [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project5 Project 5] ||
|| 18 || 03/03/16, Th || Android project in [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-winter-project5 Project 5] ||
|| 19 || 03/08/16, Tu || MySQL Replication in Project 5, Load Balancing on AWS, [http://developer.android.com/guide/components/activities.html#Lifecycle Android Activity Lifecycle],  [http://stackoverflow.com/questions/16769654/how-to-use-onsaveinstancestate-and-onrestoreinstancestate onSaveInstanceState()] ||
|| 20 || 03/10/16, Th || [attachment:notes08-nosql-hadoop.ppt NoSQL/Hadoop], 3rd quiz, Beyond CS122B ||

== Course Information ==
=== Overview ===
This course exposes students to advanced programming concepts and provides students with a greater focus on using DBMS techniques to build Web-based applications. It is intended for two purposes: (1) It introduces students to the modern data management techniques including database connectivity, Web application development, extending database functions, database administration, and XML. (2) It teaches students how to use these technologies to build real-world applications. The course builds on [http://www.ics.uci.edu/~cs122a CS122A], which introduces students to the classical relational databases and SQL programming.  The course was recently renamed from "Projects in Database Management" to "Projects in Databases and Web Applications" to better reflect its content and goals.

=== More Focus on Cloud Services ===
For the first time, we will heavily use Amazon AWS services in the course.  You are expected to launch instances on AWS to deploy some of the projects you are developing.  AWS provides free-tier 64-bit Ubuntu instances!  In addition, you are welcome to participate in the [https://aws.amazon.com/education/awseducate/ AWS Educate] program, which can provide $100 AWS credits per student. (I believe UCI is a member institution.)  We will provide more instructions about how to use their services to deploy your projects.

=== Prerequisites ===
You should have taken CS122A or an equivalent course. In addition, you should have a reasonable understanding of core computer science concepts, good familiarity with relational databases (equivalent of CS122A), good programming skills in Java, skills to learn other programming languages, and familiarity with basic undergraduate-level operating system concepts. Above all, you need to have a positive attitude towards learning, no inhibitions about working in groups and learning from each other.  '''If you are not sure whether you meet requirements, do talk to the instructor after the first lecture to make sure you are ready to take this course.'''

=== Grading Breakdown ===
Projects: 88% [[BR]] In-class Quizzes: 11% [[BR]] Participation in EEE Class Evaluation: 1% [[BR]]

For all the graded projects and exams, if you disagree with the grading, you can discuss with us within two weeks after they are returned. After that, all the grades will be finalized.

For each project demo, we assume each group can provide their own computing environment (either a laptop or a remote desktop) to show the demo.  If you cannot provide such an environment, please let us know before the demo, so that we can find a solution.

=== Textbooks ===
Many online tutorials.

=== Working in Groups ===
Working together on projects is strongly encouraged. You can form groups of no more than ''3 (three)'' students and submit one homework solution per group making sure that the names of all the group members appear on the first page. Work in groups will be graded on a per group basis.

Students may leave their existing group in the quarter. But they cannot join any new group after the end of the '''second week'''. For each group splitting, the group members should tell the instructor at least '''two weeks''' before the corresponding project/homework deadline.

At the end of the quarter, I will announce the top 3 students based on their overall performance in the class (projects and quizzes).  I will host a lunch with these students :-)

=== Project Late Policy ===
[[Span(id=late-policy)]]

 * The official due date for each assignment is listed here on the wiki, and it is expected that students will turn the work in on or before that date.
 * We will offer a 24-hour "grace period" for each assignment, and will therefore accept submissions turned in within 24 hours of the due date, with a 10-point penalty.  It's 10 points, not 10 percent.  For example, if your late project got 87 points, then your real score will be 87-10=77 points. Notice that EEE will only keep the latest submission. If so you submit or resubmit the project after the deadline, it will be considered as a late submission.
 * Late assignments will NOT be accepted beyond the grace period, so do always aim to be on time! Please don't even ask, as this is what the 1-day grace period is intended for.

=== Policy on Academic Honesty ===
All students will be expected to adhere to the UCI and ICS Academic Honesty policies (see http://www.editor.uci.edu/catalogue/appx/appx.2.htm#academic and http://www.ics.uci.edu/ugrad/policies/index.php#academic_honesty to read their details). Any student found to be involved in cheating or aiding others in doing so will be academically prosecuted to the maximum extent possible: that means you will fail this course.  Just say ''no'' to cheating!

In case you reuse another party's source code for certain generic tasks (e.g., JDBC access) make sure you explicitly comment on its origin in your source code.

----Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ