¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1130¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 06 Apr 2017 21:08:51 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"46a-54c85ea72163b"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 01 Feb 2019 19:26:41 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYj<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, April 12, 2012</title>
</head>
<body>
<a href="/~theory/"><img src="http://www.ics.uci.edu/~theory/logo/CATOC2.jpg"></a>
<h2><a href="/~theory/269/">CS 269S, Spring 2013: Theory Seminar</a><br>
Bren Hall, Room 1423, 1pm

<hr>
April 12, 2013:</h2>
<h1>
Pretending to factor large numbers on a quantum computer
</h1>
<h2>
by John A. Smolin, Graeme Smith and Alex Vargo 
</h2>
<h2>
Presented by Jenny Lam
</h2>

<p>
ShorÂ’s algorithm for factoring in polynomial time on a quantum 
computer gives an enormous advantage over all known classical 
factoring algorithm. We demonstrate how to factor products of large 
prime numbers using a compiled version of ShorÂ’s quantum factoring 
algorithm. Our technique can factor all products of p, q such that 
p, q are unequal primes greater than two, runs in constant time, and 
requires only two coherent qubits. This illustrates that the correct 
measure of difficulty when implementing ShorÂ’s algorithm is not 
the size of number factored, but the length of the period found. 
</p>

</body>
</html>

Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ