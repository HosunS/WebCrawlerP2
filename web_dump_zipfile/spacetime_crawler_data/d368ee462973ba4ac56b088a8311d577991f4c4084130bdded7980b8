¶Ifinal_url°DtypeLhttp_headers¢DtypeEvalueà¢Ak¢DtypeEvalueQTransfer-EncodingAv¢DtypeEvalueGchunked¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueXI79eed619ece9b34315b1b9f5af9f028a=b2c137d8f190e3c2429b3d8de33eb19c; path=/¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueFPragmaAv¢DtypeEvalueHno-cache¢Ak¢DtypeEvalueMCache-ControlAv¢DtypeEvalueHno-cache¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 01:46:20 GMT¢Ak¢DtypeEvalueCP3PAv¢DtypeEvalueX2CP="NOI ADM DEV PSAi COM NAV OUR OTRo STP IND DEM"¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=utf-8Kraw_content¢DtypeEvalueYNû<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-gb" lang="en-gb" dir="ltr" >
<head>
  <base href="http://tutors.ics.uci.edu/index.php/79-python-resources/104-try-except" />
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="author" content="Super User" />
  <meta name="generator" content="Joomla! - Open Source Content Management" />
  <title>Try, Except, Else, Finally</title>
  <link href="/templates/beez_20/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon" />
  <link rel="stylesheet" href="/templates/system/css/system.css" type="text/css" />
  <link rel="stylesheet" href="/templates/beez_20/css/position.css" type="text/css" media="screen,projection"  />
  <link rel="stylesheet" href="/templates/beez_20/css/layout.css" type="text/css" media="screen,projection"  />
  <link rel="stylesheet" href="/templates/beez_20/css/print.css" type="text/css" media="print"  />
  <link rel="stylesheet" href="/templates/beez_20/css/general.css" type="text/css" />
  <link rel="stylesheet" href="/templates/beez_20/css/personal.css" type="text/css" />
  <script src="/media/system/js/mootools-core.js" type="text/javascript"></script>
  <script src="/media/system/js/core.js" type="text/javascript"></script>
  <script src="/media/system/js/caption.js" type="text/javascript"></script>
  <script src="/media/system/js/mootools-more.js" type="text/javascript"></script>
  <script src="/templates/beez_20/javascript/md_stylechanger.js" type="text/javascript"></script>
  <script src="/templates/beez_20/javascript/hide.js" type="text/javascript"></script>
  <script type="text/javascript">
window.addEvent('load', function() {
				new JCaption('img.caption');
			});
  </script>


<!--[if lte IE 6]>
<link href="/templates/beez_20/css/ieonly.css" rel="stylesheet" type="text/css" />
<style type="text/css">
#line {
  width:98% ;
}
.logoheader {
  height:200px;
}
#header ul.menu {
  display:block !important;
  width:98.2% ;
}
</style>
<![endif]-->

<!--[if IE 7]>
<link href="/templates/beez_20/css/ie7only.css" rel="stylesheet" type="text/css" />
<![endif]-->
<!--<script type="text/javascript">
  var big ='72%';
  var small='53%';
  var altopen='is open';
  var altclose='is closed';
  var bildauf='/templates/beez_20/images/plus.png';
  var bildzu='/templates/beez_20/images/minus.png';
  var rightopen='Open info';
  var rightclose='Close info';
  var fontSizeTitle='Font size';
  var bigger='Bigger';
  var reset='Reset';
  var smaller='Smaller';
  var biggerTitle='Increase size';
  var resetTitle='Revert styles to default';
  var smallerTitle='Decrease size';
</script>-->

</head>

<body>

<div id="all">
        <div id="back">
                <div id="header">
                                <div class="logoheader">
                                        <h1 id="logo">

                                                                                                                                                                                                        <span class="header1">
                                                                                </span></h1>
                                </div><!-- end logoheader -->
                                        <ul class="skiplinks">
                                                <li><a href="#main" class="u2">Skip to content</a></li>
                                                <li><a href="#nav" class="u2">Jump to main navigation and login</a></li>
                                                                                    </ul>
                                        <!--<h2 class="unseen">Nav view search</h2>-->
                                        <h3 class="unseen">Navigation</h3>
                                        
<ul class="menu">
<li class="item-464 active"><a href="/" >Home</a></li><li class="item-469"><a href="/index.php/becoming-a-tutor" >Becoming a Tutor</a></li><li class="item-470"><a href="/index.php/tutor-resources" >Learning Resources</a></li><li class="item-477"><a href="/index.php/tutor-coordinators" >Tutor Coordinators</a></li><li class="item-476"><a href="/index.php/contact" >Contact Us</a></li></ul>

                                        <div id="line">
                                        <!-- <div id="fontsize"></div> -->
                                        <!--<h3 class="unseen">Search</h3> -->
                                        
                                        </div> <!-- end line -->


                        </div><!-- end header -->
                        <div id="contentarea">
                                        <div id="breadcrumbs">

                                                        

                                        </div>

                                        

                                                        <div class="left1 leftbigger" id="nav">
                                                   <div class="moduletable_menu">
 <h3><span
	class="backh"><span class="backh2"><span class="backh3">This Site</span></span></span></h3>
 
<ul class="menu">
<li class="item-464 active"><a href="/" >Home</a></li><li class="item-469"><a href="/index.php/becoming-a-tutor" >Becoming a Tutor</a></li><li class="item-470"><a href="/index.php/tutor-resources" >Learning Resources</a></li><li class="item-477"><a href="/index.php/tutor-coordinators" >Tutor Coordinators</a></li><li class="item-476"><a href="/index.php/contact" >Contact Us</a></li></ul>
</div>

                                                                
                                                                


                                                        </div><!-- end navi -->
               
                                        <div id="wrapper2" >

                                                <div id="main">

                                                
                                                        
<div id="system-message-container">
</div>
                                                        <div class="item-page">

	<h2>
			<a href="/index.php/79-python-resources/104-try-except">
		Try, Except, Else, Finally</a>
		</h2>








<p><strong>By Eric Carb</strong></p>
<p style="text-align: justify;">Exception Control Flow - Try, Except, Else, Finally</p>
<p style="text-align: justify;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Exceptions in Python are objects that represent errors. Exceptions can be raised in many ways, such as passing invalid arguments to functions (‚ÄúBoo‚Äù + 7), performing certain illegal operations (12 / 0) or even explicitly (raise TypeError). By default, exceptions stop Python programs and print a Traceback to the console with information about the exception and how it was raised. However, the try statement exists to give control flow to exceptions so that you can prevent your program from crashing and even use exception objects to your advantage. This is commonly referred to as ‚Äúcatching‚Äù an exception. The try statement looks like this:</p>
<p style="text-align: justify;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><i>try:</i></p>
<p style="margin-left: 1in; text-align: justify;">The code with the exception that you want to catch. If an exception is raised, control flow leaves this block immediately and goes to the <i>except</i> block</p>
<p style="text-align: justify;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><i>except [(Exception[, Exception])] [as VAR]:</i></p>
<p style="margin-left: 1in; text-align: justify;">This code is executed only if an exception was raised in the <i>try</i> block. Code executed in this block is just like normal code: if there is an exception, it will not be automatically caught (and probably stop the program).</p>
<p style="margin-left: 1in; text-align: justify;">You can optionally name specific types of exceptions in the <i>except</i> statements, in which case the block will only be executed if one of the named exceptions was the one raised in <i>try</i>. When naming multiple exceptions, use a tuple. It is legal to have multiple <i>except</i> statements, each of which names different types of exceptions. If no exceptions are named in the <i>except</i> statement, it will catch all exceptions; useful to put after <i>except</i> statements that name exceptions.</p>
<p style="margin-left: 1in; text-align: justify;">Including the <i>as</i> expression with the <i>except</i> statement allows you to store the exception object raised in the <i>try</i> block in a variable and use it within this block. To store an exception in a variable when none are named, name ‚ÄúException‚Äù instead (i.e. except Exception as e). Only one variable can be listed after <i>as</i>.</p>
<p style="margin-left: 1in; text-align: justify;">This block is <strong>required </strong>(even if all it has is <i>pass</i>).</p>
<p style="text-align: justify;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><i>[else:]</i></p>
<p style="margin-left: 1in; text-align: justify;">This code is executed only if no exceptions were raised in the <i>try </i>block. Code executed in this block is just like normal code: if there is an exception, it will not be automatically caught (and probably stop the program). Notice that if the <i>else</i> block is executed, then the <i>except</i> block is not, and vice versa. This block is optional.</p>
<p style="text-align: justify;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><i>[finally:]</i></p>
<p style="margin-left: 1in; text-align: justify;">This code <strong>always</strong> executes after the other blocks, even if there was an uncaught exception (that didn‚Äôt cause a crash, obviously) or a return statement in one of the other blocks. Code executed in this block is just like normal code: if there is an exception, it will not be automatically caught (and probably stop the program). This block is also optional.</p>
<p style="text-align: justify;">Examples:</p>
<table style="border-collapse: collapse; width: 576px;" border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td style="width: 274.5pt; border: 1pt solid black; padding: 5pt;" valign="top" width="366">
<p>def foo1():</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1/0</p>
<p>&nbsp;&nbsp; except:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; print(‚Äòcaught exception‚Äô)</p>
</td>
<td style="width: 157.5pt; border-width: 1pt 1pt 1pt medium; border-style: solid solid solid none; border-color: black black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo1()</p>
<p>caught exception</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo2():</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1/0</p>
<p>&nbsp;&nbsp; except ZeroDivisionError:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(‚Äòcaught ZeroDivisionError‚Äô)</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo2()</p>
<p>caught ZeroDivisionError</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo3():</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1/0</p>
<p>&nbsp;&nbsp; except TypeError:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(‚Äòcaught TypeError‚Äô)</p>
<p>&nbsp;&nbsp; except ZeroDivisionError:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(‚Äòcaught ZeroDivisionError‚Äô)</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo3()</p>
<p>caught ZeroDivisionError</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo4():</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1/0</p>
<p>&nbsp;&nbsp; except (TypeError, ZeroDivisionError):</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(‚Äòcaught TypeError or ZeroDivisionError‚Äô)</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo4()</p>
<p>caught TypeError or ZeroDivisionError</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo5():</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1/0</p>
<p>&nbsp;&nbsp; except Exception as e:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(e)</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo5()</p>
<p>division by zero*</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo6():</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1/0</p>
<p>&nbsp;&nbsp; except (TypeError, ZeroDivisionError) as e:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(e)</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo6():</p>
<p>division by zero</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo7():</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1/0</p>
<p>&nbsp;&nbsp; except TypeError:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; print(‚Äòcaught TypeError‚Äô)</p>
<p>&nbsp;&nbsp; except:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; print(‚Äòcaught exception‚Äô)</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo7()</p>
<p>caught exception</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo8():</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1/0</p>
<p>&nbsp;&nbsp; except TypeError:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; print(‚Äòcaught TypeError‚Äô)</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo8()</p>
<p>Traceback**</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo9():</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 + 0</p>
<p>&nbsp;&nbsp; except:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; print(‚Äòcaught exception‚Äô)</p>
<p>&nbsp;&nbsp; else:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(‚Äòno exception raised‚Äô)</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo9()</p>
<p>no exception raised</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo10()</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 + 0</p>
<p>&nbsp;&nbsp; except:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; print(‚Äòcaught exception‚Äô)</p>
<p>&nbsp;&nbsp; else:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(‚Äòno exception raised‚Äô)</p>
<p>&nbsp;&nbsp; finally:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; print(‚Äòfinally‚Äô)</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo10()</p>
<p>no exception raised</p>
<p>finally</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
<tr>
<td style="width: 274.5pt; border-width: medium 1pt 1pt; border-style: none solid solid; border-color: -moz-use-text-color black black; padding: 5pt;" valign="top" width="366">
<p>def foo11()</p>
<p>&nbsp;&nbsp; try:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 + 0</p>
<p>&nbsp;&nbsp; except:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0</p>
<p>&nbsp;&nbsp; else:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 1</p>
<p>&nbsp;&nbsp; finally:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; print(‚Äòfinally‚Äô)</p>
</td>
<td style="width: 157.5pt; border-width: medium 1pt 1pt medium; border-style: none solid solid none; border-color: -moz-use-text-color black black -moz-use-text-color; padding: 5pt;" valign="top" width="210">
<p>&gt;&gt;&gt;foo11() + 1</p>
<p>finally</p>
<p>2</p>
<p>&gt;&gt;&gt;&nbsp;</p>
</td>
</tr>
</tbody>
</table>
<p style="text-align: justify;">* This is what the ZeroDivisionError object looks like when you print it</p>
<p style="text-align: justify;">** Full traceback message (the red text) too large to display</p> 
	
</div>


                                                </div><!-- end main -->

                                        </div><!-- end wrapper -->

                                
                        
                                <div class="wrap"></div>

                                </div> <!-- end contentarea -->

                        </div><!-- back -->

                </div><!-- all -->

                <div id="footer-outer">
                        
                        <div id="footer-sub">


                                <div id="footer">

                                        
                                        

                                </div><!-- end footer -->

                        </div>

                </div>
        
        </body>
</html>
Mis_redirected¢DtypeEvalueÙIhttp_code¢DtypeEvalue»Qdownload_complete¢DtypeEvalueı