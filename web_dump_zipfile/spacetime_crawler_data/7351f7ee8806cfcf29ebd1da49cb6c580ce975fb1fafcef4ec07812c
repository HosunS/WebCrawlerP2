¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue†¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1297¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 02 Jul 1998 21:10:54 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"511-332031b461380"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 07 Feb 2019 09:46:11 GMTKraw_content¢DtypeEvalueY// Game of Fanorona
// David Eppstein, UC Irvine, 3 Sep 1997
//
// Spawner of all searches

import java.util.*;

class SearchMother implements Observer {
	SearchLog log;
	SearchMother(Game g, SearchLog sl) { log = sl; g.addObserver(this); }
	public void update(Observable g, Object o) {
		if (g == null || !(g instanceof Game)) return;
		Game game = (Game) g;
		Board board = game.getBoard();
		if (!game.humanToMove(board) && !board.gameOver()) {
			Fanorona.showMessage(log, "Computer is searching", true);
			if (board.previousPosition != null) {
				if (game.humanToMove(board.previousPosition)) log.clear();
				else log.addItem("");
			}
			log.addItem("Searching...");

			int ply = 0;
			if (game.getParameter(Options.ONE_PLY)) ply = 1;
			else if (game.getParameter(Options.TWO_PLY)) ply = 2;
			else if (game.getParameter(Options.THREE_PLY)) ply = 3;
			Search search = new Search(game, board, log, ply);
			if (game.getParameter(Options.FAST_SPEED)) search.watcher.setSearchTime(250);
			else if (game.getParameter(Options.MEDIUM_SPEED)) search.watcher.setSearchTime(1500);
			else if (game.getParameter(Options.SLOW_SPEED)) search.watcher.setSearchTime(10000);
			else if (ply == 0) throw new IllegalArgumentException("No speed setting in game parameters");
			search.start();
		}
	}
}Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ