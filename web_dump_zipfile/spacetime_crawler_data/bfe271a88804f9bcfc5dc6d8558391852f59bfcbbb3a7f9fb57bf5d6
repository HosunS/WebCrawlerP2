¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1462¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 06 Apr 2017 21:06:22 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"ca2-54c85e18da2e4-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXTue, 05 Feb 2019 04:27:20 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY¢<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
<title>CompSci 163/265, Spring 2016, Homework 1</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
});
</script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
</head>
<body>
<h1>CompSci 163/265, Spring 2016, Homework 1</h1>
<ol>
<li><p>A cube has eight vertices and twelve edges. One way to represent
this as a graph is to number the vertices from $0$ to $7$, and to
connect two vertices by an undirected edge whenever the binary
representations of their numbers are different in only one bit.
Write down a representation for this graph (with these vertex numbers)
using <a href="https://www.python.org/doc/essays/graphs/">van Rossum's dictionary-of-lists</a> adjacency list format.</p></li>
<li><p>In depth-first search, the order in which we loop over the
outgoing edges from each vertex is arbitrary: if a vertex has $k$
outgoing edges, then there are $k!$ different choices for what order to
loop over them, and this may affect what happens in the rest of the
algorithm. In particular, one graph may have more than one possible
depth first search tree, depending on this choice of loop order. For the
same graph of the cube from problem 1, find the following two different
depth first search trees, both starting from vertex 0:</p>
<ol type="a">
<li><p>a depth first search tree in which every vertex has at most one
child.</p></li>
<li><p>a depth first search tree in which at least one vertex has more
than one child.</p></li></ol></li>
<li><p>(163 students:) List the vertices of the cube (with the same
numbering) in an order that could be generated by performing a
breadth-first search of the cube, starting with vertex 0.</p>
<p>(265 students:) List the vertices of the cube (with the same
numbering) in an order that is sorted by distance from vertex 0, but
could not be generated by performing a breadth-first search of the
cube.</p></li>
<li><p>(163 students:) Define a graph to be "weakly connected" if, for
every two vertices $v$ and $w$, there exists either a path from $v$ to
$w$ or a path from $w$ to $v$ (but not necessarily both).
Draw a directed graph $G$ that obeys all of the following properties:
<ul>
<li><p>$G$ is weakly connected.</p></li>
<li><p>$G$ has at least three strongly connected components.</p></li>
<li><p>At least one of the strongly connected components of $G$ has only
one vertex, and.</p></li>
<li><p>At least one of the strongly connected components of $G$ has
three or more vertices.</p>
</ul>
<p>(265 students:) Define an edge of a directed graph to be "loopy" if
there exists at least one cycle in the graph that contains the given
edge. Describe a linear-time algorithm that lists all of the loopy edges
of a directed graph. (Hint: use the strongly connected component
algorithm as a subroutine. You do not need to describe the details of
this subroutine. You may assume that it outputs each component as a list
of vertices.)</p></li>
</ol>
</body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ