¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueC858¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueXjApache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:53:55 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"35a-4da84c22b52c0"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 01 Feb 2019 22:44:04 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueYZ/*
  $Id: time.h 5713 2010-09-09 03:11:22Z abehm $

  Copyright (C) 2010 by The Regents of the University of California

  Redistribution of this file is permitted under the terms of the BSD
  license.

  Date: 09/18/2008
  Author: Rares Vernica <rares (at) ics.uci.edu>
*/

#ifndef _time_h_
#define _time_h_

#include <sys/time.h>

#include "looptimer.h"

// -- - time measure - --
#define TIME_START struct timeval tStart, tEnd; \
  float _tms; \
  gettimeofday(&tStart, 0)

#define TIME_RESET gettimeofday(&tStart, 0)

#define TIME_END gettimeofday(&tEnd, 0); \
  _tms = (tEnd.tv_sec  - tStart.tv_sec ) * 1000 +  \
  (tEnd.tv_usec - tStart.tv_usec) / 1000.

// -- - progress indicator - --
#define PROGRESS_START(str, cnt) LoopTimer loopTimer; loopTimer.begin(str, cnt)
#define PROGRESS_STEP loopTimer.next()
#define PROGRESS_STOP loopTimer.end()

#endif
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ