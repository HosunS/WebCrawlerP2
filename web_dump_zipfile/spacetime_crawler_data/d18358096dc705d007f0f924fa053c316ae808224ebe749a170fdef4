¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE12112¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 28 Jun 2006 07:14:20 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueT"2f50-41743906aab00"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXWed, 06 Feb 2019 05:58:41 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY/P<html>
<head>

<style type="text/css">
  <! --
  H { font-family: Arial, Helvetica, Modern; }
  H1 { font-family:  Arial, Helvetica, Modern; font-size:large}
  H2 { font-family: 10pt;  Arial,Helvetica,Modern;   
       padding-top: 1; padding-bottom: 1; padding-left: 2; color:black}
  H3 { font-family:    Arial,Helvetica,Modern; background:#aaccaa;  color:black;
       padding-top: 1; padding-bottom: 1; padding-left: 2; font-size:medium }
  P { font-family: Arial; font-size: small; color: black}
  P.important { margin-left: 0.5cm; margin-right: 1cm; color: red }
  LI { margin-left: 0.5cm; font-family: Arial; font-size: small }
  B  { font-size: smaller }
  table.indent { margin-left: 1cm }
  -->
</style>

<title>CCToolbox Documentation: Model Structure Definition</title>

</head>

<body bgcolor="#eeeeee">
 <H2 align=center>Model Structure Definition</H2>



<div align=center>
<a href="http://www.ics.uci.edu/~sgaffney/software/CCT">CCToolbox</a> |
<a href="../#Down">Download</a> |
<a href="./">Documentation</a> |
<a href="http://www.ics.uci.edu/~sgaffney#contact">Contact</a>
</div>

<!-- <a href="./">Documentation home</a> > Model Structure -->




<h3>Description</h3>
<p>Every cluster function in the toolbox returns a model structure that can 
be directly used with other functions in the toolbox. In this section, we list
every possible field that can be returned in a model structure. No single cluster
function will return all of these; only those fields that are relevant are returned.

<p>In the structure definition each row is formatted as follows:
<table class="indent"><tr><td>.field<td>&nbsp;&nbsp;&nbsp; <td>: (data type) comment,</table>
where 'field' lists the exact field name; 'data type' is one of number, string,
struct, or some other size designation such as n-K matrix (an n-by-K matrix); and
'comment' gives a short description of the field.

<p>The definition is split up into two parts. In the first part, the base fields that
are used by every method are listed. The second part lists those fields that
are used by the more advanced clustering and alignment methods. These fields aren't usually
interesting in themselves but are important for the implementation of the clustering
algorithms.

<p>First, we list a number of size variables that are used in the structure
definition.<p>

<table class="indent">
    <tr><td>n<td>&nbsp;&nbsp;&nbsp;&nbsp;   <td>: number of trajectories
    <tr><td>D<td>   <td>: number of dimensions (e.g., 2 for lat and lon)
    <tr><td>K<td>   <td>: number of clusters
    <tr><td>P<td>   <td>: 1 + order of regression model
    <tr><td>I<td>   <td>: number of EM iterations
</table>


<h3>The Base Fields</h3><p>

<table class="indent">
<tr><td>.K<td>              <td>: (number) number of clusters
<tr><td>.order<td>          <td>: (number) order of polynomial regression model
<tr><td>.Options<td>        <td>: (struct) stores various option settings
<tr><td>.method<td>         <td>: (string) method name, see <b>listmodels()</b>
<tr><td>.zero<td>           <td>: (string) type of preprocessing, see <b>trajs2seq()</b>
<tr><td>.Pik<td>            <td>: (n-K matrix) membership probabilities
<tr><td>.Alpha<td>          <td>: (K-vector) k-th mixture weight
<tr><td>.Mu<td>             <td>: (P-K-D matrix) regression parameters
<tr><td>.Sigma<td>          <td>: (K-D matrix) variance param for regression noise model
<tr><td>.Lhood<td>          <td>: (I-vector) sequence of log-likelihood iterates
<tr><td>.NumPoints<td>      <td>: (number) total number of points in all trajs
<tr><td>.C<td>              <td>: (n-vector) most likely classification given .Pik
<tr><td>.TrainLhood<td>     <td>: (number) equal to .Lhood(end)
<tr><td>.TrainLhood_ppt<td> <td>: (number) equal to .TrainLhood/.NumPoints
<tr><td>.NumIndParams<td>   <td>: (number) number of independent parameters estimated
<tr><td>.state<td>          <td>: (vector) stores <b>rand()</b> state information
<tr><td>.nstate<td>         <td>: (vector) stores <b>randn()</b> state information
</table></p>



<h3>The Alignment Fields</h3><p>
<table class="indent">
<tr><td>.Ea<td>             <td>: (n-K matrix) scale parameters (in time)
<tr><td>.Eb<td>             <td>: (n-K matrix) translation parameters (in time)
<tr><td>.Ee<td>             <td>: (n-K-D matrix) scale parameters (measurement space)
<tr><td>.Ef<td>             <td>: (n-K-D matrix) translation parameters (measurement space)
<tr><td>.Va<td>             <td>: (n-K matrix) variance for .Ea
<tr><td>.Vb<td>             <td>: (n-K matrix) variance for .Eb
<tr><td>.Ve<td>             <td>: (n-K-D matrix) variance for .Ee
<tr><td>.Vf<td>             <td>: (n-K-D matrix) variance for .Ef
<tr><td>.Vab<td>            <td>: (n-K matrix) covariance for .Ea and .Eb
<tr><td>.Vef<td>            <td>: (n-K-D matrix) covariance for .Ee and .Ef
<tr><td>.Vae,.Vaf,etc.<td>&nbsp;&nbsp;&nbsp;&nbsp;  <td>: (n-K-D matrix) covariances for listed variables
<tr><td>.R<td>              <td>: (K-1 matrix) variance param for prior on .Ea (also for .Ee when .Ea doesn't exist; this should be changed)
<tr><td>.S<td>              <td>: (K-1 matrix) variance param for prior on .Eb (also for .Ef when .Eb doesn't exist; this should be changed)
<tr><td>.T<td>              <td>: (K-D matrix) variance param for prior on .Ef
<tr><td>.U<td>              <td>: (K-D matrix) variance param for prior on .Ee
</table></p>



<h3>Parameter Explanations</h3>
<p>In this section, a more detailed description for some of the more complex
model structure fields is given.

<p>As an aside, it is important to note that each of following variables 
has an expected value under each cluster (i.e., it's associated structure field
has at least K entries); this is the nature of a mixture model. However, it
is also true that the .E- and .V- parameters are also trajectory-dependent (i.e.,
they have at least n*K entries).

<p>For example, .Ee gives
the expected scale parameter for each trajectory and each dimension,
under each cluster (thus, there are n*D*K entries). However,
the only trajectory-dependent 
parameter value that is relevant is the one associated with the
corresponding most likely cluster for each trajectory. We are not
normally interested in the expected transformation for a specific
trajectory in a cluster for which the trajectory does not belong. In other words,
we would like a reduced matrix of size n-by-D that only lists the
entries for each trajectory (and dimension) from the clusters
to which the trajectories belong.

<p>You can retrieve a reduced matrix that only contains the relevant
entries for each trajectory-dependent parameter by using <b>GetCindx()</b>.
For example, <tt>GetCindx(model.Ee, model.C)</tt> will return an n-D matrix 
containing all the relevant entries for all n trajectories and D
dimensions (this is explained more clearly for each case below).
You can substitute any of the trajectory-dependent 
parameters (.Ee, .Ef, .Ve, .Vf, .Vef) for .Ee in the call to
<b>GetCindx()</b> as shown below.
 
<ul>
   <li>.Mu   : This variable gives the cluster-dependent regression
    coefficients. .Mu(:,k,d) gives the coefficients for the k-th cluster
    in the d-th dimension; note that .Mu(1,k,d) gives the y-intercept.<p>
 
   <li>.Sigma : This variable gives the variance parameter of the regression
    noise model. .Sigma(k,d) gives the parameter for the k-th cluster
    in the d-th dimension.<p>
 
   <li>.Alpha : This variable gives the mixture weights for the
    mixture model. .Alpha(k) gives the k-th mixture weight.<p>
 
   <li>.Ea   : This variable gives the (E)xpected value of the scale
    parameter (a) in time. This variable is denoted
    as a in my dissertation. There is an expectation for each trajectory i and
    each cluster k. Hence, .Ea(i,k) gives the
    expected scale parameter for the i-th trajectory, under the k-th
    cluster. <tt>GetCindx(model.Ea, model.C)</tt> returns
    the reduced n-1 matrix containing the relevant cluster-specific values.<p>
 
   <li>.Eb   : This variable gives the (E)xpected value of the translation
    parameter (b) in time. This variable is denoted
    as b in my dissertation. There is an expectation for each trajectory i
    and each cluster k. Hence, .Eb(i,k) gives the
    expected scale parameter for the i-th trajectory, under the k-th
    cluster. <tt>GetCindx(model.Eb, model.C)</tt> returns
    the reduced n-1 matrix containing the relevant cluster-specific values.<p>
 
   <li>.Ee   : This variable gives the (E)xpected value of the scale
    parameter (e) in measurement space. This variable is denoted
    as c in my dissertation. There is an expectation for each trajectory i,
    in each dimension d, for each cluster k. Hence, .Ee(i,k,d) gives the
    expected scale parameter for the i-th trajectory, under the k-th
    cluster in the d-th dimension. <tt>GetCindx(model.Ee, model.C)</tt> returns
    the reduced n-D matrix containing the relevant cluster-specific values.<p>
 
   <li>.Ef   : This variable gives the (E)xpected value of the translation
    parameter (f) in measurement space. This variable is denoted
    as d in my dissertation. The layout is the same as for .Ee.
    <tt>GetCindx(model.Ef, model.C)</tt> returns the reduced n-D matrix 
    containing the relevant cluster-specific values.<p>
 
   <li>.Va   : This variable gives the (V)ariance of the scale parameter (a)
    in time. This variable is denoted as r in my dissertation.
    The layout is the same as for .Ea.
    <tt>GetCindx(model.Va, model.C)</tt> returns the reduced n-1 matrix 
    containing the relevant cluster-specific values.<p>
 
   <li>.Vb   : This variable gives the (V)ariance of the translation
    parameter (b) in time. This variable is denoted
    as s in my dissertation. The layout is the same as for .Eb.
    <tt>GetCindx(model.Vb, model.C)</tt> returns the reduced n-1 matrix 
    containing the relevant cluster-specific values.<p>
 
   <li>.Ve   : This variable gives the (V)ariance of the scale parameter (e)
    in measurement space. This variable is denoted as u in my dissertation.
    The layout is the same as for .Ee.
    <tt>GetCindx(model.Ve, model.C)</tt> returns the reduced n-D matrix 
    containing the relevant cluster-specific values.<p>
 
   <li>.Vf   : This variable gives the (V)ariance of the translation
    parameter (f) in measurement space. This variable is denoted
    as v in my dissertation. The layout is the same as for .Ee.
    <tt>GetCindx(model.Vf, model.C)</tt> returns the reduced n-D matrix 
    containing the relevant cluster-specific values.<p>
 
   <li>.Vab  : This variable gives the co-(V)ariance of (a) and (b). This
    variable is denoted as Vab in my dissertation. The layout is the 
    same as for .Ea.
    <tt>GetCindx(model.Vab, model.C)</tt> returns the reduced n-1 matrix 
    containing the relevant cluster-specific values.<p>
 
   <li>.Vef  : This variable gives the co-(V)ariance of (e) and (f). This
    variable is denoted as Vcd in my dissertation. The layout is the 
    same as for .Ee.
    <tt>GetCindx(model.Vef, model.C)</tt> returns the reduced n-D matrix 
    containing the relevant cluster-specific values.<p>
 
   <li>.R    : This variable gives the variance parameter for the learned
    prior model of the scale parameter a.<p>
 
   <li>.S    : This variable gives the variance parameter for the learned
    prior model of the translation parameter b. <p>
 
   <li>.T    : This variable gives the variance parameter for the learned
    prior model of the translation parameter f. .T(k,d) gives the value for
    the k-th cluster in the d-th dimension.<p>
 
   <li>.U    : This variable gives the variance parameter for the learned
    prior model of the scale parameter e. .U(k,d) gives the value for
    the k-th cluster in the d-th dimension.
</ul>



<h3></h3>
<div align=center>
<a href="#top">Top</a> |
<a href="http://www.ics.uci.edu/~sgaffney/software/CCT">CCToolbox</a> |
<a href="../#Down">Download</a> |
<a href="./">Documentation</a> |
<a href="http://www.ics.uci.edu/~sgaffney#contact">Contact</a>
</div>



</body>

</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ