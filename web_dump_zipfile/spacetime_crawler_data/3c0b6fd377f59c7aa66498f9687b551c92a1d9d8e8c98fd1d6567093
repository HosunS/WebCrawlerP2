¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD4940¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueXjApache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:54:23 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueT"134c-4da84c3d691c0"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 13:54:53 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYL<html xmlns="http://www.w3.org/1999/xhtml" xmlns:html="http://www.w3.org/1999/xhtml">
<head>
<title>PartEnumDoc - Group Page - Trac</title>
<style type="text/css">
           @import url(trac.css);
          </style>
</head>
<body>
<div class="wikipage">
    <div id="searchable">
<p>
AppString &gt; AppStringDoc
</p>
<h1 id="PartEnum">PartEnum</h1>
<h2 id="Overview">Overview</h2>
<p>
The module contains an implementation of the technique presented in [1]. The technique was invented in the <span class="icon">Data Debugger Project</span> at Microsoft, Research.
</p>
<h2 id="Usage">Usage</h2>
<p>
For compiling instructions, please see CompileDoc.
</p>
<p>
The module uses C++ STL TR1 library provided by GNU GCC and Boost 1.33.1 library.
</p>
<p>
An example of how to use the module is available in source:codebase/appstring/trunk/partenum/example.cc .
</p>
<h2 id="Interface">Interface</h2>
<p>
The main class of the module is ParEnum which is declared in source:codebase/appstring/trunk/partenum/partenum.h.
</p>
<p>
The main methods of PartEnum are:
</p>
<pre class="wiki" xml:space="preserve">  PartEnum(const vector&lt;string&gt; &amp;data, 
           unsigned q, 
           unsigned editdist, 
           unsigned n1, 
           unsigned n2);

  PartEnum(const vector&lt;string&gt; &amp;data, 
           const string &amp;filename);

  void build();
  void saveIndex(const string &amp;filename) const;  

  void search(const string &amp;query, vector&lt;unsigned&gt; &amp;results);
  void search(const string &amp;query, const unsigned editdist,
              vector&lt;unsigned&gt; &amp;results);
</pre>
<p>
The main idea is that the user can create a PartEnum object by specifying a vector of strings (dataset) and a few extra parameters (see [1] for details) or load an existing object from a file. If the object was not loaded, then it needs to be built. Next, the user has the option of saving the object to a file. In order to search approximately in the dataset for a given string, the user calls the function <tt>search</tt>. 
</p>
<h2 id="Performance">Performance</h2>
<p>
Pentium D 3.4GHz Dual Core, 2GB memory, Linux (Ubuntu), g++. A data set of 54,000 person names.
</p>
<table class="wiki">
<tr>
<td rowspan="1" colspan="1"> <strong>Technique</strong> </td>
<td rowspan="1" colspan="1"> <strong>Dataset Size</strong> </td>
<td rowspan="1" colspan="1"> <strong>Ed Threshold</strong> </td>
<td rowspan="1" colspan="1"> <strong>Q</strong> </td>
<td rowspan="1" colspan="1"> <strong>Time (ms)</strong> </td>
<td rowspan="1" colspan="1"> <strong>Index size (MB)</strong> </td>
<td rowspan="1" colspan="1"> <strong>Comments</strong> 
</td>
</tr>
<tr>
<td rowspan="1" colspan="1"> Scan            </td>
<td rowspan="1" colspan="1"> 54k </td>
<td rowspan="1" colspan="1"> 1 </td>
<td rowspan="1" colspan="1"> - </td>
<td rowspan="1" colspan="1"> 11.86 </td>
<td rowspan="1" colspan="1">  1.3 </td>
<td rowspan="1" colspan="1"> 
</td>
</tr>
<tr>
<td rowspan="1" colspan="1"> Scan            </td>
<td rowspan="1" colspan="1"> 54k </td>
<td rowspan="1" colspan="1"> 2 </td>
<td rowspan="1" colspan="1"> - </td>
<td rowspan="1" colspan="1"> 21.30 </td>
<td rowspan="1" colspan="1">  1.6 </td>
<td rowspan="1" colspan="1"> 
</td>
</tr>
<tr>
<td rowspan="1" colspan="1"> Scan            </td>
<td rowspan="1" colspan="1"> 54k </td>
<td rowspan="1" colspan="1"> 3 </td>
<td rowspan="1" colspan="1"> - </td>
<td rowspan="1" colspan="1"> 35.49 </td>
<td rowspan="1" colspan="1">  4.2 </td>
<td rowspan="1" colspan="1"> 
</td>
</tr>
<tr>
<td rowspan="1" colspan="1"> - </td>
<td rowspan="1" colspan="1"> </td>
<td rowspan="1" colspan="1"> </td>
<td rowspan="1" colspan="1"> </td>
<td rowspan="1" colspan="1">  </td>
<td rowspan="1" colspan="1"> </td>
<td rowspan="1" colspan="1"> 
</td>
</tr>
<tr>
<td rowspan="1" colspan="1"> PartEnum </td>
<td rowspan="1" colspan="1"> 54k </td>
<td rowspan="1" colspan="1"> 1 </td>
<td rowspan="1" colspan="1"> 2 </td>
<td rowspan="1" colspan="1">  1.21 </td>
<td rowspan="1" colspan="1"> 57.3 </td>
<td rowspan="1" colspan="1"> n1=2,n2=8 
</td>
</tr>
<tr>
<td rowspan="1" colspan="1"> PartEnum </td>
<td rowspan="1" colspan="1"> 54k </td>
<td rowspan="1" colspan="1"> 2 </td>
<td rowspan="1" colspan="1"> 2 </td>
<td rowspan="1" colspan="1"> 12.04 </td>
<td rowspan="1" colspan="1"> 60.2 </td>
<td rowspan="1" colspan="1"> n1=3,n2=8 
</td>
</tr>
<tr>
<td rowspan="1" colspan="1"> PartEnum </td>
<td rowspan="1" colspan="1"> 54k </td>
<td rowspan="1" colspan="1"> 3 </td>
<td rowspan="1" colspan="1"> 1 </td>
<td rowspan="1" colspan="1"> 35.24 </td>
<td rowspan="1" colspan="1"> 34.8 </td>
<td rowspan="1" colspan="1"> n1=2,n2=7 
</td>
</tr>
</table>
<hr/>
<p>
[1] Arvind Arasu, Venkatesh Ganti, Raghav Kaushik: Efficient Exact Set-Similarity Joins. VLDB 2006: 918-929
</p>
</div>
   </div>
<div class="footer">
<hr/>
<p>
<a href="wiki-index.html">Back to Index</a>
</p>
</div>
</body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ