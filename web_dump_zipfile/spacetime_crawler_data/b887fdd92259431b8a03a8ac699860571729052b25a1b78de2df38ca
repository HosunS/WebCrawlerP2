¦Ifinal_url¢DtypeEvaluex&https://www.ics.uci.edu/~eppstein/163/Lhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD3932¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 31 Jan 2019 00:40:49 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"2b37-580b647261d86-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 04:09:05 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY+7<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<title>Graph Algorithms</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>Computer Science 163/265, Winter 2019:<br>
Graph Algorithms</h1>

<hr>
<h2>General Course Information</h2>

<p>The course meets Monday, Wednesday, and Fridays, 3:00 - 3:50
in <a href="http://www.classrooms.uci.edu/GAC/SSH100.html">Social
Science Hall, room SSH 100</a>.  Prof. Eppstein's office hours are
Monday 1-2 and Wednesday 4:30-5:30 in Bren 4082.  The teaching assistant
is Sameera Ghayyur (office hours
Monday 2-3 and Wednesday 1-2 in DBH 2059). We also have two readers for 163, Hadi Khodabandeh and Satish
Kotti, and a reader for 265, Gongjin Sun. Online discussions will be
provided
through <a href="http://www.piazza.com/uci/winter2019/cs163cs265">Piazza</a>.
</p>

<p>Coursework will consist of weekly homeworks, a midterm, and a
comprehensive final exam. Group work on homeworks is permitted;
each student should turn in his or her own copy of the homeworks.
Each homework set will have one of the assigned problems graded on
GradeScope, and will be scored 50% for that problem and 50% for whether it
included an answer on the other other problems. The
undergraduate (163) and graduate (265) courses will share lectures, and
some homework problems; however, the graduate course will have
additional homework problems and different exams. Homeworks will
typically be assigned on Fridays and due on GradeScope on the following
Friday.</p>

<p>The text we will be using is <a
href="http://en.wikipedia.org/wiki/Book:Graph_Algorithms"><i>Graph
Algorithms</i></a>, a collection of readings compiled from
Wikipedia. Lecture materials will not be distributed to the class; instead, you are encouraged to attend the lecture yourself and take your own notes. Recording the lectures for your own personal use is allowed, but other uses of recorded lectures (including making them available online) is forbidden.
Lecture notes of past lectures will be made available for viewing at the
TA office hours.</p>

<p>The final grade will be formed by combining the numerical scores from
the homeworks (20%, with the lowest homework score dropped), midterm
(35%), and final (45%).</p>

<h2>Tentative Schedule of Topics</h2>
<dl>
<dt>Week 1.</dt>
<dd>Extracting information from graph structure: <a href="http://en.wikipedia.org/wiki/PageRank">Web search engines and the PageRank
algorithm</a>.
<dd><a href="http://en.wikipedia.org/wiki/Web_crawler">Web crawler</a> case study. Review of <a
href="http://en.wikipedia.org/wiki/Depth-first_search">depth-first search</a> and <a
href="http://en.wikipedia.org/wiki/Breadth-first_search">breadth-first search</a>.</dd>
<dd><a href="http://en.wikipedia.org/wiki/Graph_(data_structure)">Computer representation of graphs</a> and the <a href="https://en.wikipedia.org/wiki/Decorator_pattern">decorator pattern</a>.</dd>
<dd><a href="https://www.overleaf.com/read/fpkmjkvfkrdp">Homework 1, due
Friday, January 18</a>. To start working from this template, copy the project, 
and then when your answers are complete, download it as a pdf
file. However, you are not required to use this template for your
answers. Instructions for turning in your homework will be provided here
soon. After the
deadline, the same link will be updated with the solutions.</dd>
<dt>Week 2.</dt>
<dd><a
href="http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm">Tarjan's
algorithm</a> for <a href="http://en.wikipedia.org/wiki/Strongly_connected_component">strongly connected components</a>.</dd>
<dd><a
href="http://en.wikipedia.org/wiki/Maze_generation_algorithm">Maze</a>
and <a href="http://www.nature.com/nature/journal/v352/n6334/abs/352423a0.html">river network simulation via invasion percolation</a> case
study. <a href="http://en.wikipedia.org/wiki/Minimum_spanning_tree">Minimum
spanning trees</a> and their properties.</dd>
<dd><a
href="http://en.wikipedia.org/wiki/Prim%27s_algorithm">Prim-Dijkstra-Jarnik
algorithm</a>, <a
href="http://en.wikipedia.org/wiki/Boruvka%27s_algorithm">Boruvka's
algorithm</a>, and <a
href="http://en.wikipedia.org/wiki/Kruskal%27s_algorithm">Kruskal's
algorithm</a>.</dd>
<dd><a href="https://www.overleaf.com/read/npdddqkrrnvm">Homework 2, due
Friday January 25</a>.</dd>
<dt>Week 3.</dt>
<dd>Holiday Monday, January 21: Martin Luther King, Jr. Day</dd>
<dd>Spreadsheet case study. <a href="http://en.wikipedia.org/wiki/Directed_acyclic_graph">DAGs</a> and
<a href="http://en.wikipedia.org/wiki/Topological_sorting">topological
ordering</a>.</dd>
<dd><a href="https://en.wikipedia.org/wiki/Critical_path_method">Critical
path scheduling</a> case study.
Shortest and longest paths in directed acyclic graphs.
<dd><a href="https://www.overleaf.com/read/bzbzdbfnrgjv">Homework 3, due
Friday February 1</a>.</dd>
<dt>Week 4.</dt>
<dd><a href="http://en.wikipedia.org/wiki/Route_planning_software">Road map path planning</a> case study.
<a href="http://en.wikipedia.org/wiki/Shortest_path_problem">Shortest paths</a> and
<a href="http://www.catonmat.net/blog/mit-introduction-to-algorithms-part-twelve/">relaxation algorithms</a>.</dd>
<dd><a href="http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm">Dijkstra's algorithm</a>,
<a href="http://en.wikipedia.org/wiki/Bellman-Ford_algorithm">Bellman-Ford algorithm</a>,
<a href="http://en.wikipedia.org/wiki/Johnson%27s_algorithm">Johnson's algorithm</a>.</dd>
<dd><a href="http://en.wikipedia.org/wiki/A*_search_algorithm">A*
algorithm</a>,
<a href="https://www.microsoft.com/en-us/research/publication/computing-the-shortest-path-a-search-meets-graph-theory/?from=http%3A%2F%2Fresearch.microsoft.com%2Fpubs%2F154937%2Fsoda05.pdf">landmark-based distance estimation</a></dd>
<dd><a href="http://en.wikipedia.org/wiki/Schulze_method">Preference
voting case study</a> and
the <a href="http://en.wikipedia.org/wiki/Widest_path_problem">widest
path problem</a>.
</dd>
<dt>Week 5.</dt>
<dd>Transportation scheduling case study. <a href="http://en.wikipedia.org/wiki/Eulerian_path">Euler tours</a> and the
<a href="http://en.wikipedia.org/wiki/Travelling_salesman_problem">traveling salesperson problem</a>.</dd>
<dd><a href="http://en.wikipedia.org/wiki/Approximation_algorithm">Approximation
algorithms and the approximation ratio</a>,
<a
href="http://en.wikipedia.org/wiki/Travelling_salesman_problem#Metric_TSP">MST-doubling
heuristic</a>,
<a href="http://en.wikipedia.org/wiki/Christofides_algorithm">Christofides' heuristic</a>.</dd>
<dd>Midterm Friday, February 8.</dd>
<dt>Week 6.</dt>
<dd><a href="https://11011110.github.io/blog/2008/03/20/exponential-time-algorithmics.html">Exponential-time dynamic programming for the traveling salesperson problem</a>.</dd>
<dd><a
href="http://www.cs.princeton.edu/courses/archive/spr03/cs226/assignments/baseball.html">Baseball
elimination</a> case study. <a
href="http://en.wikipedia.org/wiki/Maximum_flow_problem">Maximum flow
problem</a>, <a
href="http://en.wikipedia.org/wiki/Cut_(graph_theory)">minimum cut
problem</a>, <a
href="http://en.wikipedia.org/wiki/Max-flow_min-cut_theorem">max-flow
min-cut theorem</a>.</dd>
<dd><a
href="http://en.wikipedia.org/wiki/Ford-Fulkerson_algorithm">Augmenting
path (Ford-Fulkerson) algorithm</a>.</dd>
<dt>Week 7.</dt>
<dd>Holiday Monday, February 18: Presidents' Day</dd>
<dd><a href="http://en.wikipedia.org/wiki/Matching_(graph_theory)">Matchings</a>,
<a
href="http://en.wikipedia.org/wiki/Bipartite_graph">Bipartite
graphs</a>, <a href="http://www.cs.cmu.edu/~ckingsf/bioinfo-lectures/matching.pdf">formulating bipartite maximum matching as a flow problem</a>,
<a href="https://en.wikipedia.org/wiki/Hopcroft%E2%80%93Karp_algorithm">Hopcroft&ndash;Karp algorithm</a>.<br>
<a href="http://en.wikipedia.org/wiki/K%C3%B6nig%27s_theorem_(graph_theory)">Using
  matchings to find vertex covers and independent sets</a>,
<a href="http://arxiv.org/abs/0908.3916">partition into a minimum number
  of rectangles</a>.</dd>
<dt>Week 8.</dt>
<dd><a
href="http://en.wikipedia.org/wiki/Residency_(medicine)#Matching">Medical
school residency assignment</a> case study, <a
href="http://en.wikipedia.org/wiki/Stable_marriage_problem">stable
marriage</a>, <a
href="http://en.wikipedia.org/wiki/Stable_marriage_problem#Algorithm">Gale-Shapley
algorithm for stable marriage</a></dd>
<dd><a href="http://en.wikipedia.org/wiki/Register_allocation">Register allocation</a> case study.
<a href="https://en.wikipedia.org/wiki/Strahler_number">Strahler number</a>,
<a href="http://en.wikipedia.org/wiki/Graph_coloring">graph coloring</a>,
<a href="http://en.wikipedia.org/wiki/Greedy_coloring">greedy coloring</a>,
<a href="http://en.wikipedia.org/wiki/Interval_graph">interval graphs</a>,
and <a href="http://en.wikipedia.org/wiki/Perfect_graph">perfect graphs</a>.<br>
<a href="http://en.wikipedia.org/wiki/Chordal_graph">Chordal graphs</a>
and
using <a href="http://en.wikipedia.org/wiki/Lexicographic_breadth-first_search">Lexicographic
breadth-first search</a> to find an elimination ordering.</dd>
<dt>Week 9.</dt>
<dd><a href="http://en.wikipedia.org/wiki/Social_network">Social network analysis</a> case study.
Social network
properties: <a href="http://en.wikipedia.org/wiki/Dense_graph">sparsity</a>, <a href="http://en.wikipedia.org/wiki/Small-world_network">small
world
property</a>, <a href="http://en.wikipedia.org/wiki/Scale-free_network">power
laws</a>.</dd>
<dd><a href="http://en.wikipedia.org/wiki/Barab%C3%A1si%E2%80%93Albert_model">Barab&aacute;si-Albert model</a>, <a href="https://en.wikipedia.org/wiki/Degeneracy_(graph_theory)">degeneracy
and k-cores</a>.<br>
<a
href="http://en.wikipedia.org/wiki/Clique_problem">Cliques</a>, <a href="http://en.wikipedia.org/wiki/Tur%C3%A1n_graph#Special_cases">Moon-Moser
bound on maximal cliques</a>, <a href="http://en.wikipedia.org/wiki/Bron%E2%80%93Kerbosch_algorithm">Bron-Kerbosch
algorithm</a>.</dd>
<dt>Week 10.</dt>
<dd><a href="http://en.wikipedia.org/wiki/Planar_graph">Planar
graphs</a>; review of planarity-related topics from earlier weeks (graph
drawing, road maps, invasion percolation via minimum spanning trees of
grid graphs, graph coloring and the four-color theorem).<br>
<a href="http://en.wikipedia.org/wiki/Dual_graph">Duality</a>,
duality of <a href="http://en.wikipedia.org/wiki/Euler_tour">Euler
tours</a> and <a href="http://en.wikipedia.org/wiki/Bipartite_graph">bipartiteness</a>,
<a href="http://www.ics.uci.edu/~eppstein/junkyard/euler/">Euler's formula</a>,
greedy 6-coloring, Boruvka in linear time.
<a href="http://en.wikipedia.org/wiki/Planarity_testing">Planarity testing</a>, and <a href="http://en.wikipedia.org/wiki/Fary%27s_theorem">F&aacute;ry's theorem</a>.</dd>
<dt>Finals week</dt>
<dd>Final examination (cumulative), Mon, March 18, 4:00-6:00pm.</dd>
</dl>

<h2>Material from Previous Course Offerings</h2>

<p>The <a href="s15.html">syllabus</a> from Spring 2015 has more links, to syllabi and exams from earlier quarters.</p>

</body>
</html>

Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ