¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD2047¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:53:09 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"7ff-4da84bf6d6b40"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 00:36:08 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueYÿ/*
  $Id$

  Copyright (C) 2007 by The Regents of the University of California

  Redistribution of this file is permitted under the terms of the 
  BSD license

  Date: 01/21/2006
  Author: Rares Vernica <rares (at) ics.uci.edu>
*/

#ifndef _record_h_
#define _record_h_

#include "predicate.h"

class Record: public Predicate 
{
public:
  float est, relErr;
  unsigned real;
  unsigned cntCluster, cntPPDpair;

  Record(): Predicate(), est(0), relErr(-1), real(0) {}
  Record(string q, SimType d): Predicate(q, d), est(0), relErr(-1), real(0) {}
  Record(string q, SimType d, float e, unsigned r): 
    Predicate(q, d), est(e), real(r) {
    setRelErr(); }
  Record(string q, SimType d, float e, unsigned r, unsigned cntC, unsigned cntP): 
    Predicate(q, d), est(e), real(r), cntCluster(cntC), cntPPDpair(cntP) {
    setRelErr(); }
  Record(Predicate p, float e):
    Predicate(p), est(e), relErr(-1), real(0) {}
  Record(Predicate p, float e, unsigned r): Predicate(p), est(e), real(r) {
    setRelErr(); }
  Record(Predicate p, float e, unsigned r, unsigned cntC, unsigned cntP):
    Predicate(p), est(e), real(r), cntCluster(cntC), cntPPDpair(cntP) {
    setRelErr();
  }

  bool operator==(const Record &r) const {
    return this == &r || est == r.est && relErr == r.relErr && real == r.real && 
      cntCluster == r.cntCluster && cntPPDpair == r.cntPPDpair; }

  void setRelErr();

  ostream& toWeka(ostream &out);

  friend ostream& operator<<(ostream &out, const Record &r);
  friend istream& operator>>(istream &in, Record &r);
};

typedef vector<Record> VectRecord;
typedef VectRecord::iterator VectRecordIt;

ostream& operator<<(ostream &out, const VectRecord &v);
istream& operator>>(istream &in, VectRecord &v);
ostream& vectRecordToWeka(ostream  &out,  VectRecord  &v);

inline float recordGetEst(Record r) { return r.est; }
inline float recordGetLen(Record r) { return static_cast<float>(r.query.length()); }
inline float recordGetThr(Record r) { return static_cast<float>(r.dist); }

typedef float recordFunc(Record);

#endif
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ