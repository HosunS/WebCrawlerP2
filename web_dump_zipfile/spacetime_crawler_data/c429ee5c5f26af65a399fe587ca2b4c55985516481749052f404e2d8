¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD2009¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 01 Feb 2018 22:54:07 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"7d9-5642e792d2dc7"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXSat, 02 Feb 2019 15:24:02 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYÙ<!DOCTYPE html>
<html>
<head>
<title>Theory Seminar, February 2, 2018</title>
<link rel="stylesheet" href="../stylesheet.css" type="text/css">
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
});
</script>
<script src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
<a href="/~theory/"><img src="http://www.ics.uci.edu/~theory/logo/CATOC2.jpg"
alt="Center for Algorithms and Theory of Computation"></a>
<h2><a href="/~theory/269/">CS 269S, Winter 2018: Theory Seminar</a><br>
Bren Hall, Room 1423, 1pm</h2>
<hr />
<h2>February 2, 2018:</h2>
<h1>4-Modal Embeddings of Directed Graphs</h1>
<h2>Juan Besa</h2>

<p>In this paper, we study the computational complexity of constructing
4-modal embeddings of directed planar graphs, which are motivated by
the recently introduced planar L-drawings
[<a href="https://arxiv.org/abs/1708.09107">Chaplick et al., GD '17</a>].
We give a linear-time algorithm for testing the existence of 4-modal
embeddings for the class of partial 2-trees and show a complexity
dichotomy for this problem in general planar graphs with respect to the
maximum degree $\Delta$. More specifically, we prove NP-completeness for
biconnected planar graphs with $\Delta\ge 7$ and we extend the algorithm for
partial 2-trees to a linear-time algorithm for simply-connected planar
graphs with $\Delta\le 6$. The latter algorithmic result is based on
decomposing the input graph into its triconnected components via
SPQR-trees and on handling the complexity of the rigid components by
means of a small set of reduction rules. Interestingly, we show that the
algorithmic core of the problem can be tackled by means of Turing
reductions to special instances of NAESAT that can be solved in linear
time.</p>

<p>(Based on joint work with Giordano Da Lozzo and Michael T. Goodrich.)</p>

</body></html>

Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ