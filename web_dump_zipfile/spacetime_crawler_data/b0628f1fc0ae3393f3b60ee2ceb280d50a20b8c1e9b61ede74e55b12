¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueC468¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 01 Feb 2006 22:27:45 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"347-40bc330607a40-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 01 Feb 2019 20:13:38 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueYG1. Suppose that we create a binary tree on n items by inserting the
items one at a time, with each permutation of the items equally likely,
and each new item inserted at a leaf of the tree. Are all distinct
binary trees equally likely to be generated by this process? Why or why
not?

2. For which values of alpha would the trees used for the binary heap
data structure be alpha-balanced, in the sense used for BB[alpha] trees?
That is, for which alpha is it always the case that, in any binary heap,
any node has at least alpha times as many descendants as its parent?

3. (CLRS 13.2-4): Show that any arbitrary n-node binary search tree can
be transformed into any other arbitrary n-node binary search tree using
O(n) rotations. (Hint: first show that at most n-1 right rotations
suffice to transform the tree into a right-going chain.)
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ