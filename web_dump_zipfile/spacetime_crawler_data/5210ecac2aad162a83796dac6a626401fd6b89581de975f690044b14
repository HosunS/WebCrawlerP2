¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD3829¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:54:10 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"ef5-4da84c3103480"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXSat, 09 Feb 2019 12:12:19 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueYõ# $Id$

# Copyright (C) 2007 by The Regents of the University of California

# Redistribution of this file is permitted under the terms of the 
# BSD license

# Date: 03/27/2007
# Author: Rares Vernica <rares (at) ics.uci.edu>

TRUNK_PATH = ../
SEPIA_PATH = ./

include makefile.defs

all: subdirs duplicate.o example unittest perftest

sample.o: sample.h

duplicate.o: duplicate.h \
	$(TRUNK_PATH)util/simfuncs.h

sepia.o: sepia.h sample.h \
	simfunc/simdist.h simfunc/simvect.h \
	simfunc/editvect.h simfunc/jaccvect.h \
	cluster/cluster.h cluster/ftable.h \
	cluster/lexic.h cluster/medoids.h \
  cluster/clusters.h \
  ppdtable/ppdtable.h ppdtable/ppdentry.h \
	freqest/errorcorr.h freqest/record.h freqest/predicate.h freqest/freqest.h \
	$(TRUNK_PATH)util/simfuncs.h \
	$(TRUNK_PATH)util/input.h $(TRUNK_PATH)util/misc.h

example.o: sepia.h sample.h \
	simfunc/simdist.h simfunc/simvect.h \
	simfunc/editvect.h simfunc/jaccvect.h \
	cluster/cluster.h cluster/ftable.h \
	cluster/clusters.h \
  ppdtable/ppdtable.h ppdtable/ppdentry.h \
  freqest/errorcorr.h freqest/record.h freqest/predicate.h \
	$(TRUNK_PATH)util/simfuncs.h $(TRUNK_PATH)util/input.h

unittest.o: sepia.h sample.h \
	simfunc/simdist.h simfunc/simvect.h \
	simfunc/editvect.h simfunc/jaccvect.h \
	cluster/cluster.h cluster/ftable.h \
	cluster/clusters.h \
  ppdtable/ppdtable.h ppdtable/ppdentry.h \
  freqest/errorcorr.h freqest/record.h freqest/predicate.h \
	$(TRUNK_PATH)util/simfuncs.h $(TRUNK_PATH)util/input.h

perftest.o: sepia.h sample.h \
	simfunc/simdist.h simfunc/simvect.h \
	simfunc/editvect.h simfunc/jaccvect.h \
	cluster/cluster.h cluster/ftable.h \
	cluster/clusters.h \
  ppdtable/ppdtable.h ppdtable/ppdentry.h \
  freqest/errorcorr.h freqest/record.h freqest/predicate.h \
	$(TRUNK_PATH)util/simfuncs.h $(TRUNK_PATH)util/input.h


example: example.o sepia.o sample.o \
	simfunc/simvect.o simfunc/simdist.o \
	simfunc/editvect.o simfunc/jaccvect.o \
	cluster/clusters.o cluster/cluster.o cluster/ftable.o \
	cluster/lexic.o cluster/medoids.o \
	ppdtable/ppdtable.o ppdtable/ppdentry.o \
	ppdtable/ppdsample.o ppdtable/indexentry.o ppdtable/allrand.o \
	ppdtable/closelex.o ppdtable/closerand.o ppdtable/closeunique.o \
	freqest/errorcorr.o freqest/record.o freqest/predicate.o freqest/freqest.o \
	$(TRUNK_PATH)util/simfuncs.o $(TRUNK_PATH)util/gram.o \
	$(TRUNK_PATH)util/misc.o $(TRUNK_PATH)util/input.o

unittest: unittest.o sepia.o sample.o \
	simfunc/simvect.o simfunc/simdist.o \
	simfunc/editvect.o simfunc/jaccvect.o \
	cluster/clusters.o cluster/cluster.o cluster/ftable.o \
	cluster/lexic.o cluster/medoids.o \
	ppdtable/ppdtable.o ppdtable/ppdentry.o \
	ppdtable/ppdsample.o ppdtable/indexentry.o ppdtable/allrand.o \
	ppdtable/closelex.o ppdtable/closerand.o ppdtable/closeunique.o \
	freqest/errorcorr.o freqest/record.o freqest/predicate.o freqest/freqest.o \
	$(TRUNK_PATH)util/simfuncs.o $(TRUNK_PATH)util/gram.o \
	$(TRUNK_PATH)util/misc.o $(TRUNK_PATH)util/input.o

perftest: perftest.o sepia.o sample.o \
	simfunc/simvect.o simfunc/simdist.o \
	simfunc/editvect.o simfunc/jaccvect.o \
	cluster/clusters.o cluster/cluster.o cluster/ftable.o \
	cluster/lexic.o cluster/medoids.o \
	ppdtable/ppdtable.o ppdtable/ppdentry.o \
	ppdtable/ppdsample.o ppdtable/indexentry.o ppdtable/allrand.o \
	ppdtable/closelex.o ppdtable/closerand.o ppdtable/closeunique.o \
	freqest/errorcorr.o freqest/record.o freqest/predicate.o freqest/freqest.o \
	$(TRUNK_PATH)util/simfuncs.o $(TRUNK_PATH)util/gram.o \
	$(TRUNK_PATH)util/misc.o $(TRUNK_PATH)util/input.o


SUBDIRS = simfunc cluster ppdtable freqest

subdirs: $(SUBDIRS)

$(SUBDIRS):
	$(MAKE) -C $@ $(MAKECMDGOALS)

cluster: simfunc

ppdtable: simfunc

freqest: cluster ppdtable

clean: subdirs
	-rm *.o *~ example unittest perftest *.sep.*

.PHONY: all clean subdirs $(SUBDIRS)
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ