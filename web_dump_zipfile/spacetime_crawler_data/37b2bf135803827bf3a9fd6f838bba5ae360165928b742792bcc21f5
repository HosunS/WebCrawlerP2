¦Ifinal_url¢DtypeEvaluex1https://www.ics.uci.edu/~eppstein/projects/tetra/Lhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1372¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 09 May 2002 02:48:59 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"a7a-3a083b93bdcc0-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 01 Feb 2019 04:39:57 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY
z<HTML><HEAD><TITLE>How many tetrahedra?</TITLE>
</HEAD><BODY FGCOLOR=#000000 BGCOLOR=#FFFFFF>
<H1><A HREF="http://www.ics.uci.edu/~eppstein/projects/">Research Projects:</A>
How Many Tetrahedra?</H1>

Any n-vertex convex polyhedron can be divided into O(n) tetrahedra:
triangulate each face, choose a vertex, and connect each triangle to
that vertex.
For instance, triangulating the cube in this way produces six tetrahedra:
<P>
<CENTER><IMG SRC="sixcube.gif" WIDTH=532 HEIGHT=515 ALT=""></CENTER>
<P>
However this is not always the best possible triangulation.
The cube can be divided into only five tetrahedra if we triangulate
it a different way, by cutting off every other vertex.
The tetrahedron in the middle is regular.
<P>
<CENTER><IMG SRC="fivecube.gif" WIDTH=510 HEIGHT=522 ALT=""></CENTER>
<P>
Is there an efficient algorithm for finding the minimum number of
tetrahedra needed to triangulate a polyhedron?  Is it always safe to cut
off degree-three vertices until no more are left, and if so what should
be done when none are left?
Unfortunately, <a href="http://www.math.ucdavis.edu/~deloera/RECENT_WORK/abstract.ps">de Loera et al recently proved
that this minimum-complexity triangulation problem is
NP-complete</a>.
<P>
Nevertheless, the problem has some connections to a still-open problem on binary trees studied by Sleator,
Tarjan, and Thurston.  They showed that if one changes one tree to another
using a standard operation called <I>rotation</I>, this corresponds to a
triangulation of a certain polyhedron in which each rotation corresponds
to a tetrahedron.
Their results on the tree rotation problem can be interpreted as meaning
that some polyhedra require as many as 2n-10 tetrahedra, the number that
would be generated by connecting everything to one vertex.
The rotation-distance triangulation is topological (an
abstract simplicial complex) while the NP-completeness proof relies on
the geometric configuration of the polyhedron vertices, so does not seem
to shed light on this problem.
<P>
If three dimensions isn't hard enough, one can always ask similar questions in higher dimensions.  The answers aren't known even for such simple shapes as hypercubes.  The connect-to-one-vertex strategy still works, and generates
d! simplices.  Just as in three dimensions, one can do a little better,
but not much better: <a href="http://arxiv.org/abs/math.CO/0204157">the
best known triangulations</a> are still within a
single-exponential factor of d!.
On the other hand, the best lower bounds known are that the number of simplices
must at least be within a single-exponential factor of sqrt d!.  So
there's still a pretty big gap to close.

</BODY></HTML>
Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ