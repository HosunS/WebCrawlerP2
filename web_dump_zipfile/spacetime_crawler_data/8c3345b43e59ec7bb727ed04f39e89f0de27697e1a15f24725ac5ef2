¦Ifinal_url¢DtypeEvaluex7https://www.ics.uci.edu/~aviral/papers/rISAJournal.htmlLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD2296¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 20 Jul 2006 05:25:00 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"8f8-418fc99eb4300"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 07 Feb 2019 10:21:56 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYø<title>rISAJournal</title>
<body bgcolor=#ffffff>
<h2> Compilation Framework for Code Size Reduction using 
Reduced Bit-width ISAs
</h2>
  
<a href="http://www.ics.uci.edu/~aviral/papers/rISAJournal.pdf"><img src="pdf.png" alt="pdf" width="34" height="34" border="0"></a>

<p><i>
<a href="http://www.ics.uci.edu/~aviral"> Aviral Shrivastava </a>,
<a href="http://www.ics.uci.edu/~partha"> Partha Biswas </a>,
<a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Halambi:Ashok.html"> Ashok Halambi </a>,
<a href="http://www.ics.uci.edu/~dutt"> Nikil Dutt </a>, and
<a href="http://www.ics.uci.edu/~nicolau"> Alex Nicolau </a>
</i>

<p><b>ACM TODAES:</b> <i>ACM Transactions on Design Automation of Electronic Systems 
</i>

<p><b>Abstract: </b>
For many embedded applications, program code size is a 
critical design factor. One promising approach for reducing 
code size is to employ a "dual instruction set", where 
processor architectures support a normal (usually 32 bit) 
Instruction Set, and a narrow, space-efficient (usually 16 
bit) Instruction Set with a limited set of opcodes and 
access to a limited set of registers. This feature
however, requires compilers that can reduce code size by 
compiling for both Instruction Sets. Existing compiler 
techniques operate at the routine-level granularity and 
are unable to make the trade-off between increased register 
pressure (resulting in more spills) and decreased code size. 
We present a compilation framework for such dual instruction 
sets, which uses a profitability based compiler heuristic 
that operates at the instruction-level granularity and is 
able to effectively take advantage of both Instruction Sets. 
We demonstrate consistent and improved code size reduction
(on average 22%), for the MIPS 32/16 bit ISA. We also show 
that the code compression obtained by this "dual instruction 
set" technique is heavily dependent on the application 
characteristics and the narrow Instruction Set itself.
<p>


<hr>

<table cellpadding="2" cellspacing="2" border="0" width="100%">
  <tbody>
    <tr>
      <td valign="left">
      Center For Embedded Computer Systems,<br> 
      Department of Information and Computer Science,<br>
      University of California, Irvine.
      </td>
    </tr>
  </tbody>
</table>
Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ