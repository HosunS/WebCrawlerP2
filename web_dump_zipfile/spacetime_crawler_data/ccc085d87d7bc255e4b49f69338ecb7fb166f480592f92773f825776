¶Ifinal_url°DtypeLhttp_headers¢DtypeEvalueá¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1167¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueXjApache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:54:17 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"48f-4da84c37b0440"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 01 Feb 2019 16:44:54 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueYè/*
    $Id: unittest.cc 1110 2007-04-17 00:12:04Z rvernica $

    Copyright (C) 2007 by The Regents of the University of California

    The implementation of the PartEnum algorithm invented by Microsoft
    researchers is limited to non commercial use, which would be
    covered under the royalty free covenant that Microsoft made
    public.

    Date: 01/31/2007
    Author: Rares Vernica <rvernica@ics.uci.edu>
*/

#include <cassert>
#include <iostream>
#include <vector>

#include "partenum.h"
#include "util/output.h"

using namespace std;

void testPartEnum() 
{
  unsigned t = 0;

  vector<string> data;
  data.push_back("abc");
  data.push_back("ac");
  data.push_back("xyz");

  PartEnum pSave(data, 1, 1, 3, 2);
  pSave.build();
  pSave.saveIndex("partenum"); // save
  PartEnum pLoad(data, "partenum"); // load
  assert(pSave == pLoad); t++;

  vector<unsigned> searchCor, searchRes;
  searchCor.push_back(0);
  searchCor.push_back(1);
  pSave.search("ab", searchRes); // search
  assert(searchCor == searchRes); t++;

  cout << "partenum (" << t << ")" << endl;
}

int main()
{
  cout << "test..." << endl;

  testPartEnum();

  cout << "OK" << endl;
}
Mis_redirected¢DtypeEvalueÙIhttp_code¢DtypeEvalue»Qdownload_complete¢DtypeEvalueı