¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1528¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 18 Jan 2019 21:54:44 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"cef-57fc28f16c516-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 01:35:16 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYï<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
Algorithm Engineering and Experiments (ALENEX)
</h2>
I was program co-chair for 2015.
<p>
<ul>
<li><b>Lazy algorithms for dynamic closest pair with arbitrary distance
measures</b>.<br>
<a href="//www.ulb.ac.be/di/scsi/jcardin/">J. Cardinal</a> and
D. Eppstein.<br>
Tech. Rep. 502,
Univ. Libre de Bruxelles, Computer Science Dept., 2003.<br>
<a href="//www.siam.org/meetings/alenex04/abstacts/JCardinal.pdf">Worksh. Algorithm Engineering and
Experiments (ALENEX), New Orleans, 2004, pp. 112&ndash;119</a>.
<p>
We modify my previous data structures for dynamic closest pairs, to use
a lazy deletion mechanism, and show in experiments that the results are
an improvement on the unmodified structures.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Lazy algorithms for dynamic closest pair with arbitrary distance measures">BibTeX</a> &ndash;
<a href="//citeseer.ist.psu.edu/cardinal04lazy.html">CiteSeer</a>)
<p>
<li><b>Quadratic time algorithms appear to be optimal for sorting
evolving data</b>.<br>
J. Besa,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.ics.uci.edu/~tujohnso/">T. Johnson</a>.<br>
<a href="//doi.org/10.1137/1.9781611975055.8"><i>Proc. Algorithm
Engineering &amp; Experiments (ALENEX 2018)</i>, New Orleans, 2018,
pp. 87&ndash;96</a>.<br>
<a href="https://arxiv.org/abs/1805.05443">arXiv:1805.05443</a>.
<p>
We experiment with sorting algorithms in the evolving data model,
in which, at the same time as the algorithm compares pairs of elements
and possibly chooses a new ordering based on the results of the comparison,
an adversary randomly chooses two adjacent elements in the sorted order
and swaps them. As we show, bubble sort and its variants appear to
maintain an order that is within inversion distance of optimal.
<p>
<li><b>Grid peeling and the affine curve-shortening flow</b>.<br>
D. Eppstein,
<a href="//sarielhp.org/">S. Har-Peled</a>, and
<a href="//www.gabrielnivasch.org/">G. Nivasch</a>.<br>
<a href="//doi.org/10.1137/1.9781611975055.10"><i>Proc. Algorithm
Engineering &amp; Experiments (ALENEX 2018)</i>,
New Orleans, 2018, pp. 109&ndash;116</a>.<br>
<a href="https://doi.org/10.1080/10586458.2018.1466379"><i>Experimental Mathematics</i>, to appear</a>.
<p>
We conjecture, based on experiments, that approximating a convex shape
by the set of grid points inside it, for a fine enough grid, and then
finding the convex layers of the resulting point set, produces curves
that are close to those produced by affine curve-shortening, a
continuous process on smooth curves.
<p>
</ul>

<hr><p>
<a href="conf.html">Conferences</a> &ndash;
<a href="/~eppstein/pubs/">Publications</a> &ndash;
<a href="/~eppstein/">David Eppstein</a> &ndash;
<a href="/~theory/">Theory Group</a> &ndash;
<a href="/">Inf. &amp; Comp. Sci.</a> &ndash;
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ