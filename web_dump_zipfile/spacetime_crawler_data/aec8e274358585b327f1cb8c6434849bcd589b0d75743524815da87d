¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE11111¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 20 Dec 2018 13:31:59 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueT"2b67-57d7427b87dde"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 01:53:29 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY+g<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<meta http-equiv="cache-control" content="max-age=0" /><meta
http-equiv="cache-control" content="no-cache" /><meta
http-equiv="expires" content="0" /><meta http-equiv="expires"
content="Tue, 01 Jan 1980 1:00:00 GMT" /><meta http-equiv="pragma"
content="no-cache" />

<html>

<head>
  <title>Programming Assignments</title>
</head>

<body BGCOLOR="white">

<center>
<h1>Programming Assignments</h1>
<p>
<h2>ICS-33: Intermediate Programming<br>
</h2><p>
</center>

<hr align="left" width="100%">
<h3>Procedures</h3>
<p>
Programming assignments are typically due about two weeks after they are
  assigned, at 11:30pm, typically on a Tuesday night (but look for exceptions).
To turn in programs, and verify the submission, use the
  <a href="http://checkmate.ics.uci.edu" target="main">
  Checkmate Homework Dropoff</a> system: it is also available on the
  standard frame index on the course website: it uses UCInetID Secure Web
  Login.
<p>
Ensure that you submit the code you wrote, not empty files, nor the original
  files that you downloaded.
Ensure that your code runs the batch self-checks correctly.
This is your responsibility. 
Be very careful and double-check what you submit to avoid any mistakes:
<b>if you are not sure that you submitted the correct code, resubmit it</b>.

<h3>No Late Submissions</h3>
<p>
You receive <b>NO POINTS</b> for late submissions, unless you have discussed
  the matter with me and gotten my official permission (typically, granted
  well-prior to the due date -not at the last minute- always via email, not
  just orally; contact me as soon as possible).
<p>
<b>IN ALL CASES, you must submit (on time) whatever part of the program you
  have written</b>, if you are to receive any partial credit for a submission
  (either on time or late with permission); if you submit <b>no</b> files, I
   must assume that you have done <b>no</b> work on the assignment (which will
  result in a grade of 0 for it).
If you are still programming the day that an assignment is due, you have planned
  poorly; if you are still programming an hour before it is due, you have
  planned very poorly.

<h3>Extra Points for Submitting Early</h3>
If you submit your program early, you will receive extra points (1 point if
  you submit it 24 hours early, 2 points if you submit it 48 hours early).
Since each program is worth 50 points, you can raise your grade on a program
  by 4% (almost half a letter grade) by turning it in two days early.
Note that turning in a program more than two days early still results in just
  2 extra points: the maximum you can get for an early turn-in.
<p>
Given <b>Extra Points for Submitting Early</b> and <b>No Late Submissions</b>,
  you should immediately start working on your programs when they are assigned.
You should plan to finish them early, both to receive extra credit and to
  avoid missing a deadline.
Expect that you will run into a few big "bugs" during each assignment, which
will take a day to figure out and fix; plan to finish early to garner the extra
credit (in the best scenario) or still finish on time (in the worst scenario).
<p>

<h3>Pair Programming</h3>
We will use <b>pair programming</b> on most assignments (<b>recommended</b>,
  although it is sometimes <b>prohibited</b>); it is only
  on these assignments that students can closely collaborate with their
  partners, <b>turning in one copy of a jointly written program</b>.
See <a href="../common/handouts/pairprogramming.html">Pair Programming</a> for
  details about pair programming, and the right and wrong ways to do it.
There is a tremendous amount to be gained by both partners, if they pair
  program the right way: both students working together, <b>not</b> splitting-up
  the assignment.
<p>
You can keep the same partner for multiple assignments or switch.
Try to find a partner in your lab who has approximately your skill level and
  study habits (e.g., working evening vs. weekends, work ethic to submit
  programs early); try to find someone who lives near you (or with whom you
  can easily meet outside lab) because I expect partners will need time outside
  labs to finish the programs.
You may partner with someone in a different lab, but you both must be able to
  attend (and actually attend) one of your labs for 4 hours/week.
I recommend finding a partner when you are attending your lab, but there is
  also a Piazza folder for this task.
<p>
<!---
If you believe that your schedule or life-circumstances disallow the ability to
  work in a pair, contact me immediately by email.
Without making prior arrangments with me, individual students submitting a
  program when pairing is required will receive a substantial point deduction.
<p>
--->

<h3>Starting/Finishing Programs</h3>
Please read each assignment completely and carefully before starting it.
I suggest that you print and then read it, marking relevant material with a
  highlighter (details that you might forget by the end of an assignment).
Then, re-read the assignment before submitting your work.
Programs are typically assigned on Tuesday and due two weeks later on the
  following Tuesday, when the next program is assigned; students should plan to
  have finished their current programs on Monday, so they can start on the new
  programs in lab on Tuesday; see above for how this leads to extra credit.
<p>

<h3>Identifying Submissions</h3>
Only <b>ONE STUDENT</b> of the pair should submit the assignment (all parts of
  it).
If students work in pairs, <b>BOTH NAMES</b> and their UCInetID names must
  appear in a comment at the top of each submitted program.
For example if Romeo Montague (whose UCInetID is romeo1) submitted a program
  that he worked on with his partner Juliet Capulet (whose UCInetID is jcapulet)
  the comment at the top of each .py file would appear as:
<pre><b>  # Submitter: romeo1(Montague, Romeo)
  # Partner  : jcapulet(Capulet, Juliet)
  # We certify that we worked cooperatively on this programming
  #   assignment, according to the rules for pair programming</b></pre>
If you do not know what the terms <b>cooperatively</b> and/or
  <b>rules for pair programming</b> mean, please read about
  <a href="../common/handouts/pairprogramming.html">Pair Programming</a>
  before starting this assignment.
<p>
If the names do not appear at the top of all your submissions in exactly this
  form, points will be deducted.
If you are submitting by yourself, you may omit all lines but the first
  (<b>Submitter</b>).


<h3>Multiple Submissions/Failure to Submit</h3>
Checkmate allows students to remove a submission and then resubmit.
We will grade only your final submission submitted before the <b>Due Time</b>
 (and extra credit points are based on only that submission's time).
For assignments with multiple parts, please <b>turn in each part
  as you finish it</b>, so that I can accurately assess the progress of the
  class as a whole during this assignment.
If you discover something wrong with your code after you submit it, you can
  always correct the code, remove the old code, and resubmit the new code.
<p>
Students are responsible for submitting their solutions on time.
In the past, individual students and pairs have submitted the wrong files;
  in other cases, one student has submitted the wrong file for the pair.
In all these cases, what is submitted will be graded.
I suggest that you carefully <b>double-check</b> what you submit to avoid these
   mistake.
After submitting (the correct file) to Checkmate, ensure that it shows the
  assignment's status as completely submitted. 
<p>

<h3>No Retrieval</h3>
Students cannot retrieve a submission from Checkmate: it is a shortcoming of
  the program (but designed to protect other students from possibly downloading
  your work); so, you are responsible for archiving your work so that you have a
  copy of what you submit.
Also, ensure that you always submit in the correct (most up to date) version of
  your code; double-check; if you are unsure, resubmit.
<p>

<h3>Instructor Solutions</h3>
I will release my solutions to all assignments the morning after they are due,
  the EEE dropoff box for the class.
<p>

<h3>Programming Assignments Schedule: Due at 11:30pm</h3>
<p>
<table cellspacing="0" cellpadding="5" border="1" rules="all">
<thead>
<tr><th>Program</th><th>Assigned/<br>Released</th><th>Due</th><th>Description</th><th>Pairing?</th>
</thead>
<tbody>

<!------- Program #0 ------->

<tr><td align="right">#0</td>
<td align="center">1/3</td><td align="center">1/10</td>
<td><a href="assignments/program0/program.html">
  Python, Eclipse (the Debugger Perspective), and Testing
</a>
<td><b>Prohibited</b></td>


<!------- Program #1 ------->

<tr><td align="right">#1</td>
<td align="center">1/10</td><td align="center">1/22</td>
<td><a href="assignments/program1/program.html">
  Iteration and Major Data Types
  <!---<br> List, Tuple, Set, and Dict (and Open for files)-->
</a>
<p>
IMPORTANT: In an effort to motivate students to work on these programs
well before the due date (and learn the material better, possibly earning
extra credit points for submitting them early), I will grade only two parts
submitted on 1/21 or later (and only one part submitted 1/22).
<p>
You can submit as many parts as you want earlier. In fact, if you
submit all parts by 1/20 you will earn 2 extra credit points; but if
you submit all parts on 1/22, we will grade only one, discarding the
other four.
<p>
So, start early on this assignment and work at a steady pace, trying to
submit your work well before the due date. Submit only two programs
on 1/21 or later; submit only one on 1/22 (so either submit two on 1/21, or
submit one on 1/21 and one on 1/22; but if you submit two on 1/21 and
one on 1/22, one won't be graded).
<td>Recommended</td>

<!------- Program #2 ------->

<tr><td align="right">#2</td>
<td align="center">1/22</td><td align="center">2/5</td>
<td><a href="assignments/program2/program.html">
 Classes, Overloaded Operators, and Iterators
</a>
<td>Recommended</td>



<!------- Program #3 ------->

<tr><td align="right">#3</td>
  <td align="center">2/5</td><td align="center">2/19</td>
<td><a href="assignments/program3/program.html">
  Namedtuple (Text Processing: Programs writing Programs)
</a>
<td>Recommended</td>


<!------- Program #4 ------->

<tr><td align="right">#4</td>
<td align="center">2/19</td><td align="center">3/5</td>
<td><a href="assignments/program4/program.html">
  Annotation Checker (Mutual Recursion)
</a>
<td>Recommended</td>


<!------- Program #5 ------->

<tr><td align="right">#5</td>
<td align="center">3/5</td><td align="center">3/17</td>
<td><a href="assignments/program5/program.html">
  Inheritance and Animation
</a>
<td><b>Prohibited</b></td>


</tbody>
</table>


<hr align="center" width="100%">
</body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ