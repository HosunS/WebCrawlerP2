¦Ifinal_url¢DtypeEvaluex;https://www.ics.uci.edu/~eppstein/projects/pairs/Data/hs31/Lhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1037¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXTue, 20 May 1997 00:19:30 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"ba4-311e210aa2880-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 16:23:52 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY¤<HTML>
<HEAD>
<TITLE>Hierarchical Clustering in a 31-dimensional Fractal</TITLE>
</HEAD>

<BODY>
<H1><A HREF="../">Test of Closest Pair Data Structures</A></H1>
<H2>Hierarchical Clustering in a 31-dimensional Fractal</H2>

<TABLE BORDER=1>
<TR ALIGN=RIGHT><TD></TD>
    <TD>Brute&nbsp;Force</TD>
    <TD>Neighbors</TD>
    <TD>Quadtree</TD>
    <TD>Conga&nbsp;Line</TD>
    <TD>MultiConga</TD>
    <TD>FastPair</TD></TR>
<TR ALIGN=RIGHT><TD><I>n</I>&nbsp;=&nbsp;250</TD>
    <TD><A HREF="b250">12.71s</A></TD>
    <TD><A HREF="n250">0.67s</A></TD>
    <TD><A HREF="q250"><B>0.52s</B></A></TD>
    <TD><A HREF="c250">2.05s</A></TD>
    <TD><A HREF="m250">0.68s</A></TD>
    <TD><A HREF="f250">0.59s</A></TD></TR>
<TR ALIGN=RIGHT><TD>500</TD>
    <TD><A HREF="b500">107.90s</A></TD>
    <TD><A HREF="n500">3.18s</A></TD>
    <TD><A HREF="q500"><B>2.51s</B></A></TD>
    <TD><A HREF="c500">10.79s</A></TD>
    <TD><A HREF="m500">3.03s</A></TD>
    <TD><A HREF="f500">2.72s</A></TD></TR>
<TR ALIGN=RIGHT><TD>1000</TD>
    <TD><A HREF="b1000">926.06s</A></TD>
    <TD><A HREF="n1000">14.38s</A></TD>
    <TD><A HREF="q1000"><B>11.18s</B></A></TD>
    <TD><A HREF="c1000">55.67s</A></TD>
    <TD><A HREF="m1000">13.62s</A></TD>
    <TD><A HREF="f1000">12.41s</A></TD></TR>
<TR ALIGN=RIGHT><TD>2000</TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="n2000">61.26s</A></TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="c2000">278.97s</A></TD>
    <TD><A HREF="m2000">64.07s</A></TD>
    <TD><A HREF="f2000"><B>56.79s</B></A></TD></TR>
<TR ALIGN=RIGHT><TD>4000</TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="n4000">244.23s</A></TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="c4000">1227.56s</A></TD>
    <TD><A HREF="m4000">269.56s</A></TD>
    <TD><A HREF="f4000"><B>233.05s</B></A></TD></TR>
<TR ALIGN=RIGHT><TD>8000</TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="n8000">1014.02s</A></TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="c8000">5354.00s</A></TD>
    <TD><A HREF="m8000">1128.76s</A></TD>
    <TD><A HREF="f8000"><B>972.92s</B></A></TD></TR>
<TR ALIGN=RIGHT><TD>16000</TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="n16000">4492.64s</A></TD>
    <TD>&nbsp;</TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="m16000">4624.10s</A></TD>
    <TD><A HREF="f16000"><B>4152.42s</B></A></TD></TR>
</TABLE>

<P>Clusters are combined by unweighted medians. Points were placed 
uniformly at random in the 31-dimensional generalized Sierpinski 
tetrahedron (formed by choosing 5 random binary values, taking bitwise 
exclusive ors of each nonempty subset, and scaling into the range from 0 to 
1). Times include only the construction of the closest pair data structure 
and algorithm execution (not the initial point placement) and are averages 
over ten runs.  The quadtree data structure was only run on data sets of 
1000 or fewer points due to its high storage requirements.  Code was 
written in C++, compiled and optimized by Metrowerks Codewarrior 10, and 
run on a 200MHz PowerPC 603e processor (Apple Powerbook 3400c).
</BODY>
</HTML>Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ