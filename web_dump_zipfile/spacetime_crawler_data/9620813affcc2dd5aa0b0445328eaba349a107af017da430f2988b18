¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE39210¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueX°trac_form_token=b5849ec7b74adc7b0f5b9a8b; httponly; Path=/wiki/public, trac_session=db68e86b612b17f7734eb858; expires=Wed, 08 May 2019 23:39:05 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueGExpiresAv¢DtypeEvalueXFri, 01 Jan 1999 00:00:00 GMT¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueMCache-ControlAv¢DtypeEvalueOmust-revalidate¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 07 Feb 2019 23:39:04 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueWtext/html;charset=utf-8Kraw_content¢DtypeEvalueY™*<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

    <html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      cs122b-2018-winter-project2 (diff) â€“ Public
    </title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/wiki/public/search" />
        <link rel="help" href="/wiki/public/wiki/TracGuide" />
        <link rel="up" href="/wiki/public/wiki/cs122b-2018-winter-project2?action=history" title="Page history" />
        <link rel="next" href="/wiki/public/wiki/cs122b-2018-winter-project2?action=diff&amp;version=4" title="Version 4" />
        <link rel="start" href="/wiki/public/wiki" />
        <link rel="stylesheet" href="/wiki/public/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/diff.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/tracwysiwyg/editor.css" />
        <link rel="tracwysiwyg.base" href="/wiki/public" />
        <link rel="prev" href="/wiki/public/wiki/cs122b-2018-winter-project2?action=diff&amp;version=2" title="Version 2" />
        <link rel="shortcut icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
    <style id="trac-noscript" type="text/css">.trac-noscript { display: none !important }</style>
    <script type="text/javascript">
      var _tracwysiwyg={};
    </script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/jquery.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/babel.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/trac.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/search.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/diff.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/tracwysiwyg/wysiwyg.js"></script>
    <script type="text/javascript">
      jQuery("#trac-noscript").remove();
      jQuery(document).ready(function($) {
        $(".trac-autofocus").focus();
        $(".trac-target-new").attr("target", "_blank");
        setTimeout(function() { $(".trac-scroll").scrollToTop() }, 1);
        $(".trac-disable-on-submit").disableOnSubmit();
      });
    </script>
    <link rel="stylesheet" type="text/css" href="/wiki/public/chrome/common/css/diff.css" />
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW" />
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.ics.uci.edu/"><img src="/wiki/public/chrome/site/ics.jpg" alt="ICS Logo" height="67" width="128" /></a>
      </div>
      <form id="search" action="/wiki/public/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/wiki/public/login">Login</a></li><li><a href="/wiki/public/prefs">Preferences</a></li><li class="last"><a href="/wiki/public/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
        <ul>
          <li class="first"><span>&larr; <a class="prev" href="/wiki/public/wiki/cs122b-2018-winter-project2?action=diff&amp;version=2" title="Version 2">Previous Change</a></span></li><li><a href="/wiki/public/wiki/cs122b-2018-winter-project2?action=history" title="Page history">Wiki History</a></li><li class="last"><span><a class="next" href="/wiki/public/wiki/cs122b-2018-winter-project2?action=diff&amp;version=4" title="Version 4">Next Change</a> &rarr;</span></li>
        </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
      <h1>
        Changes between
          <a href="/wiki/public/wiki/cs122b-2018-winter-project2?version=2">Version 2</a> and
          <a href="/wiki/public/wiki/cs122b-2018-winter-project2?version=3">Version 3</a> of
          <a href="/wiki/public/wiki/cs122b-2018-winter-project2">cs122b-2018-winter-project2</a>
      </h1>
      <form method="post" id="prefs" action="/wiki/public/wiki/cs122b-2018-winter-project2?version=3"><div><input type="hidden" name="__FORM_TOKEN" value="b5849ec7b74adc7b0f5b9a8b" /></div>
        <div>
          <input type="hidden" name="action" value="diff" />
          <input type="hidden" name="version" value="3" />
          <input type="hidden" name="old_version" value="2" />
          
  <label for="style">View differences</label>
  <select id="style" name="style">
    <option selected="selected" value="inline">inline</option>
    <option value="sidebyside">side by side</option>
  </select>
  <div class="field">
    <label><input type="radio" name="contextall" value="0" checked="checked" />
             Show</label>
      <label><input type="text" name="contextlines" id="contextlines" size="2" maxlength="3" value="2" />
             lines around each change</label><br />
    <label><input type="radio" name="contextall" value="1" />
           Show the changes in full context</label>
  </div>
  <fieldset id="ignore">
    <legend>Ignore:</legend>
    <div class="field">
      <input type="checkbox" id="ignoreblanklines" name="ignoreblanklines" />
      <label for="ignoreblanklines">Blank lines</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorecase" name="ignorecase" />
      <label for="ignorecase">Case changes</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorewhitespace" name="ignorewhitespace" />
      <label for="ignorewhitespace">White space changes</label>
    </div>
  </fieldset>
  <div class="buttons">
    <input type="submit" name="update" value="Update" />
  </div>

        </div>
      </form>
      <dl id="overview">
        <dt class="property time">Timestamp:</dt>
        <dd class="time">
            Jan 17, 2018 1:53:31 PM (<a class="timeline" href="/wiki/public/timeline?from=2018-01-17T13%3A53%3A31-08%3A00&amp;precision=second" title="See timeline at Jan 17, 2018 1:53:31 PM">13 months</a> ago)
        </dd>
        <dt class="property author">Author:</dt>
        <dd class="author">
          zuozhi
        </dd>
        <dt class="property message">Comment:</dt>
        <dd class="message">
          
          <p>
--
</p>

        </dd>
      </dl>
      <div class="diff">
        <div class="legend" id="diff-legend">
          <h3>Legend:</h3>
          <dl>
            <dt class="unmod"></dt><dd>Unmodified</dd>
            <dt class="add"></dt><dd>Added</dd>
            <dt class="rem"></dt><dd>Removed</dd>
            <dt class="mod"></dt><dd>Modified</dd>
          </dl>
        </div>
        <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2 id="file0">
          <a href="/wiki/public/wiki/cs122b-2018-winter-project2?version=3">cs122b-2018-winter-project2</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Version 2">
                    <a href="/wiki/public/wiki/cs122b-2018-winter-project2?version=2#L6">
                      v2</a>
                  </th>
                  <th title="Version 3">
                    <a href="/wiki/public/wiki/cs122b-2018-winter-project2?version=3#L6">
                      v3</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>6</th><th>6</th><td class="l"><span>&nbsp;* [#Overview Project 2 Overview]</span></td>
                  </tr><tr>
                          <th>7</th><th>7</th><td class="l"><span>&nbsp;* [#StepByStep Step by Step]</span></td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th>Â </th><th>8</th><td class="r"><ins>&nbsp;* [#BackendAPI Frontend Backend Separation]</ins></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8</th><th>9</th><td class="l"><span>&nbsp;* [#DeploymentOnAWS Deployment on AWS]</span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>9</th><th>Â </th><td class="l"><del>&nbsp;* [#Deliverables Deliverables]</del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>10</th><th>10</th><td class="l"><span>&nbsp;* [#Grading Demonstration and Grading Criteria]</span></td>
                  </tr><tr>
                          <th>11</th><th>11</th><td class="l"><span></span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2018-winter-project2?version=2#L76">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2018-winter-project2?version=3#L76">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>76</th><th>76</th><td class="l"><span>We are not specifying all the details of the interfaces. You are&nbsp; encouraged to use your imagination to enhance the functionalities.&nbsp; We highly recommend you implement the above using '''JSP and/or Java servlets''' at the server side. You can use any type of client-side technologies&nbsp; to enhance the functionality of your website (e.g., Javascript, style sheets, etc). Regardless of the client-side technology, you will most likely make extensive use of HTML.</span></td>
                  </tr><tr>
                          <th>77</th><th>77</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="first">
                          <th>78</th><th>Â </th><td class="l"><del>----</del></td>
                  </tr><tr>
                          <th>79</th><th>Â </th><td class="l"><del>[[Span(id=TomcatTestExample)]]</del></td>
                  </tr><tr>
                          <th>80</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>81</th><th>Â </th><td class="l"><del>== !TomcatTest example ==</del></td>
                  </tr><tr>
                          <th>82</th><th>Â </th><td class="l"><del>To test that Tomcat is working&nbsp; and communicating with MySQL properly, we've prepared a servlet that performs basically the same tasks as the JDBC program. It queries the test database and returns some structural and content information. To run this program:</del></td>
                  </tr><tr>
                          <th>83</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>84</th><th>Â </th><td class="l"><del>&nbsp;1. Make sure the MySQL database server is running.</del></td>
                  </tr><tr>
                          <th>85</th><th>Â </th><td class="l"><del>&nbsp;1. Download [attachment:wiki:cs122b-2017-winter-project2:TomcatTest.war TomcatTest.war]</del></td>
                  </tr><tr>
                          <th>86</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>87</th><th>Â </th><td class="l"><del>&nbsp; A WAR file is a "Web Application Archive." It contains a compressed directory of the files needed for a ready-to-run java servlet that Tomcat will launch when you go to the Web page designated in the WAR. A WAR file must a have certain directory structure and contain appropriate files (with the appropriate contents) for Tomcat to launch the applet. If your TOMCAT installation was correct, there should be a "webapps" folder under "Tomcat 8.5.9" directory of your Tomcat root&nbsp; installation. It is usually '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;C:\Program Files\Apache Software Foundation\Tomcat8.5.9\webapps'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; on Windows and '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/var/lib/Tomcat8.5.9/webapps/'''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; on Ubuntu. You should place this .WAR here inside the webapps folder.&nbsp; </del></td>
                  </tr><tr>
                          <th>88</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>89</th><th>Â </th><td class="l"><del>&nbsp;3. We'll now "deploy" this application.&nbsp; Go to http://localhost:8080; this is your local web page. After installing Tomcat, it was set to the Tomcat welcome page; that page should appear.</del></td>
                  </tr><tr>
                          <th>90</th><th>Â </th><td class="l"><del>&nbsp;3. Click on Tomcat Manager; enter your admin user login and password (given when you installed Tomcat); click OK. If your login and password are correct, the Tomcat Web Application Manger page will appear.</del></td>
                  </tr><tr>
                          <th>91</th><th>Â </th><td class="l"><del>&nbsp;3. Under "Deploy directory or WAR file located on server" you should see a deploy button. You need not specify a path. If you simply click the deploy button, Tomcat will automatically refresh its list of applications. !TomcatTest should now appear in the "Applications" list.&nbsp; Go to http://localhost:8080/TomcatTest to check if you can access a simple HTML page.</del></td>
                  </tr><tr>
                          <th>92</th><th>Â </th><td class="l"><del>&nbsp;3. Go to http://localhost:8080/TomcatTest/servlet/TomcatTest.&nbsp; Tomcat will run the servlet !TomcatTest and print its output onto the web page. If the output is database information, all is well. If instead you see a message that an SQLException occurred, check that the MySQL server is running, that the test database with the correct user name, user password, and table structure has been created.</del></td>
                  </tr><tr>
                          <th>93</th><th>Â </th><td class="l"><del>&nbsp;3. Go to the tomcat installation folder and open the "webapps" folder. This folder contains all the applications you plugged in so far into Tomcat.&nbsp; Open "!TomcatTest" folder. Every file under this folder except for WEB-INF is a file directly accessible from a url such as '''!http://localhost:8080/TomcatTest/MY_FILE_NAME'''.&nbsp; This folder usually contains all the static HTML content you might need for your web application. In our case we have "index.html". Now open the WEB-INF folder. This folder is not directly exposed on the internet. It actually&nbsp; contains your Java executable classes that provide dynamic content of&nbsp; your web application.</del></td>
                  </tr><tr>
                          <th>94</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>95</th><th>Â </th><td class="l"><del>&nbsp; The subfolder "classes" contains your Java classes, while the "lib"&nbsp; folder is used to store the libraries you might use in your Java&nbsp; classes. In the "lib" folder, you will find the MySQL JDBC driver.&nbsp; Another very&nbsp; important file in this folder is "web.xml". This file contains description of all your Java servlets that you would use in your application. We have only one servlet in this application. If you open&nbsp; "web.xml" you will see description of servlet "!TomcatTest&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ". Without&nbsp; "web.xml" Tomcat would not know how to configure a the classes you have&nbsp; in the "classes" folder. In our case, we declare that we have a servlet "!TomcatTestServlet&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;" whose Java class is !TomcatTest&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. We&nbsp; also specify that we map this servlet to path "servlet/!TomcatTest&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;",&nbsp; thus can be accessed at!http://localhost:8080/TomcatTest/servlet/TomcatTest&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.</del></td>
                  </tr><tr>
                          <th>96</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>97</th><th>Â </th><td class="l"><del>&nbsp; Now let's look at the "sources" folder. If you make any changes to "!TomcatTest&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.java", and recompile the program, we'd like those changes to be reflected the next time you reload your web application. To recompile the program, your -classpath flag must contain paths to both the MySQL driver and the servlet API jar file. Assuming you are inside the&nbsp; "sources" folder, the following command will recompile the servlet</del></td>
                  </tr><tr>
                          <th>98</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>99</th><th>Â </th><td class="l"><del>&nbsp; '''&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (Windows)&nbsp; javac -classpath "../lib/servlet-api.jar;../lib/mysql-connector-java-5.14.0-bin.jar" !TomcatTest&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.java'''</del></td>
                  </tr><tr>
                          <th>100</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>101</th><th>Â </th><td class="l"><del>Be sure to place a copy of the !TomcatTest.class file inside the WEB-INF\classes folder (i.e., you want to overwrite the old .class file with the one that you just created).&nbsp; You can go to the "Tomcat Manager" page and click on "reload" next to "!TomcatTest". When you run the servlet now, you should see the desired changes in the functionality.&nbsp; More information on the servlet API is available at hhttp://docs.oracle.com/javaee/6/tutorial/doc/bnafd.html.</del></td>
                  </tr><tr>
                          <th>102</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>103</th><th>Â </th><td class="l"><del>----</del></td>
                  </tr><tr>
                          <th>104</th><th>Â </th><td class="l"><del>[[Span(id=FormExample)]]</del></td>
                  </tr><tr>
                          <th>105</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>106</th><th>Â </th><td class="l"><del>== Form example ==</del></td>
                  </tr><tr>
                          <th>107</th><th>Â </th><td class="l"><del>&nbsp; Download and deploy this [attachment:wiki:cs122b-2017-winter-project2:TomcatForm.war TomcatForm.war]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; file to get familiar with HTML forms.&nbsp; Click the link http://localhost:8080/TomcatForm&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; and click the "Submit Order" button.&nbsp; It will take the value in the "Last Name" box to query a backend credit card table to retrieve records with that last name.</del></td>
                  </tr><tr>
                          <th>108</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>109</th><th>Â </th><td class="l"><del>----</del></td>
                  </tr><tr>
                          <th>110</th><th>Â </th><td class="l"><del>[[Span(id=ServletSession)]]</del></td>
                  </tr><tr>
                          <th>111</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>112</th><th>Â </th><td class="l"><del>== Servlet session examples ==</del></td>
                  </tr><tr>
                          <th>113</th><th>Â </th><td class="l"><del>Install the [attachment:wiki:cs122b-2017-winter-project2:Session.war Session.war] and test the following requests:</del></td>
                  </tr><tr>
                          <th>114</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>115</th><th>Â </th><td class="l"><del>&nbsp;* http://localhost:8080/Session/servlet/ShowSession?myname=Michael [[BR]]</del></td>
                  </tr><tr>
                          <th>116</th><th>Â </th><td class="l"><del>&nbsp;* http://localhost:8080/Session/servlet/ShowItems?newItem=DVD [[BR]]</del></td>
                  </tr><tr>
                          <th>117</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr class="last">
                          <th>118</th><th>Â </th><td class="l"><del>Here are the two java programs: [attachment:wiki:cs122b-2017-winter-project2:ShowSession.java ShowSession.java] and [attachment:wiki:cs122b-2017-winter-project2:ShowItems.java ShowItems.java].</del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>119</th><th>78</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>120</th><th>79</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2018-winter-project2?version=2#L137">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2018-winter-project2?version=3#L96">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>137</th><th>96</th><td class="l"><span>&nbsp;1. Implement the page to do checkout.[[BR]]</span></td>
                  </tr><tr>
                          <th>138</th><th>97</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="first">
                          <th>139</th><th>Â </th><td class="l"><del>----</del></td>
                  </tr><tr>
                          <th>140</th><th>Â </th><td class="l"><del>[[Span(id=DeploymentOnAWS)]] Deployment On AWS</del></td>
                  </tr><tr>
                          <th>141</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr class="last">
                          <th>142</th><th>Â </th><td class="l"><del>After you make the application work on your development machine, deploy it on the AWS instance you have launched in project 1.</del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>143</th><th>98</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>144</th><th>99</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th>Â </th><th>100</th><td class="r"><ins>[[Span(id=BackendAPI)]] Frontend Backend Separation</ins></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>145</th><th>101</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>146</th><th>Â </th><td class="l"><span>[[Span(id=WAR)]]</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>102</th><td class="r"><span>== Frontend Backend Separation ==</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>147</th><th>103</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>148</th><th>Â </th><td class="l"><span>== Creating WAR Archives ==</span></td>
                      </tr><tr>
                        <th>149</th><th>Â </th><td class="l"><span>The following instructions demonstrate how to create a WAR file. Let's say that you have a directory structure as follows:</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>104</th><td class="r"><span>In the past offerings of the class, we used Java Servlet or JSP to generate HTML pages. However, this approach is out of date and no longer considered the best practice. In project 2, we require you to separate the frontend and backend. The Java Servlet backend only provides API in JSON format to the frontend. The frontend fetches the data by sending HTTP requests to the backend and then displays the data. The frontend needs be written in separate HTML, CSS, and JS files. </span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>150</th><th>105</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>151</th><th>Â </th><td class="l"><span>C:\!MyProject</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>106</th><td class="r"><span>Here's an example [attachment:wiki:cs122b:project-2-sample1.war project-2-sample1] uses this approach to show a list of stars, similar to the TomcatTest example we provided in project 1.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>152</th><th>107</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>153</th><th>Â </th><td class="l"><del>&nbsp; |-- index.jsp</del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>154</th><th>108</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>155</th><th>Â </th><td class="l"><del>&nbsp; |--WEB-INF</del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>156</th><th>109</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="first">
                          <th>157</th><th>Â </th><td class="l"><del>&nbsp; |---- web.xml</del></td>
                  </tr><tr>
                          <th>158</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>159</th><th>Â </th><td class="l"><del>&nbsp; |---- classes\org\mypackage</del></td>
                  </tr><tr>
                          <th>160</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>161</th><th>Â </th><td class="l"><del>&nbsp; |---- !MyClass&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.class</del></td>
                  </tr><tr>
                          <th>162</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>163</th><th>Â </th><td class="l"><del>Use the following commands to create the WAR archive (under a DOS prompt). [[BR]][[BR]]</del></td>
                  </tr><tr>
                          <th>164</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>165</th><th>Â </th><td class="l"><del>1) '''DOS:&gt;''' cd !MyProject [[BR]]&nbsp; &nbsp;2) '''DOS:&gt;'''&nbsp; jar cvf ..\mywebapp.war *.*&nbsp; [[BR]][[BR]]</del></td>
                  </tr><tr>
                          <th>166</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr class="last">
                          <th>167</th><th>Â </th><td class="l"><del>This will generate the WAR file (mywebapp.war) of !MyProject in the top level of the WAR file.&nbsp; Note that the WAR file is created outside the !MyProject directory.</del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>168</th><th>110</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>169</th><th>111</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>170</th><th>Â </th><td class="l"><span>[[Span(id=<del>JSP</del>)]]</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>112</th><td class="r"><span>[[Span(id=<ins>FormExample</ins>)]]</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>171</th><th>113</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>172</th><th>Â </th><td class="l"><span>== JSP example (Optional) ==</span></td>
                      </tr><tr>
                        <th>173</th><th>Â </th><td class="l"><span>Download and install the [attachment:wiki:cs122b-2017-winter-project2:jspTest.war jspTest.war] file in a similar fashion to how you installed !TomcatTest.war.&nbsp; Checkout its directory structure. Read the index.jsp file and note where the mysql-connector-java-5.14.0-bin.jar file is stored.</span></td>
                      </tr><tr>
                        <th>174</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>175</th><th>Â </th><td class="l"><span>Then use your browser to open the link:</span></td>
                      </tr><tr>
                        <th>176</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>177</th><th>Â </th><td class="l"><span>&nbsp; http://localhost:8080/jspTest/index.jsp</span></td>
                      </tr><tr>
                        <th>178</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>179</th><th>Â </th><td class="l"><span>which will activate the JSP page.&nbsp; It will talk to your local MySQL database.</span></td>
                      </tr><tr>
                        <th>180</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>181</th><th>Â </th><td class="l"><span>To learn more about JSP using examples, check:</span></td>
                      </tr><tr>
                        <th>182</th><th>Â </th><td class="l"><span></span></td>
                      </tr><tr>
                        <th>183</th><th>Â </th><td class="l"><span>&nbsp;* http://java.sun.com/products/jsp/html/jspbasics.fm.html</span></td>
                      </tr><tr>
                        <th>184</th><th>Â </th><td class="l"><span>&nbsp;* http://www.easywayserver.com/jsp/JSP-example.htm</span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>114</th><td class="r"><span>== Form example ==</span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>115</th><td class="r"><span>&nbsp; Download and deploy this [attachment:wiki:cs122b-2017-winter-project2:TomcatForm.war TomcatForm.war]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; file to get familiar with HTML forms.&nbsp; Click the link http://localhost:8080/TomcatForm&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; and click the "Submit Order" button.&nbsp; It will take the value in the "Last Name" box to query a backend credit card table to retrieve records with that last name.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>185</th><th>116</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>186</th><th>117</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>187</th><th>Â </th><td class="l"><span>== Deliverables ==</span></td>
                      </tr><tr>
                        <th>188</th><th>Â </th><td class="l"><span>Please submit all the required files (*.class, *.jar, *.jsp, *.html etc) to run your program as WAR. In addition, include any&nbsp; source files (*.java) under WEB-INF/sources.&nbsp; Read the following&nbsp; &nbsp;[http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.wst.webtools.doc.user%2Ftopics%2Ftwcrewar.html page]&nbsp; to get information about how to create a WAR file.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>118</th><td class="r"><span>[[Span(id=ServletSession)]]</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>189</th><th>119</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>190</th><th>Â </th><td class="l"><span>&nbsp;* Your submission "war" file should be named&nbsp; "project2_[groupID].war". For example, the name of this war file should be __'''project2_09.war'''__ for group 9.</span></td>
                      </tr><tr>
                        <th>191</th><th>Â </th><td class="l"><span>&nbsp;* The database name, db username, and the password (i.e., used in the JDBC parts of your code) should be whatever works in your AWS instance environment. </span></td>
                      </tr><tr>
                        <th>192</th><th>Â </th><td class="l"><span>&nbsp;* Prepare a README file detailing how to&nbsp; compile your java sources (if any) and how to install the generated&nbsp; class files. Following your instructions, we should be able to compile your Java Servlets (and other Java resources, if any) and use the generated class files in reloading your fabflix webapp. These instructions should be accessible using the link http://PUBLIC_IP:8080/fabflix/reports/readme. If your project does not compile/run, it will get a very low score.</span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>120</th><td class="r"><span>== Servlet session examples ==</span></td>
                      </tr><tr>
                        <th>Â </th><th>121</th><td class="r"><span>Install the [attachment:wiki:cs122b-2017-winter-project2:Session.war Session.war] and test the following requests:</span></td>
                      </tr><tr>
                        <th>Â </th><th>122</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>123</th><td class="r"><span>&nbsp;* http://localhost:8080/Session/servlet/ShowSession?myname=Michael [[BR]]</span></td>
                      </tr><tr>
                        <th>Â </th><th>124</th><td class="r"><span>&nbsp;* http://localhost:8080/Session/servlet/ShowItems?newItem=DVD [[BR]]</span></td>
                      </tr><tr>
                        <th>Â </th><th>125</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>126</th><td class="r"><span>Here are the two java programs: [attachment:wiki:cs122b-2017-winter-project2:ShowSession.java ShowSession.java] and [attachment:wiki:cs122b-2017-winter-project2:ShowItems.java ShowItems.java].</span></td>
                      </tr><tr>
                        <th>Â </th><th>127</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>128</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>129</th><td class="r"><span>----</span></td>
                      </tr><tr>
                        <th>Â </th><th>130</th><td class="r"><span>[[Span(id=DeploymentOnAWS)]] Deployment On AWS and Submissions</span></td>
                      </tr><tr>
                        <th>Â </th><th>131</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>132</th><td class="r"><span>Use Github for your project 2 code and deploy on AWS, similar to what you have done in project 1.</span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>133</th><td class="r"><span></span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>193</th><th>134</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>194</th><th>135</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
      </div>
  </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/wiki/public/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/wiki/public/about"><strong>Trac 1.0.13</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ