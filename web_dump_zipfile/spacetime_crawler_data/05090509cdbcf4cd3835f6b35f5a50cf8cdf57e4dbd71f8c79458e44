¦Ifinal_url¢DtypeEvaluex0https://www.ics.uci.edu/~theory/269/170519b.htmlLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1900¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 19 May 2017 01:10:25 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"76c-54fd62fbb5b5d"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 01:28:07 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYl<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
<title>Theory Seminar, May 19, 2017</title>
<link rel="stylesheet" href="../stylesheet.css" type="text/css">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
});
</script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<body>
<p><a href="/~theory/"><img src="/~theory/logo/CATOC2.jpg" 
alt="ICS Theory Group"></a></p>

<h2><a href="/~theory/269/">Spring 2017: Theory Seminar</a><br>
Bren Hall, Room 1423, 1:00pm</h2>

<hr>

<h2>May 19, 2017:</h2>
<h1>
Stable graph matching and the post office problem in road networks
</h1>
<h2>
Nil Mamano
</h2>

<p>
<b>Abstract:</b>
We study a graph-based version of the classic stable matching problem, in
which nodes are stably matched to a subset of nodes denoted centers, as
prioritized by their shortest-path distances, so that each center is
apportioned a certain number of nodes. We show that for a planar graphs n
nodes and $k$ centers, the problem can be solved in $O(n^{1.5} \log n)$
time, which
improves over the $O(kn)$ running time of the Gale-Shapley algorithm when 
$k$ is large. In order to do this, we use a novel dynamic nearest-neighbor data
structure based on shortest-path distances. This data structure, which might
be of independent interest for other applications, maintains a subset of
nodes of the graph and allows nearest-neighbor queries (for other nodes in
the graph) in $O(n^{0.5})$ time and updates in $O(n^{0.5} \log n)$ time.
</p>

<p>
Joint work with
David Eppstein, Michael T. Goodrich, and Doruk Korkmaz
</p>

</body>
</html>

Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ