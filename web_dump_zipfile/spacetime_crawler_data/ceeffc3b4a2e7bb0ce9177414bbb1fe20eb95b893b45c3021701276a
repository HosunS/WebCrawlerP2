¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueC874¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:53:11 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"36a-4da84bf8befc0"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXSun, 10 Feb 2019 10:20:40 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueYj/*
  $Id: ppdsample.h 4034 2008-10-03 01:17:40Z rares $

  Copyright (C) 2007 by The Regents of the University of California

  Redistribution of this file is permitted under the terms of the 
  BSD license

  Date: 01/14/2006
  Author: Rares Vernica <rares (at) ics.uci.edu>
*/

#ifndef _ppdsample_h_
#define _ppdsample_h_

#include "cluster/clusters.h"
#include "ppdtriple.h"

class PPDSample 
{
protected:
  Sample sample;
  const vector<string> *data;
  Clusters *clusters;
  ContQueryPivot *queryPivot;

  const unsigned samplePer;   // (20)

public:
  PPDSample(const vector<string> *d, Clusters *c, ContQueryPivot *q,
            const unsigned samplePer = 20): 
    data(d), clusters(c), queryPivot(q), samplePer(samplePer) {}
  virtual ~PPDSample() {};

  virtual bool hasNext() const = 0;
  virtual PPDTriple next() = 0;

  ostream& info(ostream& out);
};

#endif
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ