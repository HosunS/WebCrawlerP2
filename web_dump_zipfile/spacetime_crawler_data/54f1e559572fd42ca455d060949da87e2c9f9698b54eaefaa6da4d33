¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue…¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 02:57:37 GMT¢Ak¢DtypeEvalueQTransfer-EncodingAv¢DtypeEvalueGchunked¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14Kraw_content¢DtypeEvalueYê<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
      "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML><HEAD>
<TITLE> CompSci 161 Homework #3 </TITLE>
</HEAD><BODY>
<span style="color:#000000; font:16px Arial, Helvetica, sans-serif;">

<H2 align=center> Homework #3</H2>

<table border=1 cellspacing=0>
<tr><th width="5%">#</th>
    <th width="70%"><font color=red>required problems</font></th>
    <th width="25%">topic</th>
<tr><td align=center>1</td>
    <td>Describe an algorithm that, given <I>n</I> integers
      in the range 1 to <I>k</I>,
      preprocesses its input and then answers in <I>O</I>(1) time
      any query about how many of the <I>n</I> integers
      fall into a range [<I>a</I>...<I>b</I>].&nbsp;
      The preprocessing phase must run in <I>O</I>(<I>n+k</I>) time.
    </td>
    <td>range query</td>
<tr><td align=center>2</td>
    <td>GT Exercise C-9.6 on page 279
<!--
     <BR>Let <I>A</I> and <I>B</I> be two sequences of <I>n</I> integers each,
      in the range [1,<I>n</I><sup>4</sup>].
      Given an integer <I>x</I>, describe an <I>O</I>(<I>n</I>)-time algorithm for
      determining if there is an integer <I>a</I> in <I>A</I>
      and an integer <I>b</I> in <I>B</I> such that <I>x = a + b</I>.
-->
    </td>
    <td>search</td>
<tr><td align=center>3</td>
    <td>
      Let <I>A</I> be an array of size <I>n</I> of integers,
      where <I>A</I>[1] &lt; <I>A</I>[2] &lt;
      <sup><sub><big>...</big></sub></sup> &lt; <I>A</I>[<I>n</I>].
     <BR>
      (Note that each entry may be a positive or negative integer.)
     <BR>
     <BR>(a) Give an algorithm that takes <I>O</I>(log <I>n</I>) time
      to find an <I>i</I> such that <I>A</I>[<I>i</I>]&nbsp;=&nbsp;<I>i</I>,
      provided such an <I>i</I> exists.
      If no such <I>i</I> exists, the algorithm returns 0.
     <BR>
     <BR>(b) Prove that any algorithm to solve this problem using comparisons
      must take time &Omega;(log <I>n</I>).
    </td>
    <td>search</td>
<tr><td align=center>4</td>
    <td>GT Exercise R-9.1 on page 279
<!--
     <BR>Which, if any, of the algorithms bubble-sort, heap-sort, merge-sort,
      and quick-sort are stable?
-->
    </td>
    <td>stability</td>
<tr><td align=center>5</td>
    <td>CLRS Exercise 6.4-3 on page 160
       <BR>What is the running time of <tt>HEAPSORT</tt> on an array <I>A</I>
         of length <I>n</I> that is already sorted in increasing order?
         What about decreasing order?
        </td>
    <td>heapsort complexity</td>
</table>

<P>

<table border=1 cellspacing=0>
<tr><th width="5%">#</th>
    <th width="70%"><font color="#009900">suggested problems</font></th>
    <th width="25%">topic</th>
<tr><td align=center>6</td>
    <td>CLRS Exercise 6.1-1 on page 153
      <BR>What are the minimum and maximum number of elements in a heap of height <I>h</h>?
       </td>
    <td>heaps</td>
<tr><td align=center>7</td>
    <td>Baase Exercise 5.3 on page 242<BR>
<!--
      We used an adversary argument to establish the lower bound for finding the
      minimum and maximum of <I>n</I> keys.
      What lower bound do we get from a decision tree argument?
-->
      We wish to establish a lower bound for finding the
      minimum and maximum of <I>n</I> keys.
      What lower bound can we get from a decision tree argument?
      </td>
    <td>lower bound on maxmin</td>
<tr><td align=center>8</td>
    <td>A file contains <I>n</I> bytes,
        each consisting of <I>k</I> bits.&nbsp;
        You must determine how many bits in the file are 1's.&nbsp;
        The function <I>read()</I> returns the next byte from the file
        and the function <I>eof()</I> returns TRUE iff there are no more
        bytes to be read.&nbsp;
        You may use normal arithmetic operations and the boolean
        function <I>odd(x)</I>, which returns TRUE
        iff <I>x</I> is not evenly divisible by two.
        <OL type=a>
        <LI> Give an algorithm (call it <I>A</I>) which solves this
             problem using only <I>O</I>(1) space.&nbsp;
             What is the time complexity of algorithm <I>A</I> as a
             function of <I>n</I> and <I>k</I>?
        <LI> Give an algorithm (call it <I>B</I>) which solves this
             problem by building a table of the number of 1's in all
             possible bytes.&nbsp;
             What are the time and space complexities
             of algorithm <I>B</I>?
        <LI> Discuss the time-space tradeoffs between
             algorithms <I>A</I> and <I>B</I> for
             relative values of <I>n</I> and <I>k</I>.&nbsp;
             When would you use (or not use) each?
        </OL>
    </td>
    <td>time-space trade-off</td>
<tr><td align=center>9<font color=blue>*</font></td>
    <td>Design a procedure to rotate a vector of <I>n</I> elements
        left (in place) by <I>p</I> positions using <I>O</I>(<I>n</I>)
        time and only a constant amount of extra storage.
        For instance, with <I>n</I> = 8 and <I>p</I> = 3,
        the vector <tt>ABCDEFGH</tt> is rotated to be <tt>DEFGHABC</tt>.
<BR>    Hint: First, devise a procedure to reverse the elements of
        a subvector, and then find a series of reversals that will
        result in the desired rotation.</td>
    <td>&nbsp;</td>
</table>

<HR>

<small>Last modified: Jan 10, 2019</small>
</span>
</BODY></HTML>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ