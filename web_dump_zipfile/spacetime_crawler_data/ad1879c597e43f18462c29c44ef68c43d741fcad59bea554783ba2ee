¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue…¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 02:17:17 GMT¢Ak¢DtypeEvalueQTransfer-EncodingAv¢DtypeEvalueGchunked¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14Kraw_content¢DtypeEvalueYÂ<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
      "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML><HEAD>
<TITLE> CompSci 161 Homework #1 </TITLE>
</HEAD><BODY>
<span style="color:#000000; font:16px Arial, Helvetica, sans-serif;">

<H2 align=center> Homework #1</H2>

This homework involves topics that,
for the most part, should have been covered
in earlier courses (ICS 6D and ICS 46).

<P>

<table border=1 cellspacing=0>
<tr><th width="5%">#</th>
    <th width="70%"><font color=red>required problems</font></th>
    <th width="25%">topic</th>
<tr><td align=center>1</td>
    <td>GT Exercise R-1.7 on page 42
<!--
     <BR> Order the following list of functions by the big-Oh notation.
        group together those functions that are big-Oh of one another.
<BR>
<TABLE border=0 cellspacing=0>
<tr><td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td>
    <td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td>
    <td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td>
    <td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td>
    <td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td>
    <td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td>
<tr><td></td>
    <td>6<I>n</I> log <I>n</I></td>
    <td>2<sup>100</sup></td>
    <td><I>log log <I>n</I></td>
    <td>log<sup>2</sup> <I>n</I></td>
    <td>2<sup>log <I>n</I></sup></td>
<tr><td></td>
    <td>2<sup>2<sup><I>n</I></sup></sup></td>
    <td>&lceil;&radic;<I>n</I>&rceil;</td>
    <td><I>n</I><sup>0.01</sup></td>
    <td>1/<I>n</I></td>
    <td>4<I>n</I><sup>3/2</sup></td>
<tr><td></td>
    <td>3<I>n</I><sup>0.5</sup></td>
    <td>5<I>n</I></td>
    <td><sub>&lfloor;</sub>2<I>n</I> log<sup>2</sup> <I>n</I><sub>&rfloor;</sub></td>
    <td>2<sup><I>n</I></sup></td>
    <td><I>n</I> log<sub>4</sub> <I>n</I></td>
<tr><td></td>
    <td>4<sup><I>n</I></sup></td>
    <td><I>n</I><sup>3</sup></td>
    <td><I>n</I><sup>2</sup> log <I>n</I></td>
    <td>4<sup>lg <I>n</I></sup></td>
    <td>&radic;(log <I>n</I>)</td>
</TABLE>
-->
     </td>
    <td>O-notation</td>
<tr><td align=center>2</td>
    <td>GT Exercise R-1.17 on page 44,
        but assume that <I>f</I> (<I>n</I>) and <I>g</I>(<I>n</I>) are non-negative functions.
<!--
      <BR>Show that <I>O</I>( max{ <I>f</I> (<I>n</I>), <I>g</I>(<I>n</I>)} ) = <I>O</I> ( <I>f</I> (<I>n</I>)+<I>g</I>(<I>n</I>) ).
-->
    <td>O-notation</td>
<tr><td align=center>3</td>
    <td>GT Exercise R-13.2 on page 392
    <td>O-notation</td>
<tr><td align=center>4</td>
    <td>CLRS Exercise C.3-3 on page 1200
      <BR>A carnival game consists of three dice in a cage.
       A player can bet a dollar on any of the numbers 1 through 6.
       The cage is shaken, and the payoff is as follows.
       If the player's number doesn't appear on any of the dice, he loses his dollar.
       Otherwise, if his number appears on exactly <I>k</I> of the three dice,
       for <I>k</I> = 1, 2, 3, he keeps his dollar and wins <I>k</I> more dollars.
       What is his expected gain from playing the carnival game once?
      </td>
    <td>expected value</td>
<tr><td align=center>5</td>
    <td>CLRS Exercise A.2-1 on page 1156
      <BR>Show that
        &sum;<sub><sub><I>k</I>=1 to <I>n</I></sub></sub> ( 1/<I>k<sup>2</sup></I> )
        is bounded above by a constant.
      </td>
    <td>bounding summations</td>
<tr><td align=center>6</td>
    <td>GT Exercise C-1.4 on page 45
<!--
      <BR>What is the total running time of counting from 1 to <I>n</I> in binary
         if the time needed to add 1 to the current number <I>i</I> is proportional to
         the number of bits in the binary expansion of <I>i</I>
         that must change in going from <I>i</I> to <I>i</I>+1?
-->
      </td>
    <td>bounding summations</td>
<tr><td align=center>7</td>
    <td>GT Exercise C-3.12 on page 112 (Note that, in GT, <tt>log</tt> means <tt>log<sub>2</sub></tt>)
<!--
      <BR>Without using calculus, show that,
         if <I>n</I> is a power of 2 greater than 1, then, for <I>H<sub>n</sub></I>,
         the <I>n</I>th harmonic number,
         <I>H<sub>n</sub></I> &le; 1 + <I>H</I><sub><I>n</I>/2</sub>.
      <BR>Use this fact to conclude that
         <I>H<sub>n</sub></I> &le; 1 + &lceil;lg <I>n</I>&rceil;, for any <I>n</I> &ge; 1.
-->
      </td>
    <td>bounding summations</td>
</table>

<P>

<table border=1 cellspacing=0>
<tr><th width="5%">#</th>
    <th width="70%"><font color="#009900">suggested problems</font></th>
    <th width="25%">topic</th>
<tr><td align=center>8</td>
    <td>GT Exercise C-1.8 on page 45</td>
    <td>O-notation</td>
<tr><td align=center>9</td>
    <td> Resolve the following questions, with proof:
        <OL type=a>
        <LI> <I>n</I> log <I>n</I> = <I>O</I>(<I>n</I><sup>2</sup>)?
        <LI> <I>n</I>/log <I>n</I> = <I>O</I>(<I>n</I>)?
        <LI> (log <I>n</I>)<sup>363</sup> = <I>O</I>(<I>n</I>)?
        <LI> 2<sup><I>n</I></sup> = <I>O</I>(2<sup><I>n</I>/2</sup>)?
        <LI> 3<sup><I>n</I></sup> = <I>O</I>(2<sup><I>n</I></sup>)?
        </OL>
    </td>
    <td>O-notation</td>
<tr><td align=center>10</td>
    <td>The following is known about functions &nbsp;<I>f</I> and <I>g</I>:
       <table>
       <tr><td><I>f</I> (<I>n</I>) =
               &theta;(<I>n</I>) ;</td>
           <td><I>f</I> (1) = 1 ;</td><td>&nbsp;<I>f</I> (2) = 2</td>
       <tr><td><I>g</I>(<I>n</I>) =
               &theta;(<I>n</I><sup>3</sup>) ;</td>
           <td><I>g</I>(1) = 1 ;</td><td><I>g</I>(2) = 8</td>
       </table>
       Is &nbsp;<I>f</I> (3) &lt; <I>g</I>(3)? &nbsp; &nbsp;
       Explain why or why not.
    </td>
    <td>O-notation</td>
<tr><td align=center>11</td>
    <td>Prove <I>by induction</I> that, for all
        <I>n</I>&nbsp;&geq;&nbsp;6,
        the unit square<BR>
        can be partitioned into
        <I>n</I> squares (not necessarily of identical size).
    </td>
    <td>induction proof</td>
<tr><td align=center>12</td>
    <td>GT Exercise C-1.15 on page 46</td>
    <td>induction proof</td>
<tr><td align=center>13</td>
    <td>GT Exercise C-1.16 on page 46</td>
    <td>induction proof</td>
<tr><td align=center>14</td>
    <td>You are given values <I>x, y</I><sub>1</sub>, ..., <I>y<sub>n</sub></I>
        that are distinct integers
        randomly chosen with equal probability from 1 to 2<I>n</I>.
<P>
        The following is an efficient comparison-based algorithm that determines
        whether <I>x</I> has value greater than all of the <I>y<sub>j</sub></I>.
<P>
        Compare <I>x</I> one at a time to each of <I>y<sub>j</sub></I> until either
        <BR>(1) a comparison indicates that one of the  <I>y<sub>j</sub> &gt; x</I>,
                in which case return the answer NO, or
        <BR>(2) comparisons with every one of the <I>y<sub>j</sub></I>
                indicate that <I>x &gt; y<sub>j</sub></I>,
                in which case return the answer YES.
<P>
        Determine the average-case number of comparisons performed by this algorithm.
      </td>
    <td>algorithm analysis</td>
<tr><td align=center>15</td>
    <td>Baase Exercise 1.23(a,c) on page 63<BR>
      <OL type=a>
      <LI>Write an algorithm to find the median of three distinct integers
          <I>a</I>, <I>b</I>, and <I>c</I>.
      <LI value=3>How many comparisons does your algorithm do in the worst case?
          On the average?
      </OL>
      </td>
    <td>decision tree</td>
</table>

<HR>

<small>Last modified: Jan  7, 2018</small>
</span>
</BODY></HTML>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ