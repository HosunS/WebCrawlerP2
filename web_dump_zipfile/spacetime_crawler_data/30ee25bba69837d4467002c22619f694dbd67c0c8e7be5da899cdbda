¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1309¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 06 Apr 2017 21:08:50 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"51d-54c85ea694089"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXSat, 02 Feb 2019 20:13:59 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, February 5, 2010</title>
</head>
<body>
<a href="/~theory/"><img src="/~theory/logo/shortTheory.gif" width="
521" height="82" border="0" alt="ICS Theory Group"></a>
<h2> February 5, Winter Quarter 2010: Theory Seminar </h2>
<h3>1:00pm in 1423 Bren Hall</h3>
<h1> 
Deletion Without Rebalancing in Balanced Trees
</h1>
<h2> Darren Strash, UC Irvine </h2>

<p>
Presenting results in two papers by Siddhartha Sen and Robert E.
Tarjan from ISAAC09 and SODA10.

<p>
Abstract: 
We discuss the often-neglected topic of rebalancing after deletion in
balanced trees. Textbooks frequently omit it, many database systems
don't implement it, so we desire data structures that don't require
it. We therefore discuss variants of multiway search trees and
balanced binary trees that do not perform deletion rebalancing, yet
their search time remains logarithmic in the number of insertions. We
also discuss a strong claim made by the authors that "[w]ith the
addition of periodic rebuilding, the performance of these structures
is theoretically superior to that of many if not all classic balanced
tree structures."  We lay out the facts and let you decide if this is
a veritable "timber!" for our beloved search trees. 
</body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ