¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE28037¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueX°trac_form_token=bc94fd6f61714ed337990ebb; httponly; Path=/wiki/public, trac_session=d5648806b6387ce11a122c25; expires=Thu, 09 May 2019 12:19:41 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueGExpiresAv¢DtypeEvalueXFri, 01 Jan 1999 00:00:00 GMT¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueMCache-ControlAv¢DtypeEvalueOmust-revalidate¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 12:19:41 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueWtext/html;charset=utf-8Kraw_content¢DtypeEvalueYm…<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

    <html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      cs122b-2017-winter-project2 (diff) â€“ Public
    </title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/wiki/public/search" />
        <link rel="help" href="/wiki/public/wiki/TracGuide" />
        <link rel="up" href="/wiki/public/wiki/cs122b-2017-winter-project2?action=history" title="Page history" />
        <link rel="next" href="/wiki/public/wiki/cs122b-2017-winter-project2?action=diff&amp;version=5" title="Version 5" />
        <link rel="start" href="/wiki/public/wiki" />
        <link rel="stylesheet" href="/wiki/public/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/diff.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/tracwysiwyg/editor.css" />
        <link rel="tracwysiwyg.base" href="/wiki/public" />
        <link rel="prev" href="/wiki/public/wiki/cs122b-2017-winter-project2?action=diff&amp;version=3" title="Version 3" />
        <link rel="shortcut icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
    <style id="trac-noscript" type="text/css">.trac-noscript { display: none !important }</style>
    <script type="text/javascript">
      var _tracwysiwyg={};
    </script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/jquery.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/babel.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/trac.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/search.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/diff.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/tracwysiwyg/wysiwyg.js"></script>
    <script type="text/javascript">
      jQuery("#trac-noscript").remove();
      jQuery(document).ready(function($) {
        $(".trac-autofocus").focus();
        $(".trac-target-new").attr("target", "_blank");
        setTimeout(function() { $(".trac-scroll").scrollToTop() }, 1);
        $(".trac-disable-on-submit").disableOnSubmit();
      });
    </script>
    <link rel="stylesheet" type="text/css" href="/wiki/public/chrome/common/css/diff.css" />
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW" />
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.ics.uci.edu/"><img src="/wiki/public/chrome/site/ics.jpg" alt="ICS Logo" height="67" width="128" /></a>
      </div>
      <form id="search" action="/wiki/public/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/wiki/public/login">Login</a></li><li><a href="/wiki/public/prefs">Preferences</a></li><li class="last"><a href="/wiki/public/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
        <ul>
          <li class="first"><span>&larr; <a class="prev" href="/wiki/public/wiki/cs122b-2017-winter-project2?action=diff&amp;version=3" title="Version 3">Previous Change</a></span></li><li><a href="/wiki/public/wiki/cs122b-2017-winter-project2?action=history" title="Page history">Wiki History</a></li><li class="last"><span><a class="next" href="/wiki/public/wiki/cs122b-2017-winter-project2?action=diff&amp;version=5" title="Version 5">Next Change</a> &rarr;</span></li>
        </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
      <h1>
        Changes between
          <a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=3">Version 3</a> and
          <a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=4">Version 4</a> of
          <a href="/wiki/public/wiki/cs122b-2017-winter-project2">cs122b-2017-winter-project2</a>
      </h1>
      <form method="post" id="prefs" action="/wiki/public/wiki/cs122b-2017-winter-project2?version=4"><div><input type="hidden" name="__FORM_TOKEN" value="bc94fd6f61714ed337990ebb" /></div>
        <div>
          <input type="hidden" name="action" value="diff" />
          <input type="hidden" name="version" value="4" />
          <input type="hidden" name="old_version" value="3" />
          
  <label for="style">View differences</label>
  <select id="style" name="style">
    <option selected="selected" value="inline">inline</option>
    <option value="sidebyside">side by side</option>
  </select>
  <div class="field">
    <label><input type="radio" name="contextall" value="0" checked="checked" />
             Show</label>
      <label><input type="text" name="contextlines" id="contextlines" size="2" maxlength="3" value="2" />
             lines around each change</label><br />
    <label><input type="radio" name="contextall" value="1" />
           Show the changes in full context</label>
  </div>
  <fieldset id="ignore">
    <legend>Ignore:</legend>
    <div class="field">
      <input type="checkbox" id="ignoreblanklines" name="ignoreblanklines" />
      <label for="ignoreblanklines">Blank lines</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorecase" name="ignorecase" />
      <label for="ignorecase">Case changes</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorewhitespace" name="ignorewhitespace" />
      <label for="ignorewhitespace">White space changes</label>
    </div>
  </fieldset>
  <div class="buttons">
    <input type="submit" name="update" value="Update" />
  </div>

        </div>
      </form>
      <dl id="overview">
        <dt class="property time">Timestamp:</dt>
        <dd class="time">
            Jan 18, 2017 5:18:31 PM (<a class="timeline" href="/wiki/public/timeline?from=2017-01-18T17%3A18%3A31-08%3A00&amp;precision=second" title="See timeline at Jan 18, 2017 5:18:31 PM">2 years</a> ago)
        </dd>
        <dt class="property author">Author:</dt>
        <dd class="author">
          nailah
        </dd>
        <dt class="property message">Comment:</dt>
        <dd class="message">
          
          <p>
--
</p>

        </dd>
      </dl>
      <div class="diff">
        <div class="legend" id="diff-legend">
          <h3>Legend:</h3>
          <dl>
            <dt class="unmod"></dt><dd>Unmodified</dd>
            <dt class="add"></dt><dd>Added</dd>
            <dt class="rem"></dt><dd>Removed</dd>
            <dt class="mod"></dt><dd>Modified</dd>
          </dl>
        </div>
        <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2 id="file0">
          <a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=4">cs122b-2017-winter-project2</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Version 3">
                    <a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=3#L16">
                      v3</a>
                  </th>
                  <th title="Version 4">
                    <a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=4#L16">
                      v4</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>16</th><th>16</th><td class="l"><span>&nbsp;* [#FormExample Form example], [http://users.polytech.unice.fr/~buffa/cours/internet/POLYS/servlets/Servlet-Tutorial-Form-Data.html Information on managing HTML form data]</span></td>
                  </tr><tr>
                          <th>17</th><th>17</th><td class="l"><span>&nbsp;* [#ServletSession Servlet session examples]</span></td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th>Â </th><th>18</th><td class="r"><ins>&nbsp;* [#Pooling Connection Pooling]</ins></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>18</th><th>19</th><td class="l"><span>&nbsp;* [#WAR Creating WAR Archives]</span></td>
                  </tr><tr>
                          <th>19</th><th>20</th><td class="l"><span>&nbsp;* [#JSP JSP example] (Optional)</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=3#L73">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=4#L74">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>73</th><th>74</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>74</th><th>75</th><td class="l"><span>&nbsp;* ''' '''''Checkout''''':'''&nbsp; The transaction succeeds only if the user can provide the first name, a last name,a credit card with an expiration date, which match a record '''in the creditcards table (not those&nbsp; in the customers table)'''.&nbsp; If succeeded, the transaction should be recorded in the system (in the "sales" table) and a confirmation page should be displayed.&nbsp; &nbsp;[[BR]]</span></td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th>Â </th><th>76</th><td class="r"><ins></ins></td>
                  </tr><tr class="last">
                          <th>Â </th><th>77</th><td class="r"><ins>&nbsp;* '''Performance requirements''': you are required to do connection pooling. You can decide whether you want to do caching on the Web server for earlier query results. (ADDED FOR FUTURE CS122B OFFERINGS: You are also required to use prepared statements.)</ins></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>75</th><th>78</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>76</th><th>79</th><td class="l"><span>We are not specifying all the details of the interfaces. You are&nbsp; encouraged to use your imagination to enhance the functionalities.&nbsp; We highly recommend you implement the above using '''JSP and/or Java servlets''' at the server side. You can use any type of client-side technologies&nbsp; to enhance the functionality of your website (e.g., Javascript, style sheets, etc). Regardless of the client-side technology, you will most likely make extensive use of HTML.</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=3#L142">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=4#L145">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>142</th><th>145</th><td class="l"><span>After you make the application work on your development machine, deploy it on the AWS instance you have launched in project 1.</span></td>
                  </tr><tr>
                          <th>143</th><th>146</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>144</th><th>Â </th><td class="l"><span>----</span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>147</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>148</th><td class="r"><span>----</span></td>
                      </tr><tr>
                        <th>Â </th><th>149</th><td class="r"><span>[[Span(id=Pooling)]]</span></td>
                      </tr><tr>
                        <th>Â </th><th>150</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>151</th><td class="r"><span>== JDBC Connection Pooling ==</span></td>
                      </tr><tr>
                        <th>Â </th><th>152</th><td class="r"><span>These instructions apply to configuring Apache Tomcat webserver to enable connection pooling and will closely follow the example on Tomcat's JNDI datasource example at the link provided in step 1. We will use our running application of "!TomcatTest" to show how to change it to use connection pooling. Note: We do not know whether the instructions will work for JSP or not.</span></td>
                      </tr><tr>
                        <th>Â </th><th>153</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>154</th><td class="r"><span>&nbsp;1. Download and deploy the following [attachment:wiki:cs122b-2016-winter-project2:TomcatPooling.war TomcatPooling.war] file. The file '''!TomcatPooling\META-INF\context.xml''' includes important information about the database, user name, password, and pooling configuration. If you want to change this file, you need to undeploy the war file, make those changes, make a new war file, and deploy the new war file. Otherwise, the Tomcat server may still use the previous context.xml. Check [http://tomcat.apache.org/tomcat-5.5-doc/jndi-datasource-examples-howto.html] (under "Context configuration") for more information about how to configure connection pooling.</span></td>
                      </tr><tr>
                        <th>Â </th><th>155</th><td class="r"><span>&nbsp;1. Go to the link http://localhost:8080/TomcatPooling/servlet/TomcatTest to test your application.&nbsp; You must see a list of rows displayed on the webpage.</span></td>
                      </tr><tr>
                        <th>Â </th><th>156</th><td class="r"><span>&nbsp;1. Look into the following files for the main changes in this war file&nbsp; &nbsp;compared to the previous war file without connection pooling:</span></td>
                      </tr><tr>
                        <th>Â </th><th>157</th><td class="r"><span>&nbsp; &nbsp;* '''\META-INF\context.xml'''.</span></td>
                      </tr><tr>
                        <th>Â </th><th>158</th><td class="r"><span>&nbsp; &nbsp;* '''\WEB-INF\sources\!TomcatTest.java'''</span></td>
                      </tr><tr>
                        <th>Â </th><th>159</th><td class="r"><span>&nbsp; &nbsp;* '''\WEB-INF\web.xml''' (see the '''resource-ref''' tag).</span></td>
                      </tr><tr>
                        <th>Â </th><th>160</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>161</th><td class="r"><span>Also, please add the MySQL driver to the common\lib directory of your tomcat installation. Connection Pooling will not work if the driver is not available here. And '''restart your server''' once this addition is made.</span></td>
                      </tr><tr>
                        <th>Â </th><th>162</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>163</th><td class="r"><span>'''Note''': for setting up JDBC Connection Pooling on the AWS Ubuntu platform, add the&nbsp; MySQL driver to''' /usr/share/tomcat7/lib/ '''and restart your server.</span></td>
                      </tr><tr>
                        <th>Â </th><th>164</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>165</th><td class="r"><span>__'''When you are done,'''__ write an explanation of how/where you use the JDBC connection pooling in your code. This should be accessible via a link in the format of http://YOUR_PUBLIC_IP:8080/fabflix/reports/connection_pooling .</span></td>
                      </tr><tr>
                        <th>Â </th><th>166</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>167</th><td class="r"><span>----</span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>168</th><td class="r"><span></span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>145</th><th>169</th><td class="l"><span>[[Span(id=WAR)]]</span></td>
                  </tr><tr>
                          <th>146</th><th>170</th><td class="l"><span></span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=3#L185">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2017-winter-project2?version=4#L209">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>185</th><th>209</th><td class="l"><span>----</span></td>
                  </tr><tr>
                          <th>186</th><th>210</th><td class="l"><span>== Preparing the package for submission ==</span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>187</th><th>Â </th><td class="l"><span>&nbsp;1. Login to [http://128.195.52.91:8080/cs122b â€‹The Project Grading Website]&nbsp; using your UCInetID and the 10-character password given to you in EEE.&nbsp; Enter your group ID and check the page of project 2. Pay attention to&nbsp; all the notes as they are highly important in grading. Even though the group page on that website is the same for all the members of a team, '''each member''' is required to login at least once and '''enter his/her group id'''.</span></td>
                      </tr><tr>
                        <th>188</th><th>Â </th><td class="l"><span>&nbsp;1. Open SSH/port 22 and HTTP/port 8080 to this IP domain: 128.195.0.0/16 (i.e., this will allow all nodes whose IP start with 128.195 to send requests to your instance using __SSH/port 22__ or __HTTP/port 8080__)</span></td>
                      </tr><tr>
                        <th>189</th><th>Â </th><td class="l"><span>&nbsp;1. Add all related files to your application's root directory (i.e., normally, it should be `/var/lib/tomcat7/webapps/fabflix/`)</span></td>
                      </tr><tr>
                        <th>190</th><th>Â </th><td class="l"><span>&nbsp;1. Make sure that there is no more changes to make '''anywhere''' under your application root directory. After this step, you should not make any more changes (in the time of grading, we will compare the content of your war file with what you have on your AWS instance: they should be identical).</span></td>
                      </tr><tr>
                        <th>191</th><th>Â </th><td class="l"><span>&nbsp;1. See next section to create and upload a .war file of your application's root directory (i.e., mine is `/var/lib/tomcat7/webapps/fabflix/`).[[BR]]'''Note 1:''' Use another clone of your codebase for working on the next project. __Do not change the content of the fabflix Tomcat application__, until we announce this directory open again.[[BR]]'''Note 2: '''While what you should upload to EEE should be called project2_[groupID].war, the project deployed on your AWS instance should be called fabflix, so the links be as we expect. Make sure you use relative paths in your codebase, so changing the name of your project doesn't break your links.</span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>211</th><td class="r"><span>&nbsp;1. Open SSH/port 22 and HTTP/port 8080 to this IP: 128.195.52.91/32</span></td>
                      </tr><tr>
                        <th>Â </th><th>212</th><td class="r"><span>&nbsp;1. Add all related files to your application's root directory (i.e., mine is `/var/lib/tomcat7/webapps/fabflix/`)</span></td>
                      </tr><tr>
                        <th>Â </th><th>213</th><td class="r"><span>&nbsp;1. '''First''', Add a servlet to your application that is accessble via a link like http://YOUR_PUBLIC_IP:8080/fabflix/reports/signature and has the following implementation for its `doGet` method:[[BR]][[BR]]</span></td>
                      </tr><tr>
                        <th>Â </th><th>214</th><td class="r"><span>{{{</span></td>
                      </tr><tr>
                        <th>Â </th><th>215</th><td class="r"><span>// Use http GET&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></td>
                      </tr><tr>
                        <th>Â </th><th>216</th><td class="r"><span>public void doGet(HttpServletRequest&nbsp; &nbsp; request,&nbsp; HttpServletResponse&nbsp; &nbsp; response)</span></td>
                      </tr><tr>
                        <th>Â </th><th>217</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;throws&nbsp; IOException, ServletException&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span></td>
                      </tr><tr>
                        <th>Â </th><th>218</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Output stream to STDOUT</span></td>
                      </tr><tr>
                        <th>Â </th><th>219</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; PrintWriter&nbsp; &nbsp; out = response.getWriter();</span></td>
                      </tr><tr>
                        <th>Â </th><th>220</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out.println(SignatureReader.getSignature("/var/lib/tomcat7/webapps/fabflix/"));</span></td>
                      </tr><tr>
                        <th>Â </th><th>221</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out.close();</span></td>
                      </tr><tr>
                        <th>Â </th><th>222</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></td>
                      </tr><tr>
                        <th>Â </th><th>223</th><td class="r"><span>}}}</span></td>
                      </tr><tr>
                        <th>Â </th><th>224</th><td class="r"><span>&nbsp; &nbsp;'''[[BR]]Note: '''remember to change the path `/var/lib/tomcat7/webapps/fabflix/`''' '''in this code to the path to your own application root directory.'''[[BR]]Second,''' download [attachment:wiki:cs122b-2016-winter-project2:SignatureReader.class this file] and place it next to&nbsp; this servlet's source code, and then compile. Also place this class file next to your servlet's class file to make sure Tomcat loads it. Remember to change web.xml, and reload your&nbsp; application.__[[BR]]__</span></td>
                      </tr><tr>
                        <th>Â </th><th>225</th><td class="r"><span>&nbsp;1. __Make sure that there is no more changes to make '''anywhere''' under your application root directory. After this step, you should not make any more changes (If you need to change something, repeat the last command before creating the .war file).__</span></td>
                      </tr><tr>
                        <th>Â </th><th>226</th><td class="r"><span>&nbsp;1. Use the `console`, `cd` to the application root directory, and use the following command set:[[BR]][[BR]]</span></td>
                      </tr><tr>
                        <th>Â </th><th>227</th><td class="r"><span>{{{</span></td>
                      </tr><tr>
                        <th>Â </th><th>228</th><td class="r"><span>sudo mkdir signature</span></td>
                      </tr><tr>
                        <th>Â </th><th>229</th><td class="r"><span>sudo cp /path/to/SignatureReader.class ./signature/</span></td>
                      </tr><tr>
                        <th>Â </th><th>230</th><td class="r"><span>sudo chmod -R 755 signature</span></td>
                      </tr><tr>
                        <th>Â </th><th>231</th><td class="r"><span>cd signature</span></td>
                      </tr><tr>
                        <th>Â </th><th>232</th><td class="r"><span>sudo su -c 'java SignatureReader ../ &gt; latest_signature.txt'</span></td>
                      </tr><tr>
                        <th>Â </th><th>233</th><td class="r"><span>}}}</span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>234</th><td class="r"><span>&nbsp;1. See next section to create and upload a .war file of your application's root directory (i.e., mine is `/var/lib/tomcat7/webapps/fabflix/`).[[BR]]'''Note 1:''' Use another clone of your codebase for working on the next project. __Do not change the content of the fabflix Tomcat application__, until we announce it open again.[[BR]]'''Note 2: '''While what you should upload to EEE should be called project2_[groupID].war, the project deployed on your AWS instance should be called fabflix, so the links be as we expect. Make sure you use relative paths in your codebase, so changing the name of your project doesn't break your links.[[BR]]'''Note 3:''' When you create the war file, the jar command places the war file in&nbsp; your application root directory. Make sure to remove that war file from&nbsp; there after submitting it to EEE since that war file changes your&nbsp; project signature.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>192</th><th>235</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>193</th><th>236</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
      </div>
  </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/wiki/public/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/wiki/public/about"><strong>Trac 1.0.13</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ