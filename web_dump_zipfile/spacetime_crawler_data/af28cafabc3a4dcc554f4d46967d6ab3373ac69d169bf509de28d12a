¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD2179¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:54:08 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"883-4da84c2f1b000"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXSun, 10 Feb 2019 10:51:41 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueYƒ/*
  $Id$

  Copyright (C) 2007 by The Regents of the University of California

  Redistribution of this file is permitted under the terms of the
  BSD license

  Date: 10/05/2007
  Author: Jiaheng Lu
          Rares Vernica 
  
*/

#ifndef _simfuncs_h_
#define _simfuncs_h_

#include <string> 
#include <set>
#include <vector>

using namespace std;

unsigned ed(const string &s1, const string &s2);
bool ed(const string &s1, const string &s2, unsigned threshold);

unsigned edSwap(const string &s1, const string &s2);

bool  substringed(const string &longS, const string &shortS, unsigned threshold);

float normalizedED(const string &s1, const string &s2);

float cosine(const string &s1, const string &s2, unsigned gramLength = 3);

// default is with Prefix and Suffix characters
float jaccard(const string &s1, const string &s2, unsigned gramLength = 3);
float jaccard(const set<string> &s1Gram, const string &s2, unsigned gramLength = 3);
float jaccardBag(const string &s1, const string &s2, unsigned gramLength = 3);
float jaccardBag(const multiset<string> &s1Gram, const string &s2, 
                 unsigned gramLength = 3);
float jaccardNoPrePost(const string &s1, const string &s2, unsigned gramLength = 3);
float jaccardNoPrePost(const set<string> &s1Gram, const string &s2, 
                       unsigned gramLength = 3);

float jaccardHash(const string &s1, const string &s2, unsigned gramLength = 3);
float jaccardHash(const set<unsigned> &s1Gram, const string &s2, 
                  unsigned gramLength = 3);
float jaccardHashBag(const string &s1, const string &s2, unsigned gramLength = 3);
float jaccardHashBag(const multiset<unsigned> &s1Gram, const string &s2, 
                     unsigned gramLength = 3);
float jaccardNoPrePostHash(const string &s1, const string &s2, 
                           unsigned gramLength = 3);
float jaccardNoPrePostHash(const set<unsigned> &s1Gram, const string &s2,
                           unsigned gramLength = 3);

float dice(const string &s1, const string &s2, unsigned gramLength = 3);

void  decompose2GramsHashSet(const string &s, set<unsigned> &result,
                             unsigned gramLength);
#endif
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ