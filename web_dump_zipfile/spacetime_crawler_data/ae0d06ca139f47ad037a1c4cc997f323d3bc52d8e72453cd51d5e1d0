¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueC692¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 06 Apr 2017 21:04:25 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"511-54c85da9c1cb1-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 01 Feb 2019 20:13:56 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title></title>
</head>
<body>
These questions were used for the ICS 261 component of the ICS
phase II exam, May 2004. However, I think they may be too difficult
for this purpose. So, while they may be useful as practice
questions, please do not assume that future exam questions will be
equally difficult. 

<p>(a) Describe an efficient data structure for the following
problem: you are given as input a set S of n points in the x-y
plane, and must handle queries that specify query values a and b
and return any point (x,y) in S with y &lt;= ax+b, if such a point
exists. What is the space usage, preprocessing time, and query time
of your data structure?</p>

<p>(b) Suppose that there exists a data structure D for problem (a)
that solves the problem in space R(n), preprocessing time P(n), and
query time Q(n). Now we must solve a slightly more difficult
problem: for each query, we must find the point with the smallest x
coordinate among all points (x,y) in S with y &lt;= ax+b. Describe
how to use data structure D as part of a layered data structure
that solves this harder problem. Analyze the space usage,
preprocessing time, and query time of your overall data structure
in terms of P, Q, R, and n.</p>
</body>
</html>

Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ