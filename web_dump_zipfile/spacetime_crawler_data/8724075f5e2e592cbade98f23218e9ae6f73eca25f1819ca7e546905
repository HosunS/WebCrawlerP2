¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD4014¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 18 Jan 2019 21:54:42 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"2a29-57fc28ef00b17-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXTue, 05 Feb 2019 21:55:58 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY*)<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
Publications with
<a href="//www.ics.uci.edu/~wdevanny/">
William E. Devanny
</a>
</h2>
<ul>
<li><b>Superpatterns and universal point sets</b>.<br>
<a href="//michaeljbannister.com/">M. J. Bannister</a>,
Z. Cheng,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>, and
D. Eppstein.<br>
<a href="//arxiv.org/abs/1308.0403">arXiv:1308.0403</a>.<br>
<i>21st Int. Symp. Graph Drawing</i>, Bordeaux, France, 2013.<br>
<a href="//doi.org/10.1007/978-3-319-03841-4_19">Springer, <i>Lecture Notes in Comp. Sci.</i> 8242, 2013, pp. 208&ndash;219</a>.<br>
Bannister's talk on this paper won the GD2013 best presentation award.<br>
<a href="//doi.org/10.7155/jgaa.00318"><i>J. Graph Algorithms & Applications</i> 18 (2): 177&ndash;209, 2014<a> (special issue for GD'13).
<p>
A superpattern of a set of permutations is a permutation that contains
as a pattern every permutation in the set. Previously superpatterns had
been considered for all permutations of a given length; we generalize this
to sets of permutations defined by forbidden patterns; we show that
the 213-avoiding permutations have superpatterns half the length of the
known bound for all permutations, and that any proper permutation
subclass of the 213-avoiding permutations has near-linear superpatterns.
We apply these results to the construction of universal point sets, sets
of points that can be used as the vertices of drawings of all n-vertex
planar graphs. We use our 213-avoiding superpatterns to construct
universal sets of size approximately <i>n</i><sup>2</sup>/4,
and we also construct near-linear universal sets for graphs of bounded
pathwidth.
<p>
<li><b>Small superpatterns for dominance drawing</b>.<br>
<a href="//michaeljbannister.com/">M. J. Bannister</a>,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>, and
D. Eppstein.<br>
<a href="//arxiv.org/abs/1310.3770">arXiv:1310.3770</a>.<br>
<i>Analytic Algorithmics and Combinatorics (ANALCO14)</i>, Portland,
Oregon, 2014, pp. 92&ndash;103</a>.
<p>
We construct small universal point sets for dominance drawings of
classes of acyclic graphs, by finding forbidden patterns in the
permutations determined by these drawings and proving the existence
of small superpatterns for the permutations with these patterns forbidden.
In particular, dominance drawings of the Hasse diagrams of width-2
partial orders have universal point sets of size
O(<i>n</i><sup>3/2</sup>), derived from superpatterns of the same size
for the 321-avoiding permutations, and dominance drawings of st-planar
graphs have universal point sets of size
O(<i>n</i>&nbsp;log&nbsp;<i>n</i>), derived from superpatterns for
riffle shuffles.
<p>
<li><b>The Galois complexity of graph drawing: why numerical solutions are
ubiquitous for force-directed, spectral, and circle packing drawings</b>.<br>
<a href="//michaeljbannister.com/">M. J. Bannister</a>,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//arxiv.org/abs/1408.1422">arXiv:1408.1422</a>.<br>
<i>22nd Int. Symp. Graph Drawing</i>, W&uuml;rzburg, Germany, 2014<br>
<a href="//doi.org/10.1007/10.1007/978-3-662-45803-7_13">Springer, <i>Lecture
Notes in Comp. Sci.</i> 8871, 2014, pp. 149&ndash;161.</a><br>
<a href="//doi.org/10.7155/jgaa.00349"><i>J. Graph Algorithms &
Applications</i> 19 (2): 619&ndash;656, 2015</a>.
<p>
We show that many standard graph drawing methods have algebraic
solutions described by polynomials that can have unsolvable Galois groups,
and that can have Galois groups whose order is divisible by large prime
numbers. As a consequence certain models of exact algebraic computation
are unable to construct these drawings.
<p>
<li><b>ERGMs are hard</b>.<br>
<a href="//michaeljbannister.com/">M. J. Bannister</a>,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>, and
D. Eppstein.<br>
<a href="//arxiv.org/abs/1412.1787">arXiv:1412.1787</a>.<br>
<p>
ERGMs (exponential random graph models) are used in social science to
describe probability distributions on graphs that are supposed to mimic
real-world social networks. However, we show that (with features that
are standard in the social science application) the distributions given
by these models can be computationally infeasible to sample from or
to approximate the probability of seeing a given graph.
<p>
<li><b>Track layouts, layered path decompositions, and leveled
planarity</b>.<br>
<a href="//michaeljbannister.com/">M. J. Bannister</a>,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>, and
<a href="//engineering.uottawa.ca/eecs/people/dujmovic-vida">V. Dujmovi&#263;</a>,
D. Eppstein, and
<a href="//users.monash.edu.au/~davidwo/">D. R. Wood</a>.<br>
<a href="//arxiv.org/abs/1506.09145">arXiv:1506.09145</a>.<br>
<i>24th Int. Symp. Graph Drawing</i>, Athens, Greece, 2016.<br>
<a href="//doi.org/10.1007/978-3-319-50106-2_38">Springer, <i>Lecture Notes in Comp. Sci.</i> 9801 (2016), pp. 499&ndash;510</a>.<br>
<a href="//doi.org/10.1007/s00453-018-0487-5"><i>Algorithmica</i>, to
appear</a>.
<p>
We introduce the concept of a layered path decomposition, and show that
the layered pathwidth can be used to characterize the leveled planar
graphs. As a consequence we show that finding the minimum number of
tracks in a track layout of a given graph is NP-complete.
The GD version includes only the parts concerning track layout,
and uses the title "Track Layout is Hard".
<p>
<li><b>The computational hardness of <i>d</i>K-series</b>.<br>
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein, and
B. Tilman.<br>
<i>NetSci2016</i> poster session, Seoul, Korea.
<p>
The <i>d</i>K-series is an extension of the degree sequence of a graph to a 
<i>d</i>-dimensional tensor, describing the number of <i>d</i>-tuples of
vertices with
each possible combination of degrees and adjacencies. As we show, it is
NP-hard to determine whether such a tensor represents a valid graph, for
any <i>d</i>&nbsp;&ge;&nbsp;3, or for <i>d</i>&nbsp;=&nbsp;2 if the
number of triangles in the graph is also specified (or constrained to be
zero).
<p>
<li><b>Scheduling autonomous vehicle platoons through an unregulated
intersection</b>.<br>
J. Besa,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<i>Proc. 16th Worksh. Algorithmic Approaches for Transportation
Modelling, Optimization and Systems (ATMOS 2016)</i>, Aarhus, Denmark,
2016.<br>
<a href="//doi.org/10.4230/OASIcs.ATMOS.2016.5">OpenAccess Series in Informatics (OASIcs) 54, Schloss
Dagstuhl (2016), pp. 5:1&ndash;5.16</a>.<br>
<a href="//arxiv.org/abs/1609.04512">arXiv:1609.04512</a>.<br>
<p>
We consider a model of vehicle scheduling in which vehicles arrive at an
intersection in indivisible platoons (or individual vehicles of variable
length) and the goal is to find a schedule for them to all cross the
intersection without collisions, minimizing the maximimum delay incurred
by any platoon. We show that for many types of intersections, an optimal
schedule can be found in polynomial time by a combination of dynamic
programming and parametric search.
<p>
<li><b>Square-contact representations of partial 2-trees and
triconnected simply-nested graphs</b>.<br>
<a href="//www.dia.uniroma3.it/~dalozzo/">G. Da Lozzo</a>,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~tujohnso/">T. Johnson</a>.<br>
<a href="//arxiv.org/abs/1710.00426">arXiv:1710.00426</a>.<br>
<i>Proc. 28th Int. Symp. Algorithms and Computation (ISAAC 2017)</i>,
Phuket, Thailand, 2017.<br>
<a href="//doi.org/10.4230/LIPIcs.ISAAC.2017.24">Leibniz International
Proceedings in Informatics (LIPIcs) 92, pp. 24:1&ndash;24:16</a>.<br>
<p>
We show that the <i>K</i><sub>1,1,3</sub>-free partial 2-trees and the
Halin graphs other than <i>K</i><sub>4</sub> can all be
represented as proper contact graphs of squares in the plane. Among partial
2-trees and Halin graphs, these are exactly the ones that can be
embedded without nonempty triangles, which form an obstacle to the
existence of square contact representations. However the graph
of a square antiprism has no such representation despite being
embeddable without any nonempty triangles.
<p>
<li><b>Quadratic time algorithms appear to be optimal for sorting
evolving data</b>.<br>
J. Besa,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.ics.uci.edu/~tujohnso/">T. Johnson</a>.<br>
<a href="//doi.org/10.1137/1.9781611975055.8"><i>Proc. Algorithm
Engineering &amp; Experiments (ALENEX 2018)</i>, New Orleans, 2018,
pp. 87&ndash;96</a>.<br>
<a href="https://arxiv.org/abs/1805.05443">arXiv:1805.05443</a>.
<p>
We experiment with sorting algorithms in the evolving data model,
in which, at the same time as the algorithm compares pairs of elements
and possibly chooses a new ordering based on the results of the comparison,
an adversary randomly chooses two adjacent elements in the sorted order
and swaps them. As we show, bubble sort and its variants appear to
maintain an order that is within inversion distance of optimal.
<p>
<li><b>Optimally sorting evolving data</b>.<br>
J. Besa,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
T. Johnson.<br>
<a href="//arxiv.org/abs/1805.03350">arXiv:1805.03350</a><br>
<i>Proc. 45th International Colloquium on Automata, Languages, and
Programming (ICALP 2018)</i>, Prague.<br>
<a href="//doi.org/10.4230/LIPIcs.ICALP.2018.81">Leibniz International Proceedings in Informatics (LIPIcs) 107, pp. 81:1&ndash;81:13</a>.<br>
<p>
Suppose that a collection of objects has a linear order that is evolving
by swaps of randomly chosen consecutive elements. We would like to
maintain an approximation to this order using an algorithm that performs
one comparison per swap. We show that repeated insertion sort can
maintain linear inversion distance from the underlying order, the best
possible.
<p>
</ul>

<hr><p>
<a href="auth.html">Co-authors</a> &ndash;
<a href="/~eppstein/pubs/">Publications</a> &ndash;
<a href="/~eppstein/">David Eppstein</a> &ndash;
<a href="/~theory/">Theory Group</a> &ndash;
<a href="/">Inf. &amp; Comp. Sci.</a> &ndash;
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ