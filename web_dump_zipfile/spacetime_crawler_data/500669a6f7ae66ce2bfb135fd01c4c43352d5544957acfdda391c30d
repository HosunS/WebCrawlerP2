¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalueˆ¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD2770¢Ak¢DtypeEvalueSContent-DispositionAv¢DtypeEvalueXDattachment; filename=cs122b-2018-spring-project1-eclipse-project.txt¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueXitrac_session=b0904b505e8216feb66bc6de; expires=Thu, 09 May 2019 12:50:16 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 12:50:16 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain;charset=utf-8Kraw_content¢DtypeEvalueY
Ò= Create a New Web Project in Eclipse =

This page will walk through the steps to create a Dynamic Web Project in Eclipse for project 1.


1. Make sure Eclipse, Java, and Maven are setup properly. We recommend using Eclipse EE version.

2. Right click the Project Explorer -> New -> Project 
[[Image(new_project.png)]]

3. Select "Dynamic Web Project"
[[Image(select_dynamic.png)]]

4. Important: Uncheck "Use default option". Go to your project git repository, create a folder called "project1". Choose the location to be the project1 folder under your project git repository.

5. Under "Project runtime", If it's your first time creating the project, it shows "None". Click "New Runtime", then select "Apache Tomcat 8.5", then follow the prompt to setup the Tomcat Server properly. If it's not your first time, "Apache Tomcat 8.5" should be selected.

6. You configuration page should look like this.
[[Image(config_page.png)]]

7. An empty project should be created, it should look like this:
[[Image(empty_project.png)]]

8. Convert the project to a maven project by right click the project -> "Configure" -> "Convert to Maven Project";
[[Image(convert_maven.png)]]

9. "pom.xml" is the configuration file used by maven to build your project. Right click the file "pom.xml" and open it with a text editor. Make the following changes:

Before "<build>", add the following code block:

{{{
  <dependencies>
    <dependency>
    	  <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.46</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
}}}

Inside "<build></build>", add the following line: 
{{{
<finalName>your-project-name</finalName>
}}}

Your pom.xml should look like this:

[[Image(pom_file.png)]]

10. You should see "Deployment Descriptor: your-project-name" under the project folder. Right click "Deployment Descriptor: your-project-name", click "Generate Deployment Descriptor Stub":
[[Image(deployment_stub.png)]]

11. You can create the index.html (the HTML page showed by default) by right-clicking Web Content folder -> New -> HTML. Change the name of the HTML to be index.html. You can create other html pages using this way.
[[Image(create_html.png)]]

12. You can create Java Servlet by right-clicking project1 -> New -> Servlet. Type the class name. The Java package could be empty. 
[[Image(create_servlet.png)]]
[[Image(name_servlet.png)]]

14. Your project structure should now look like this:
[[Image(final_structure.png)]]

15. You are now good to go. 
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ