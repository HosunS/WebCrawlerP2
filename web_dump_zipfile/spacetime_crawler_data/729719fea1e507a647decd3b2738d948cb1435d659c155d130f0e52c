¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1029¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueXjApache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:54:19 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"405-4da84c39988c0"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 14:36:56 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueY/*
    $Id: indexentry.h 1107 2007-04-16 23:59:13Z rvernica $

    Copyright (C) 2007 by The Regents of the University of California

    Redistribution of this file is permitted under the terms of the
    GNU Public License (GPL).

    Date: 05/04/2006
    Author: Rares Vernica <rvernica@ics.uci.edu>
*/

#ifndef _indexentry_h_
#define _indexentry_h_

#include <set>

#include "simfunc/simdist.h"
#include "simfunc/simvect.h"

using namespace std;

class IndexEntry
{
public:
  unsigned index;
  SimType dist;
 
  IndexEntry(unsigned i, SimType d): index(i), dist(d) {}

  friend ostream& operator<<(ostream &out, const IndexEntry &e);
  friend bool operator<(const IndexEntry &left, const IndexEntry &right);
};

typedef set<IndexEntry> ContIndexEntry;

class IndexEntryVect
{
public:
  unsigned index;
  SimVect vect;
 
  IndexEntryVect(unsigned i, SimVect v): index(i), vect(v) {}

  friend bool operator<(const IndexEntryVect &left, const IndexEntryVect &right);
};

typedef set<IndexEntryVect> ContIndexEntryVect;

#endif
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ