¦Ifinal_url¢DtypeEvaluex/https://www.ics.uci.edu/~theory/269/100409.htmlLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1279¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 06 Apr 2017 21:08:50 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"4ff-54c85ea69fc08"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 01:30:31 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYÿ<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, April 9, 2010</title>
</head>
<body>
<a href="/~theory/"><img src="/~theory/logo/shortTheory.gif" width="
521" height="82" border="0" alt="ICS Theory Group"></a>
<h2> April 9, Spring Quarter 2010: Theory Seminar </h2>
<h3>1:00pm in ICS 243</h3>
<h1> 
   A Model of Computation for MapReduce
</h1>
<h2> Lowell Trott, University of California, Irvine</h2>

<p>
Presenting a SODA paper by
	      Howard Karloff, Siddharth Suri, and Sergei
	      Vassilvitskii

<p>
Abstract: 
We compare MapReduce to the PRAM model of
computation. We prove a simulation lemma showing
that a large class of PRAM algorithms can be eciently
simulated via MapReduce. The strength of MapReduce,
however, lies in the fact that it uses both sequential and
parallel computation. We demonstrate how algorithms
can take advantage of this fact to compute an MST of a
dense graph in only two rounds, as opposed to Omega(log(n))
rounds needed in the standard PRAM model. We show
how to evaluate a wide class of functions using the
MapReduce framework. We conclude by applying this
result to show how to compute some basic algorithmic
problems such as undirected s-t connectivity in the
MapReduce framework.
</body>
</html>
Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ