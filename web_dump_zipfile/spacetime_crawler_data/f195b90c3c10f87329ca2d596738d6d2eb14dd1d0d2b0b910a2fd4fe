¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE18507¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueX°trac_form_token=a651731216220d25ef3c7a5f; httponly; Path=/wiki/public, trac_session=1e610717ee1e4452c3b22f7e; expires=Sun, 05 May 2019 23:02:24 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueGExpiresAv¢DtypeEvalueXFri, 01 Jan 1999 00:00:00 GMT¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueMCache-ControlAv¢DtypeEvalueOmust-revalidate¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXMon, 04 Feb 2019 23:02:23 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueWtext/html;charset=utf-8Kraw_content¢DtypeEvalueYHK<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

    <html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      cs122b-2018-winter-project4 (diff) â€“ Public
    </title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/wiki/public/search" />
        <link rel="help" href="/wiki/public/wiki/TracGuide" />
        <link rel="up" href="/wiki/public/wiki/cs122b-2018-winter-project4?action=history" title="Page history" />
        <link rel="next" href="/wiki/public/wiki/cs122b-2018-winter-project4?action=diff&amp;version=24" title="Version 24" />
        <link rel="start" href="/wiki/public/wiki" />
        <link rel="stylesheet" href="/wiki/public/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/diff.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/tracwysiwyg/editor.css" />
        <link rel="tracwysiwyg.base" href="/wiki/public" />
        <link rel="prev" href="/wiki/public/wiki/cs122b-2018-winter-project4?action=diff&amp;version=22" title="Version 22" />
        <link rel="shortcut icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
    <style id="trac-noscript" type="text/css">.trac-noscript { display: none !important }</style>
    <script type="text/javascript">
      var _tracwysiwyg={};
    </script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/jquery.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/babel.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/trac.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/search.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/diff.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/tracwysiwyg/wysiwyg.js"></script>
    <script type="text/javascript">
      jQuery("#trac-noscript").remove();
      jQuery(document).ready(function($) {
        $(".trac-autofocus").focus();
        $(".trac-target-new").attr("target", "_blank");
        setTimeout(function() { $(".trac-scroll").scrollToTop() }, 1);
        $(".trac-disable-on-submit").disableOnSubmit();
      });
    </script>
    <link rel="stylesheet" type="text/css" href="/wiki/public/chrome/common/css/diff.css" />
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW" />
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.ics.uci.edu/"><img src="/wiki/public/chrome/site/ics.jpg" alt="ICS Logo" height="67" width="128" /></a>
      </div>
      <form id="search" action="/wiki/public/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/wiki/public/login">Login</a></li><li><a href="/wiki/public/prefs">Preferences</a></li><li class="last"><a href="/wiki/public/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
        <ul>
          <li class="first"><span>&larr; <a class="prev" href="/wiki/public/wiki/cs122b-2018-winter-project4?action=diff&amp;version=22" title="Version 22">Previous Change</a></span></li><li><a href="/wiki/public/wiki/cs122b-2018-winter-project4?action=history" title="Page history">Wiki History</a></li><li class="last"><span><a class="next" href="/wiki/public/wiki/cs122b-2018-winter-project4?action=diff&amp;version=24" title="Version 24">Next Change</a> &rarr;</span></li>
        </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
      <h1>
        Changes between
          <a href="/wiki/public/wiki/cs122b-2018-winter-project4?version=22">Version 22</a> and
          <a href="/wiki/public/wiki/cs122b-2018-winter-project4?version=23">Version 23</a> of
          <a href="/wiki/public/wiki/cs122b-2018-winter-project4">cs122b-2018-winter-project4</a>
      </h1>
      <form method="post" id="prefs" action="/wiki/public/wiki/cs122b-2018-winter-project4?version=23"><div><input type="hidden" name="__FORM_TOKEN" value="a651731216220d25ef3c7a5f" /></div>
        <div>
          <input type="hidden" name="action" value="diff" />
          <input type="hidden" name="version" value="23" />
          <input type="hidden" name="old_version" value="22" />
          
  <label for="style">View differences</label>
  <select id="style" name="style">
    <option selected="selected" value="inline">inline</option>
    <option value="sidebyside">side by side</option>
  </select>
  <div class="field">
    <label><input type="radio" name="contextall" value="0" checked="checked" />
             Show</label>
      <label><input type="text" name="contextlines" id="contextlines" size="2" maxlength="3" value="2" />
             lines around each change</label><br />
    <label><input type="radio" name="contextall" value="1" />
           Show the changes in full context</label>
  </div>
  <fieldset id="ignore">
    <legend>Ignore:</legend>
    <div class="field">
      <input type="checkbox" id="ignoreblanklines" name="ignoreblanklines" />
      <label for="ignoreblanklines">Blank lines</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorecase" name="ignorecase" />
      <label for="ignorecase">Case changes</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorewhitespace" name="ignorewhitespace" />
      <label for="ignorewhitespace">White space changes</label>
    </div>
  </fieldset>
  <div class="buttons">
    <input type="submit" name="update" value="Update" />
  </div>

        </div>
      </form>
      <dl id="overview">
        <dt class="property time">Timestamp:</dt>
        <dd class="time">
            Feb 26, 2018 10:30:42 PM (<a class="timeline" href="/wiki/public/timeline?from=2018-02-26T22%3A30%3A42-08%3A00&amp;precision=second" title="See timeline at Feb 26, 2018 10:30:42 PM">11 months</a> ago)
        </dd>
        <dt class="property author">Author:</dt>
        <dd class="author">
          zuozhi
        </dd>
        <dt class="property message">Comment:</dt>
        <dd class="message">
          
          <p>
--
</p>

        </dd>
      </dl>
      <div class="diff">
        <div class="legend" id="diff-legend">
          <h3>Legend:</h3>
          <dl>
            <dt class="unmod"></dt><dd>Unmodified</dd>
            <dt class="add"></dt><dd>Added</dd>
            <dt class="rem"></dt><dd>Removed</dd>
            <dt class="mod"></dt><dd>Modified</dd>
          </dl>
        </div>
        <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2 id="file0">
          <a href="/wiki/public/wiki/cs122b-2018-winter-project4?version=23">cs122b-2018-winter-project4</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Version 22">
                    <a href="/wiki/public/wiki/cs122b-2018-winter-project4?version=22#L22">
                      v22</a>
                  </th>
                  <th title="Version 23">
                    <a href="/wiki/public/wiki/cs122b-2018-winter-project4?version=23#L22">
                      v23</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>22</th><th>22</th><td class="l"><span>* Have a search box on the main page of the Fabflix website (the page after login).</span></td>
                  </tr><tr>
                          <th>23</th><th>23</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>24</th><th>Â </th><td class="l"><span>* <del>This search box should search on movie title and star name attributes.&nbsp; For example, the query "logan" should return a list of entities including 1) a movie whose title contains "logan" as a prefix; or 2) a star whose name includes "logan" as a prefix.</del></span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>24</th><td class="r"><span>* <ins>Do full text search using the query. If the query string has multiple keywords, then each keyword should be treated as a prefix. For example, the query "good u" is first tokenized into two words: "good" and "u". The search results will be all the movie titles that contain a word starting with "good" and a word starting with "u", such as "The Good, The Bad and The Ugly", and "Goodbye Uncle Tom".&nbsp; Check the following Netflix screenshot as an example of full text search.&nbsp; </ins></span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>25</th><th>25</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>26</th><th>Â </th><td class="l"><span>* If the query string has multiple keywords, then each keyword should be treated as a prefix. For example, the query "good u" is first tokenized into two words: "good" and "u". The search results will be all the movie titles that contain a word starting with "good" and a word starting with "u", such as "The Good, The Bad and The Ugly", and "Goodbye Uncle Tom".&nbsp; Check the following Netflix screenshot as an example of full text search.&nbsp; </span></td>
                      </tr>
                      <tr>
                        <th>Â </th><th>26</th><td class="r"><span>* This search box should search on movie title and star name attributes. A movie is considered a match if the title matches the query or a star in this movie matches the query. For example, the query "logan" should return a list of movies including 1) movies whose title contains "logan" as a prefix; and 2) movies that have a star whose name includes "logan" as a prefix. </span></td>
                      </tr><tr>
                        <th>Â </th><th>27</th><td class="r"><span></span></td>
                      </tr><tr>
                        <th>Â </th><th>28</th><td class="r"><span>* The search should jump to your movie list search result page and shows all movies that match the query.</span></td>
                      </tr><tr>
                        <th>Â </th><th>29</th><td class="r"><span></span></td>
                      </tr><tr class="last">
                        <th>Â </th><th>30</th><td class="r"><span></span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>27</th><th>31</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>28</th><th>32</th><td class="l"><span>[[Image(netflix.png)]]</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2018-winter-project4?version=22#L38">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2018-winter-project4?version=23#L42">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>38</th><th>42</th><td class="l"><span>[[Image(rotten-tomatoes.png)]]</span></td>
                  </tr><tr>
                          <th>39</th><th>43</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>40</th><th>Â </th><td class="l"><span>We recommend you use a Javascript autocomplete library instead of implementing the autocomplete on your own. There are many autocomplete libraries, such as https://github.com/devbridge/jQuery-Autocomplete. The<del>re are also more libraries out there: https://ourcodeworld.com/articles/read/193/top-10-best-autocomplete-jquery-and-javascript-plugins. The</del> autocomplete library can help you easily achieve some of the requirements.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>44</th><td class="r"><span>We recommend you use a Javascript autocomplete library instead of implementing the autocomplete on your own. There are many autocomplete libraries, such as https://github.com/devbridge/jQuery-Autocomplete. The<ins></ins> autocomplete library can help you easily achieve some of the requirements.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>41</th><th>45</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>42</th><th>46</th><td class="l"><span></span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2018-winter-project4?version=22#L51">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2018-winter-project4?version=23#L55">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>51</th><th>55</th><td class="l"><span>&nbsp; * if the item is a star: single star page;</span></td>
                  </tr><tr>
                          <th>52</th><th>56</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>53</th><th>Â </th><td class="l"><span>* If the user doesn't choose any of the suggestions using the keyboard, and just hits "Enter" key or clicks the search button, you should do the search normally as stated above <del>and go to the movie-list page</del>.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>57</th><td class="r"><span>* If the user doesn't choose any of the suggestions using the keyboard, and just hits "Enter" key or clicks the search button, you should do the search normally as stated above <ins>in the full text search requirement</ins>.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>54</th><th>58</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>55</th><th>59</th><td class="l"><span>* When the user types only one or two characters, you should not do any search because the results may not be helpful. You should only perform the autocomplete search when the user types in at least 3 characters.</span></td>
                  </tr><tr>
                          <th>56</th><th>60</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>57</th><th>Â </th><td class="l"><span>* When the user types in the query, you should not do the autocomplete search on every keystroke because the user is still typing. Moreover you don't want to send too many requests to the backend. You should set a small delay time (<del>for example, </del>300ms) so that that the frontend only performs the autocomplete search after the user stops typing for at least 300ms. </span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>61</th><td class="r"><span>* When the user types in the query, you should not do the autocomplete search on every keystroke because the user is still typing. Moreover you don't want to send too many requests to the backend. You should set a small delay time (<ins></ins>300ms) so that that the frontend only performs the autocomplete search after the user stops typing for at least 300ms. </span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>58</th><th>62</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>59</th><th>63</th><td class="l"><span>* If the autocomplete query has been issued before, you don't want to send the request to the server again (for example, when the user deletes some of the characters). Store the suggestion list of each query in the browser. Every time before your code needs to do autocomplete search, first check if you can use the stored suggestions. If not, then send the query to the server.</span></td>
                  </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
      </div>
  </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/wiki/public/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/wiki/public/about"><strong>Trac 1.0.13</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ