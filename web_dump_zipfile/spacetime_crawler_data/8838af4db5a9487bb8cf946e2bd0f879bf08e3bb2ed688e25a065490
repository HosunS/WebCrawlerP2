¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalueˆ¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD3376¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueUApache/2.4.7 (Ubuntu)¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 12 Mar 2014 01:55:13 GMT¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"d30-4f45f20a16251"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 07 Feb 2019 04:59:29 GMTKraw_content¢DtypeEvalueY0CLQ_API 1.0  June, 2002

Copyright (c) 2002 University of California at Irvine 
All rights reserved.


 DESCRIPTION
 -----------
 CLQ_API provides group key agreement protocol over OpenSSL library. 5
 group key agreement protocols are provided.   

 The five key agreement protocols supported are:
  * GDH : protocol based on group extensions of the two-party
          Diffie-Hellman key exchange.

  * CKD : is a centralized key distribution with the key server
          dynamically chosen from among the group members. The key
          server uses pairwise Diffie-Hellman key exchange to
          distribute keys.

  * TGDH : combines a binary key tree structure with the group
           Diffie-Hellman technique.

  * STR : a form of TGDH with a so-called ``skinny'' or
          imbalanced tree.

  * BD : a protocol proposed by Burmester-Desmedt, another
         variation of group Diffie-Hellman. BD is
         computation-efficient requiring a constant number of
         exponentiations upon any membership change, using more
         messages.

 OVERVIEW
 --------
 This  package contains the following:
  
 libclq_api.a, libbd, libstr.a, libself.a:
    Libraries that provides the primitives used to implement the
    following key agreement protocols: GDH, CKD,
    Burmester-Dermstedt, STR and TGDH. For more details see
    http://sconce.ics.uci.edu/cliques/. 

 In addition, each of the above listed libraries comes with example
 programs.

 NOTE: This package requires Openssl (www.openssl.org).
   

 INSTALLATION 
 ------------

 After unzipping the files, change the current directory to be
 clq_api1.0, then do the following:
	 
 1) define the following environment variables SSL_DIR and
    SSL_INC. They are used by the configure file to find 
    libcrypto.a (Openssl):

    Example:

    setenv  SSL_DIR  /usr
    setenv  SSL_INC  /usr/include/openssl

 2) run ./configure
 2) run ./make


 FAQs
 ----

 1) How to generate certificates
    The certificates used are X509 certificates. Some simple programs
    that use openssl tools to create the certificates are provided
    with this package. They can be found in the ``utils'' directory.
    Also see README_certificates for more information.    

 2) How do I specify the path to the certificates
    There are three environment variables used to specify the path to
    the certificates. If they are not set up, the library expects all
    users certificates, the CA certificate and the dsa parameters
    files to be in the same directory with the binary programs.

    The variables are:     

    CLQ_CERTF specifies the path to user certificates (the *_cert.pem
              files) and the dsa parameters (dsa_param.pem).
    CLQ_KPRIV specifies the path to the private key files (*_priv.pem
              files)
    CLQ_CA    specifies the path to the CA certificate file (cacert.pem
              file)

 3) What is dsa_param.pem file? 
    All the protocols supported by Secure Spread are variaations on
    Diffie-Hellman extended to groups. This is the file that contains DH
    common parameters, or DSA parameters (for details see www.openssl.org
    documentation). It is used by the key agreement protocol. The number of 
    bits chosen for these parameters has a big impact on the security and
    performance of the protocol.

 SUPPORT
 -------

 kyongdae@ics.uci.edu





Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ