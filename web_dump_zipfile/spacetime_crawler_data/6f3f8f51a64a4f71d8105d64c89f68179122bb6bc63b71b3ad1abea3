¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1927¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 06 Apr 2017 21:08:51 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"787-54c85ea71dba5"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXSat, 02 Feb 2019 16:32:49 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY‡<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, March 8, 2012</title>
</head>
<body>
<a href="/~theory/"><img src="http://www.ics.uci.edu/~theory/logo/CATOC2.jpg"></a>
<h2><a href="/~theory/269/">CS 269S, Winter 2012: Theory Seminar</a><br>
Bren Hall, Room 1423, 1pm

<hr>
March 8, 2013:</h2>
<h1>
Kinetic Data Structures for All Nearest Neighbors and Closest Pair in
the Plane
</h1>
<h2>
Joe Simons
</h2>

<p>
This paper presents a kinetic data structure (KDS) for solutions to
the all nearest neighbors problem and the closest pair problem in the
plane. For a set <i>P</i> of <i>n</i> moving points where the trajectory
of each
point is an algebraic function of constant maximum degree <i>s</i>, our
kinetic algorithm uses <i>O</i>(<i>n</i>) space
and <nobr><i>O</i>(<i>n</i> log <i>n</i>)</nobr> preprocessing
time and processes
<nobr><i>O</i>(<i>n</i><sup>2</sup> &beta;<sub>2<i>s</i> + 2</sub>(<i>n</i>)<sup>2</sup> log <i>n</i>)</nobr>
events in amortized <i>O</i>(log&nbsp;<i>n</i>) time per event, where
&beta;<sub><i>s</i></sub>(<i>n</i>) is an
extremely slow growing function. In terms of the KDS performance
criteria, our KDS is efficient, responsive (in an amortized sense),
compact, and local (on average).
</p><p>
Our deterministic kinetic algorithm improves by
an <i>O</i>(log<sup>2</sup>&nbsp;<i>n</i>)
factor the previous randomized kinetic algorithm by Agarwal, Kaplan,
and Sharir. The improvement is obtained by using a new sparse graph
representation, the Pie Delaunay graph, to reduce the problem to
one-dimensional range searching, as opposed to the two-dimensional
range searching in the previous work. Their KDS is efficient,
responsive (in an amortized sense), and compact, but it is not local.
</p>

<p>(Based
on a paper by Z. Rahmati, V. King, and S. Whitesides,
to appear at the 29th ACM Symposium on Computational Geometry, SoCG 2013.)</p>

</body>
</html>

Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ