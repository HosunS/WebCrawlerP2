¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE20796¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueX°trac_form_token=a1365ae2fd8adb8248ea7051; httponly; Path=/wiki/public, trac_session=4c1897a861fdb8d6d4239b36; expires=Wed, 08 May 2019 23:56:38 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueGExpiresAv¢DtypeEvalueXFri, 01 Jan 1999 00:00:00 GMT¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueMCache-ControlAv¢DtypeEvalueOmust-revalidate¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 07 Feb 2019 23:56:38 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueWtext/html;charset=utf-8Kraw_content¢DtypeEvalueYQ<<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

    <html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      cs122b-2019-winter-project2 (diff) â€“ Public
    </title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/wiki/public/search" />
        <link rel="help" href="/wiki/public/wiki/TracGuide" />
        <link rel="up" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=history" title="Page history" />
        <link rel="next" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=31" title="Version 31" />
        <link rel="start" href="/wiki/public/wiki" />
        <link rel="stylesheet" href="/wiki/public/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/diff.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/tracwysiwyg/editor.css" />
        <link rel="tracwysiwyg.base" href="/wiki/public" />
        <link rel="prev" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=29" title="Version 29" />
        <link rel="shortcut icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
    <style id="trac-noscript" type="text/css">.trac-noscript { display: none !important }</style>
    <script type="text/javascript">
      var _tracwysiwyg={};
    </script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/jquery.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/babel.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/trac.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/search.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/diff.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/tracwysiwyg/wysiwyg.js"></script>
    <script type="text/javascript">
      jQuery("#trac-noscript").remove();
      jQuery(document).ready(function($) {
        $(".trac-autofocus").focus();
        $(".trac-target-new").attr("target", "_blank");
        setTimeout(function() { $(".trac-scroll").scrollToTop() }, 1);
        $(".trac-disable-on-submit").disableOnSubmit();
      });
    </script>
    <link rel="stylesheet" type="text/css" href="/wiki/public/chrome/common/css/diff.css" />
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW" />
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.ics.uci.edu/"><img src="/wiki/public/chrome/site/ics.jpg" alt="ICS Logo" height="67" width="128" /></a>
      </div>
      <form id="search" action="/wiki/public/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/wiki/public/login">Login</a></li><li><a href="/wiki/public/prefs">Preferences</a></li><li class="last"><a href="/wiki/public/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
        <ul>
          <li class="first"><span>&larr; <a class="prev" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=29" title="Version 29">Previous Change</a></span></li><li><a href="/wiki/public/wiki/cs122b-2019-winter-project2?action=history" title="Page history">Wiki History</a></li><li class="last"><span><a class="next" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=31" title="Version 31">Next Change</a> &rarr;</span></li>
        </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
      <h1>
        Changes between
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=29">Version 29</a> and
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=30">Version 30</a> of
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2">cs122b-2019-winter-project2</a>
      </h1>
      <form method="post" id="prefs" action="/wiki/public/wiki/cs122b-2019-winter-project2?version=30"><div><input type="hidden" name="__FORM_TOKEN" value="a1365ae2fd8adb8248ea7051" /></div>
        <div>
          <input type="hidden" name="action" value="diff" />
          <input type="hidden" name="version" value="30" />
          <input type="hidden" name="old_version" value="29" />
          
  <label for="style">View differences</label>
  <select id="style" name="style">
    <option selected="selected" value="inline">inline</option>
    <option value="sidebyside">side by side</option>
  </select>
  <div class="field">
    <label><input type="radio" name="contextall" value="0" checked="checked" />
             Show</label>
      <label><input type="text" name="contextlines" id="contextlines" size="2" maxlength="3" value="2" />
             lines around each change</label><br />
    <label><input type="radio" name="contextall" value="1" />
           Show the changes in full context</label>
  </div>
  <fieldset id="ignore">
    <legend>Ignore:</legend>
    <div class="field">
      <input type="checkbox" id="ignoreblanklines" name="ignoreblanklines" />
      <label for="ignoreblanklines">Blank lines</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorecase" name="ignorecase" />
      <label for="ignorecase">Case changes</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorewhitespace" name="ignorewhitespace" />
      <label for="ignorewhitespace">White space changes</label>
    </div>
  </fieldset>
  <div class="buttons">
    <input type="submit" name="update" value="Update" />
  </div>

        </div>
      </form>
      <dl id="overview">
        <dt class="property time">Timestamp:</dt>
        <dd class="time">
            Jan 18, 2019 11:06:50 PM (<a class="timeline" href="/wiki/public/timeline?from=2019-01-18T23%3A06%3A50-08%3A00&amp;precision=second" title="See timeline at Jan 18, 2019 11:06:50 PM">3 weeks</a> ago)
        </dd>
        <dt class="property author">Author:</dt>
        <dd class="author">
          dayueb
        </dd>
        <dt class="property message">Comment:</dt>
        <dd class="message">
          
          <p>
--
</p>

        </dd>
      </dl>
      <div class="diff">
        <div class="legend" id="diff-legend">
          <h3>Legend:</h3>
          <dl>
            <dt class="unmod"></dt><dd>Unmodified</dd>
            <dt class="add"></dt><dd>Added</dd>
            <dt class="rem"></dt><dd>Removed</dd>
            <dt class="mod"></dt><dd>Modified</dd>
          </dl>
        </div>
        <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2 id="file0">
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=30">cs122b-2019-winter-project2</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Version 29">
                    <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=29#L57">
                      v29</a>
                  </th>
                  <th title="Version 30">
                    <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=30#L57">
                      v30</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>57</th><th>57</th><td class="l"><span>&nbsp;* ''!Previous/Next'': Since there could be many movies on the list, each page can only display a certain number (''N'') of movies, and the interface has "Prev"/"Next" buttons to allow the user to go through all the movies.&nbsp; &nbsp;Your interface should allow the customer to change the number of listings ''N'' per page. You can implement a drop-down menu to choose "N" from a list of predefined values such as 10, 25, 50, 100, etc.</span></td>
                  </tr><tr>
                          <th>58</th><th>58</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>59</th><th>Â </th><td class="l"><span>&nbsp;* Using the "Browsing" page, the user can browse movies by either their genres and or title. The "Browsing by movie genre" page has all the (hyperlinked) genres. The user can click on a genre to see all the movies of this genre. The "Browsing by movie title" page categorizes the movies based on their titles. The page organizes all the titles based on their first character in the title in alphabetical order.&nbsp; (Notice that the first character could be a digit such as "2" in "2012".)&nbsp; When the user clicks on a letter, <del>he can see the list of all the movies with this first letter in their</del> title.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>59</th><td class="r"><span>&nbsp;* Using the "Browsing" page, the user can browse movies by either their genres and or title. The "Browsing by movie genre" page has all the (hyperlinked) genres. The user can click on a genre to see all the movies of this genre. The "Browsing by movie title" page categorizes the movies based on their titles. The page organizes all the titles based on their first character in the title in alphabetical order.&nbsp; (Notice that the first character could be a digit such as "2" in "2012".)&nbsp; When the user clicks on a letter, <ins>the website should show the list of all the movies each with its first letter in the</ins> title.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>60</th><th>60</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>61</th><th>Â </th><td class="l"><span>&nbsp;* ''Shopping Cart'': For all the pages that display movie information, each movie should have an associated "Add to Shopping Cart" interface. The interface shows the current number of copies for this item (during this login <del>period), and allow the user to add more copies (or delete all copies) of this item by modifying the quantity. If the user clicks the button, the corresponding number of copies of movies should be set in his shopping cart (or delete the item if the quantity becomes 0).&nbsp; The interface should allow the user to see all the items (with their quantities) in his/her current shopping cart (during this logi</del>n).</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>61</th><td class="r"><span>&nbsp;* ''Shopping Cart'': For all the pages that display movie information, each movie should have an associated "Add to Shopping Cart" interface. The interface shows the current number of copies for this item (during this login <ins>session), and allows the user to add more copies (or delete all copies) of this item by modifying the quantity. If the user clicks the button, the corresponding number of copies of movies should be set in his/her shopping cart (or delete the item if the quantity is set to 0).&nbsp; The interface should allow the user to see all the items (with their quantities) in his/her current shopping cart (during this login sessio</ins>n).</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>62</th><th>62</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>63</th><th>Â </th><td class="l"><span>&nbsp; All pages after login should have a "Checkout" button. If the user clicks this button, there is a "Shopping cart" page that displays the movies in the shopping cart. <del>&nbsp;If the user chooses to proceed to check out, the next page "Ask for Customer Information" should ask the user to provide a credit number, expiration date, and first name and</del> last name of the credit card holder.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>63</th><td class="r"><span>&nbsp; All pages after login should have a "Checkout" button. If the user clicks this button, there is a "Shopping cart" page that displays the movies in the shopping cart. <ins>If the user chooses to proceed to check out, the next page "Ask for Customer Information" should ask the user to provide a credit number, expiration date, the first name, and the</ins> last name of the credit card holder.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>64</th><th>64</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>65</th><th>Â </th><td class="l"><span>&nbsp;* ''' '''''Checkout''''':'''&nbsp; The transaction succeeds only if the user can provide the first name, the last name, and a credit card with an expiration date, which matches a record '''in the credit cards table (not those in the customers table)'''. <del>&nbsp;</del>If succeeded, the transaction should be recorded in the system (in the "sales" table) and a confirmation page should be displayed.&nbsp; &nbsp;[[BR]]</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>65</th><td class="r"><span>&nbsp;* ''' '''''Checkout''''':'''&nbsp; The transaction succeeds only if the user can provide the first name, the last name, and a credit card with an expiration date, which matches a record '''in the credit cards table (not those in the customers table)'''. <ins></ins>If succeeded, the transaction should be recorded in the system (in the "sales" table) and a confirmation page should be displayed.&nbsp; &nbsp;[[BR]]</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>66</th><th>66</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>67</th><th>67</th><td class="l"><span>&nbsp;* '''Performance requirements''': You can decide whether you want to do caching on the Web server for earlier query results.</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=29#L76">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=30#L76">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>76</th><th>76</th><td class="l"><span>&nbsp;* Store data directly in the frontend instead of the database.</span></td>
                  </tr><tr>
                          <th>77</th><th>77</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>78</th><th>Â </th><td class="l"><span>We are not specifying all the details of the interfaces. You are encouraged to use your imagination to enhance the functionalities. You can <del>implement the above using '''JSP and/or Java servlets''' at the server side. You can use any type of client-side technologies to enhance the functionality of your website (e.g., Javascript, style sheets, etc). Regardless of the client-side technology, you will most likely make extensive use of HTML</del>.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>78</th><td class="r"><span>We are not specifying all the details of the interfaces. You are encouraged to use your imagination to enhance the functionalities. You can <ins>use any appropriate client-side technologies to enhance the user interface and the user experience of your website (e.g., Javascript, CSS, HTML, etc.)</ins>.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>79</th><th>79</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>80</th><th>80</th><td class="l"><span>----</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=29#L120">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=30#L120">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>120</th><th>120</th><td class="l"><span>== If you chose a different domain ==</span></td>
                  </tr><tr>
                          <th>121</th><th>121</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>122</th><th>Â </th><td class="l"><span>You may design your own flow of interfaces that is suitable for your application. However, your application must cover the functionalities mentioned above, including login, conditional search, browsing, selection, sorting, navigation between pages, and error handling. If your domain doesn't require a shopping cart and checkout, come up with two features that are comparable. <del>&nbsp;</del>You are required to draw your application workflow (similar to the Fabflix diagram above) and present it during the demo session. It is your responsibility to make sure that your design and implementation meet all the requirements. If you are not sure about it, make sure to post it on Piazza or come to office hours to discuss.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>122</th><td class="r"><span>You may design your own flow of interfaces that is suitable for your application. However, your application must cover the functionalities mentioned above, including login, conditional search, browsing, selection, sorting, navigation between pages, and error handling. If your domain doesn't require a shopping cart and checkout, come up with two features that are comparable. <ins></ins>You are required to draw your application workflow (similar to the Fabflix diagram above) and present it during the demo session. It is your responsibility to make sure that your design and implementation meet all the requirements. If you are not sure about it, make sure to post it on Piazza or come to office hours to discuss.</span></td>
                      </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
      </div>
  </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/wiki/public/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/wiki/public/about"><strong>Trac 1.0.13</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ