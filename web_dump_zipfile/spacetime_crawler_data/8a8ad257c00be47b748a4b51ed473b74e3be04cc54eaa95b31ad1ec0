¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD2706¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 09 Jun 2017 22:11:30 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"a92-5518e405522ce"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXSat, 02 Feb 2019 14:03:46 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY
’<meta charset="utf-8" emacsmode="-*- markdown -*-">

	**CS216 Image Understanding**
	**Instructor: Charless Fowlkes**
	*Yu Guo (26642334)*
	*04/17/2017*

# Matlab Warmup

## Describe results

a) Generate row vector with 5 elements (1,2,3,4,5), in a random order, eg. x = [5, 1, 3, 2, 4].

b) b is the second row of matrix a, which is b = [4, 5, 6].

c) Find the numbers in range [1501:2000] which is larger than 1850. h = [1851:2000].

d) Generate 10 numbers in row with value of 22 for each. And then compute the sum of those numbers, which y = 220.

e) Generate numbers in row from 1 to 100, and then reverse them. b = [100, 99, 98, ..., 3, 2, 1]. 


## Be familiar with "imread"

a) 
![](results/1-2-a.png width=\pagewidth)

b) 
![](results/1-2-b.png width=\pagewidth)


c) d) e) f)

![](results/1-2-cdef.png width=550px)

g) 

Minimum value x = 0.1059. Find 3 pixels have same value: (81,1), (61,14), (30,34).

h) 

unique value:     1     2     3     8     9 <br>
total number:     2     1     1     3     1

# Computing average images

## Set1

![](results/2-1.png width=\pagewidth)

## Set2

![](results/2-2.png width=\pagewidth)

The average images show rough features of boat and airplane. Because about half images has been flipped, it makes mirror-flip average image even more blurred (less features).


# Image classification

## Display first airplane in test dataset

![](results/3-1.png width=200px)

## Using differernt K with Euclidian distance 

![](results/3-2.png width=\pagewidth)

## Using differernt K with Cosine distance 

![](results/3-3.png width=\pagewidth)

## Using differernt K with Correlation distance 

![](results/3-4.png width=\pagewidth)

## Summary
Here I compute 12 combinations (4 different K value: 1,3,5,7; and 3 distances: Euclidian, Cosine, Correlation). Find out that K = 7 and using Correlation Distance gives best classification rate 0.4534.

Correlation Distance is similar with Cosine Distance, but first it subtract the mean value from all the pixels. It's kind of balancing the lighting condition in different images.

From confusion matrix, we can find class 3 and 5 (0~9) tend to get confused to each other, which are "cat" and "dog". Some failure cases.

![Groudtruth(Predict)](results/3-5.png width=\pagewidth)


Notes: Here I am only compute classification rate, misclassification rate = 1 - classification rate.


End.

<!-- Markdeep: -->
<style class="fallback">body{visibility:hidden;white-space:pre;font-family:monospace}</style>
<script src="markdeep.min.js"></script>
<script src="https://casual-effects.com/markdeep/latest/markdeep.min.js"></script>
<script>window.alreadyProcessedMarkdeep||(document.body.style.visibility="visible")</script>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ