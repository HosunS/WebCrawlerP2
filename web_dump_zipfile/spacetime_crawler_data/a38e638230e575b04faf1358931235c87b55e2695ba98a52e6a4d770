¦Ifinal_url¢DtypeEvaluex/https://www.ics.uci.edu/~theory/269/050603.htmlLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1723¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 06 Apr 2017 21:08:49 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"6bb-54c85ea5cdcb0"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXWed, 30 Jan 2019 23:03:43 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY»<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, 3 June  2005</title>
</head>
<body>
<a href="/~theory/"><img src="/~theory/logo/shortTheory.gif" width=" 
521" height="82" border="0" alt="ICS Theory Group"></a> 

<h1>ICS 269, Spring 2005: Theory Seminar</h1>

<h2>3 June 2005:<br>
<br>
Location: PSCB 230
<br>
<br>
Speaker: Jonathan Sun
<br>
</h2>
<p>
This talk will be a presentation of 
a paper titled 
"How to spread adversarial nodes? rotate!"
   by Christian Scheideler. It appeared in STOC 2005.
</p>
<p>
Abstract: This paper studies the following game played by a System and
   an Adversary. System maintains a Ring of n white pebbles which is
fully accessible to Adversary. Adversary has limited amount (less than
   n) of black pebbles. At each step, Adversary inserts or withdraws a
   black pebble into/from the Ring, but System then somehow rearranges
   the ring to distribute black pebbles as uniformly as possible.
   Adversary's goal is to introduce a segment in Ring of length O(log n)
   with more than half of the pebbles being black, in polynomial time.
   System's goal is to, with high probability, prevent this from
   happening with little work of rearrangement. The paper studies a
   simple strategy of System and provides interesting results. It has
   application in making robust peer-to-peer networks.
</p>
<p>
   After Adversary inserts a black pebble to a position, System randomly
   select another k positions (k-1 pebbles plus one new position) and
   rotate the k pebbles within the k+1 positions. When k=2, Adversary
   wins with only O(log n) black pebbles. When k=3, System wins even if
   Adversary has n/3 black pebbles.

</p>
</body>
</html>
Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ