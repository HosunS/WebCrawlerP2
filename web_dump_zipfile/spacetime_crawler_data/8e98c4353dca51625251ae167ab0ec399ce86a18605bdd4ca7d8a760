¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE14961¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 18 Jan 2019 21:54:42 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"bdeb-57fc28ef4a6cd-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 04:23:52 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY½ë<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
Publications with
<a href="//www.ics.uci.edu/~goodrich/">
Michael T. Goodrich
</a>
</h2>
<ul>
<li><b>Confluent drawings: visualizing non-planar diagrams in a planar way</b>.<br>
<a href="//www.middlebury.edu/~dickerso/">M. Dickerson</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
and
J. Meng.<br>
<a href="//arxiv.org/abs/cs.CG/0212046">arXiv:cs.CG/0212046</a>.<br>
11th Int. Symp. Graph Drawing, Perugia, Italy, 2003.<br>
Springer, <i>Lecture Notes in
Comp. Sci.</i> 2912, 2004, pp. 1&ndash;12.<br>
<a href="//doi.org/10.7155/jgaa.00099"><i>J. Graph
Algorithms and Applications</i>
(special issue for GD'03) 9 (1): 31&ndash;52, 2005</a>.
<p>
We describe a new method of
<a href="gdraw.html">drawing graphs</a>, based on allowing the edges to
be merged together and drawn as "tracks" (similar to train tracks).
We present heuristics for finding such drawings
based on my previous <a href="p-asgi.html">algorithms
for finding maximal bipartite subgraphs</a>, prove that several
important families of graphs have confluent drawings, and provide
examples of other graphs that can not be drawn in this way.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Confluent drawings: visualizing non-planar diagrams in a planar way">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Confluent-drawings-visualizing-non-planar-diagrams-in-a-planar-way.html">Citations</a> &ndash;
<a href="//gdea.informatik.uni-koeln.de/archive/00000406/">GDEA</a>)
<p>
<li><b>Deterministic sampling and range counting in geometric data streams</b>.<br>
<a href="//www.ics.uci.edu/~bagchi/">A. Bagchi</a>,
<a href="//masters.cs.uchicago.edu/page/amitabh-chaudhary-phd">A. Chaudhary</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//arxiv.org/abs/cs.CG/0307027">arXiv:cs.CG/0307027</a>.<br>
<i>20th ACM Symp. Comp. Geom.,</i> Brooklyn, 2004, pp. 144&ndash;151.<br>
<a href="//doi.org/10.1145/1240233.1240239"><i>ACM Trans. Algorithms</i> 3(2):A16, 2007</a>.
<p>
We describe an efficient streaming-model construction of epsilon-nets
and epsilon-approximations, and use it to find deterministic streaming-model
approximation algorithms for iceberg range queries and for various
robust statistics problems.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Deterministic sampling and range counting in geometric data streams">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Deterministic-sampling-and-range-counting-in-geometric-data-streams.html">Citations</a>)
<p>
<li><b>Selected open problems in graph drawing</b>.<br>
<a
href="//www.infosun.fmi.uni-passau.de/br/lehrstuhl/Mitarbeiter/Brandenburg/">F. J. Brandenburg</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.cs.arizona.edu/~kobourov/">S. G. Kobourov</a>,
<a href="//www.diei.unipg.it/STAFF/liotta.htm">G. Liotta</a>,
and
<a href="//www.apm.tuwien.ac.at/people/Mutzel.html">P. Mutzel</a>.<br>
11th Int. Symp. Graph Drawing, Perugia, Italy, 2003.<br>
<a href="//doi.org/10.1007/978-3-540-24595-7_55">Springer, <i>Lecture Notes in
Comp. Sci.</i> 2912, 2004, pp. 515&ndash;539</a>.
<p>
We survey a number of open problems in theoretical and applied graph
drawing.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Selected open problems in graph drawing">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Selected-open-problems-in-graph-drawing.html">Citations</a> &ndash;
<a href="//gdea.informatik.uni-koeln.de/archive/00000489/">GDEA</a>)
<p>
<li><b>Confluent layered drawings</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
and
J. Meng.<br>
12th Int. Symp. Graph Drawing, New York, 2004.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 3383, 2004, pp. 184&ndash;194.<br>
<a href="//arxiv.org/abs/cs.CG/0507051">arXiv:cs.CG/0507051</a>.<br>
<a href="//doi.org/10.1007/s00453-006-0159-8"><i>Algorithmica</i> 47 (4): 439&ndash;452 (special issue for Graph Drawing), 2007</a>.
<p>
Describes a <a href="gdraw.html">graph drawing</a> technique
combining ideas of
<a href="p-confluent.html">confluent drawing</a>
with Sugiyama-style layered drawing.
Uses a reduction to <a href="graph-color.html">graph coloring</a>
to find and visualize sets of bicliques in each layer.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Confluent layered drawings">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Confluent-layered-drawings.html">Citations</a> &ndash;
<a href="//gdea.informatik.uni-koeln.de/archive/00000586/">GDEA</a>)
<p>
<li><b>Improved combinatorial group testing for
real-world problem sizes.</b><br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
and <a href="//www.ics.uci.edu/~dan/">D. S. Hirschberg</a>.<br>
<i>9th Worksh. Algorithms and Data Structures,</i> Waterloo, 2005.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 3608, 2005, pp. 86&ndash;98.<br>
<a href="//arxiv.org/abs/cs.DS/0505048">arXiv:cs.DS/0505048</a>.<br>
<i>SIAM J. Computing</i> 36 (5): 1360&ndash;1375, 2007.
<p>
We study practically efficient methods for finding few
flawed items among large sets of items, by testing whether there
exist flaws in each of a small number of batches of items.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Improved combinatorial group testing for real-world problem sizes">BibTeX</a> &ndash;
<a href="EppGooHir-WADS-05.pdf">Mike's WADS talk slides</a>)
<p>
<li><b>The skip quadtree: a simple dynamic data structure
for multidimensional data.</b><br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
and
<a href="//www.ics.uci.edu/~zhengsun/">J. Z. Sun</a>.<br>
<i>21st ACM Symp. Comp. Geom.,</i> Pisa, 2005, pp. 296&ndash;305.<br>
<a
href="//arxiv.org/abs/cs.CG/0507049">arXiv:cs.CG/0507049</a>.<br>
<i>Int. J. Comp. Geom. &amp; Appl.</i> 18(1-2): 131&ndash;160, 2008.
<p>
We describe a data structure consisting of a sequence of compressed
quadtrees for successively sparser samples of an input point set, with
connections between the same squares in successive members of the
sequence.  Using this structure, we can insert or delete points and
answer approximate range queries and approximate nearest neighbor
queries in O(log n) time per operation.
<p>
(<a href="EppGooSun-SoCG-05.pdf">SoCG05 talk slides</a> &ndash;
<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#The skip quadtree: a simple dynamic data structure for multidimensional data">BibTeX</a>)
<p>
<li><b>Skip-webs: efficient distributed data structures for
multi-dimensional data sets.</b><br>
<a href="//www.daimi.au.dk/~large/">L. Arge</a>,
D. Eppstein,
and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//doi.org/10.1145/1073827"><i>Proc. 24th ACM SIGACT-SIGOPS Symp. Principles of Distributed Computing
(PODC 2005)</i>, Las Vegas,  July 2005, pp. 69&ndash;76</a>.<br>
<a href="//arxiv.org/abs/cs.DC/0507050">arXiv:cs.DC/0507050</a>.
<p>
Describes efficient distributed versions of skip quadtrees and related
spatial searching structures.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Skip-webs: efficient distributed data structures for multi-dimensional data sets">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Skip-webs-efficient-distributed-data-structures-for-multi-dimensional-data-sets.html">Citations</a>)
<p>
<li><b>Delta-confluent drawings</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
and
J. Meng.<br>
13th Int. Symp. Graph Drawing, Limerick, Ireland, 2005.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 3843, 2006, pp. 165&ndash;176.<br>
<a href="//arxiv.org/abs/cs.CG/0510024">arXiv:cs.CG/0510024</a>.<br>
<p>
We characterize the graphs that can be drawn confluently
with a single confluent track that is tree-like except for three-way
Delta junctions, as being exactly the distance hereditary graphs.
Based on this characterization, we develop efficient algorithms
for drawing these graphs.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Delta-confluent drawings">BibTeX</a> &ndash;
<a href="EppGooMen-GD-05.pdf">GD'05 talk slides</a>)
<p>
<li><b>Guard placement for efficient point-in-polygon proofs.</b><br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
and
<a href="//www.ics.uci.edu/~nodari/">N. Sitchinava</a>.<br>
<a href="//arxiv.org/abs/cs.CG/0603057">arXiv:cs.CG/0603057</a>.<br>
<i>23rd ACM Symp. Comp. Geom.,</i> Gyeongju, South Korea, 2007, pp. 27&ndash;36.
<p>
The problem is to place as few wedges as possible in the plane
such that a desired polygon can be formed as some monotone Boolean
combination of the wedges. The motivation is for wireless devices to
prove that they are located within a target area by their ability to
communicate with a subset of base stations (the wedges).
We provide upper and lower bounds on the number of wedges needed
for several classes of polygons.
<p>
<li><b>Choosing colors for geometric graphs via color space embeddings.</b><br>
<a href="/~dillenco/">M. Dillencourt</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//arxiv.org/abs/cs.CG/0609033">arXiv:cs.CG/0609033</a>.<br>
14th Int. Symp. Graph Drawing, Karlsruhe, Germany, 2006.<br>
<a href="//doi.org/10.1007/978-3-540-70904-6_29">Springer, <i>Lecture Notes in
Comp. Sci.</i> 4372, 2007, pp. 294&ndash;305</a>.
<p>
We show how to choose colors for the vertices of a graph drawing in such
a way that all colors are easily distinguishable, but such that adjacent
vertices have especially dissimilar colors, by considering the problem
as one of embedding the graph into a three-dimensional color space.
<p>
(<a href="DilEppGoo-GD-06-talk.pdf">GD'06 talk slides</a>)
<p>
<li><b>Space-efficient straggler identification in round-trip data
streams via Newton's identitities and invertible Bloom filters.</b><br>
D. Eppstein, and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<i>10th Worksh. Algorithms and Data Structures,</i> Halifax, Nova Scotia, 2007.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 4619, 2007, pp. 637&ndash;648.<br>
<a href="//arxiv.org/abs/0704.3313">arXiv:0704.3313</a>.<br>
<a href="//doi.org/10.1109/TKDE.2010.132"><i>IEEE
Trans. Knowledge and Data Engineering</i> 23 (2): 297&ndash;306, 2011</a>.
<p>
We consider data structures for handling streams of check-in and
check-out requests, and that must identify the set of check-ins that are
not matched by a corresponding check-out. We show that, if this set has
size k, it is possible to handle this problem in space O(k log
n) by a deterministic data structure. However, if check-outs may occur
that do not match any check-in, then no low-space deterministic solution
is possible; instead, we provide a randomized solution with near-optimal
space and high probability of answering queries correctly.
<p>
(<a href="EppGoo-WADS-07.pdf">WADS talk slides</a>)
<p>
<li><b>Approximate Topological Matching of Quadrilateral Meshes</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.cs.mcgill.ca/~ethan/">E. Kim</a>,
and R. Tamstorf.<br>
<a href="//doi.org/10.1109/SMI.2008.4547954"><i>Proc. IEEE
Int. Conf. Shape Modeling and Applications (SMI 2008)</i>, Stony Brook,
New York, pp. 83&ndash;92</a>.<br>
<a href="//doi.org/10.1007/s00371-009-0363-z"><i>The Visual Computer</i>
  25 (8): 771&ndash;783, 2009</a>.
<p>
We formalize problems of finding large approximately-matching regions of
two related but not completely isomorphic quadrilateral meshes, show
that these problems are NP-complete, and describe a natural greedy
heuristic that is guaranteed to find good matches when the mismatching
parts of the meshes are small.
<p>
(<a href="//www.ics.uci.edu/~goodrich/pubs/approx-match.pdf">Preprint</a>)
<p>
<li><b>Motorcycle graphs: canonical quad mesh partitioning</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.cs.mcgill.ca/~ethan/">E. Kim</a>,
and R. Tamstorf.<br>
<a href="//www.ics.uci.edu/~goodrich/pubs/geomproc.pdf"><i>Proc. 6th Symp. Geometry Processing</i>, Copenhagen, Denmark, 2008</a>.<br>
<i>Computer Graphics Forum</i> <a
href="//doi.org/10.1111/j.1467-8659.2008.01288.x">27 (5): 1477&ndash;1486</a>, 2008.
<p>
We use a construction inspired by the motorcycle graphs previously used
in <a href="geom-ss.html">straight skeleton</a> construction, to partition quadrilateral meshes
into a small number of structured submeshes. Our construction is
canonical in that two copies of the same mesh will always be partitioned
in the same way, and can be used to speed up graph isomorphism
computations for geometric models in feature animation.
<p>
<li><b>Straight skeletons of three-dimensional polyhedra</b>.<br>
<a href="//www.cs.technion.ac.il/~barequet/">G. Barequet</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.cs.technion.ac.il/people/avaxman/">A. Vaxman</a>.<br>
<a href="//arxiv.org/abs/0805.0022">arXiv:0805.0022</a>.<br>
<i>Proc. 16th European Symp. Algorithms</i>, Karlsruhe, Germany,
2008.<br>
<a href="//doi.org/10.1007/978-3-540-87744-8_13">Springer, <i>Lecture Notes in Comp. Sci.</i> 5193, 2008, pp. 148&ndash;160.</a>
<p>
A <a href="geom-ss.html">straight skeleton</a> is defined by the locus of points crossed by the
edges and vertices of a polyhedron as it undergoes a continuous
shrinking process in which the faces move inwards at constant speed. We
resolve some ambiguities in the definition of these shapes, define
efficient algorithms for polyhedra with axis-parallel faces, show that
arbitrary polyhedra have strictly more complicated straight skeletons,
and report on results from an implementation of our algorithm for
arbitrary polyhedra.
<p>
<li><b>Succinct greedy geometric routing using hyperbolic geometry</b>.<br>
D. Eppstein and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//arxiv.org/abs/0806.0341">arXiv:0806.0341</a>.<br>
<i>Proc. 16th Int. Symp. Graph Drawing</i>, Heraklion, Crete, 2008<br>
(under the different title "Succinct greedy graph drawing in the
hyperbolic plane"),<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 5417, 2009, pp. 14&ndash;25.<br>
<a href="//doi.ieeecomputersociety.org/10.1109/TC.2010.257"><i>IEEE Transactions on Computing</i> 60 (11): 1571&ndash;1580, 2011</a>.
<p>
Greedy drawing is an idea for encoding network routing tables into the
geometric coordinates of an embedding of the network, but most previous
work in this area has ignored the space complexity of these encoded tables.
We refine a method of R. Kleinberg for embedding arbitrary graphs into
the hyperbolic plane, which uses linearly many bits to represent each
vertex, and show that only logarithmic bits per point are needed.
<p>
<li><b>Studying (non-planar) road networks through an algorithmic lens</b>.<br>
D. Eppstein, and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//arxiv.org/abs/0808.3694">arXiv:0808.3694</a>.<br>
<a href="//doi.org/10.1145/1463434.1463455"><i>Proc. 16th ACM SIGSPATIAL Int. Conf. Advances in Geographic
Information Systems (ACM GIS 2008)</i>, Article 16</a> (best paper award).<br>
Invited talk at INFORMS 2009, San Diego.
<p>
We examine US road network data and show that, contrary to the
assumptions of much past GIS work, these networks are highly nonplanar.
We introduce a class of "multiscale dispersed" networks that better fit
the data; these networks are defined by a family of disks of varying
sizes such that, if a small number of outliers is removed, the remaining
disks cover each point of the plane a constant number of times.
As we show, these networks have good graph separators, allowing for
efficient algorithms for minimum spanning trees, graph Voronoi diagrams,
and related problems.
<p>
<li><b>Linear-time algorithms for geometric graphs with sublinearly many
crossings</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.ics.uci.edu/~dstrash/">D. Strash</a>.<br>
<a href="//arxiv.org/abs/0812.0893">arXiv:0812.0893</a>.<br>
<a href="//www.siam.org/proceedings/soda/2009/SODA09_018_eppsteind.pdf"><i>20th ACM-SIAM Symp. Discrete Algorithms,</i>
New York, 2009, pp. 150&ndash;159</a>.<br>
<a href="//doi.org/10.1137/090759112"><i>SIAM J. Computing</i> 39 (8): 3814&ndash;3829, 2010</a>.
<p>
If a connected graph corresponds to a set of points and line segments in
the plane, in such a way that the number of crossing pairs of line
segments is sublinear in the size of the graph by an iterated-log
factor, then we can find the arrangement of the segments in linear
time. It was previously known how to find the arrangement in linear time
when the number of crossings is superlinear by an iterated-log factor,
so the only remaining open case is when the number of crossings is close to the
size of the graph.
<p>
<li><b>On the approximability of geometric and geographic generalization
and the min-max bin covering problem</b>.<br>
W. Du,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.ics.uci.edu/~lueker/">G. Lueker</a>.<br>
<a href="//arxiv.org/abs/0904.3756">arXiv:0904.3756</a>.<br>
Algorithms and Data Structures Symposium (WADS), Banff, Canada.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 5664, 2009, pp. 242&ndash;253.
<p>
We investigate several simplified models for k-anonymization in
databases, show them to be hard to solve exactly, and provide
approximation algorithms for them.
<p>
The min-max bin covering problem is
closely related to one of our models. An input to this problem consists
of a collection of items with sizes and a threshold size. The items must
be grouped into bins such that the total size within each bin is at
least the threshold, while keeping the maximum bin size as small as possible.
<p>
(<a href="WADS09-talks/anonymity.ppt">Slides</a>)
<p>
<li><b>Going off-road: transversal complexity in road networks</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.ics.uci.edu/~ltrott/">L. Trott</a>.<br>
<a href="//arxiv.org/abs/0909.2891">arXiv:0909.2891</a>.<br>
<a href="//doi.org/10.1145/1653771.1653778">Proc. 17th ACM
SIGSPATIAL Int. Conf. Advances in Geographic Information Systems,
Seattle, 2009, pp. 23&ndash;32</a>.
<p>
Shows both theoretically and experimentally that the number of times a
random line crosses a road network is asymptotically upper bounded by
the square root of the number of road segments.
<p>
<li><b>Cloning Voronoi diagrams via retroactive data structures</b>.<br>
<a href="//www.middlebury.edu/~dickerso/">M. Dickerson</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//arxiv.org/abs/1006.1921">arXiv:1006.1921</a>.<br>
<i>18th Eur. Symp. Algorithms</i>, Liverpool, 2010.<br>
<a href="//doi.org/10.1007/978-3-642-15775-2_31">Springer, <i>Lecture
Notes in
Comp. Sci.</i> 6346, 2010, pp. 362&ndash;373</a>.<br>
<p>
We analyze the security of an online geometric database that allows
planar nearest-neighbor queries but that does not wish the entire database to
be copied by a competitor. We show that, under several models of how the
query answers are returned, the database can be copied in a linear or
near-linear number of queries. Our method for the competitor to copy the
database is based on simulating Fortune's sweep-line algorithm for
Voronoi diagrams, backtracking when the simulation discovers the
existence of another point that invalidates earlier parts of the Voronoi
diagram construction, and using retroactive data structures to perform
the backtracking steps efficiently.
<p>
<li><b>Drawing graphs in the plane with a prescribed outer face and
polynomial area</b>.<br>
<a href="//mathcs.slu.edu/~chambers/">E. Chambers</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.ics.uci.edu/~mloffler/">M. L&ouml;ffler</a>.<br>
<i>Proc. 18th Int. Symp. Graph Drawing</i>, Konstanz, Germany, 2010.<br>
<a href="//doi.org/10.1007/978-3-642-18469-7_12">Springer, <i>Lecture Notes in
Comp. Sci.</i> 6502, 2011, pp. 129&ndash;140</a>.<br>
<a href="//arxiv.org/abs/1009.0088">arXiv:1009.0088</a>.<br>
<a href="//doi.org/10.7155/jgaa.00257"><i>J. Graph
Algorithms and Applications</i> 16 (2): 243&ndash;259, 2012</a>.
<p>
Tutte's method of spring embeddings allows any triangulated planar graph
to be drawn so that the outer face has any pre-specified convex shape,
but it may place vertices exponentially close to each other. Alternative
graph drawing methods provide polynomial-area straight line drawings but
do not allow the outer face shape to be specified. We describe a drawing
method that combines both properties: it has polynomial area, and can
match any pre-specified shape of the outer face, even a shape in which
some of the vertices have 180 degree angles. We apply our results to
drawing polygonal schemas for graphs embedded on surfaces of positive genus.
<p>
<li><b>Lombardi drawings of graphs</b>.<br>
<a href="//www2.latech.edu/~duncan/">C. Duncan</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.cs.arizona.edu/~kobourov/">S. Kobourov</a>, and
<a
href="//www.ac.tuwien.ac.at/people/noellenburg/">M. N&ouml;llenburg</a>.<br>
<i>Proc. 18th Int. Symp. Graph Drawing</i>, Konstanz, Germany, 2010.<br>
<a href="//doi.org/10.1007/978-3-642-18469-7_18">Springer, <i>Lecture Notes in
Comp. Sci.</i> 6502, 2011, pp. 195&ndash;207</a>.<br>
<a href="//arxiv.org/abs/1009.0579">arXiv:1009.0579</a>.<br>
Invited talk at <a href="//www.win.tue.nl/algo/DCGD.php">7th Dutch Computational Geometry Day</a>, Eindhoven, the
Netherlands, 2010.<br>
<a href="//doi.org/10.7155/jgaa.00251"><i>J. Graph
Algorithms and Applications</i> 16 (1): 85&ndash;108, 2012</a> (special issue
for GD 2010).
<p>
In honor of artist <a
href="//en.wikipedia.org/wiki/Mark_Lombardi">Mark Lombardi</a>, we
define a Lombardi drawing to be a drawing of a graph in which the edges
are drawn as circular arcs and at each vertex they are equally spaced
around the vertex so as to achieve the best possible angular
resolution. We describe algorithms for constructing Lombardi drawings of
regular graphs, 2-degenerate graphs, graphs with rotational symmetry,
and several types of planar graphs. A program for the rotationally
symmetric case, the <a
href="//11011110.github.io/blog/2010/07/23/graph-drawing-acceptances.html">Lombardi
Spirograph</a>, is available online.
<p>
<li><b>Drawing trees with perfect angular resolution and polynomial area</b>.<br>
<a href="//www2.latech.edu/~duncan/">C. Duncan</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.cs.arizona.edu/~kobourov/">S. Kobourov</a>, and
<a
href="//www.ac.tuwien.ac.at/people/noellenburg/">M. N&ouml;llenburg</a>.<br>
<i>Proc. 18th Int. Symp. Graph Drawing</i>, Konstanz, Germany, 2010.<br>
<a href="//doi.org/10.1007/978-3-642-18469-7_17">Springer, <i>Lecture Notes in
Comp. Sci.</i> 6502, 2011, pp. 183&ndash;194</a>.<br>
<a href="//arxiv.org/abs/1009.0581">arXiv:1009.0581</a>.<br>
<a href="//doi.org/10.1007/s00454-012-9472-y"><i>Discrete Comput. Geom.</i> 49 (2): 157&ndash;182, 2013</a>.
<p>
We consider balloon drawings of trees, in which each subtree of the root
is drawn recursively within a disk, and these disks are arranged
radially around the root, with the edges at each node spaced equally
around the node so as to achieve the best possible angular
resolution. If we are allowed to permute the children of
each node, then we show that a drawing of this type can be made in which
all edges are straight line segments and the area of the drawing is a
polynomial multiple of the shortest edge length. However, if the child
ordering is prescribed, exponential area might be necessary. We show
that, if we relax the requirement of straight line edges and draw the
edges as circular arcs (a style we call <a
href="p-lombardi.html">Lombardi drawing</a>) then even with a prescribed
child ordering we can achieve polynomial area.
<p>
<li><b>Extended dynamic subgraph statistics using <i>h</i>-index parameterized
data structures</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.ics.uci.edu/~dstrash/">D. Strash</a>, and
<a href="//www.ics.uci.edu/~ltrott/">L. Trott</a>.<br>
<i>Proc. 4th Int. Conf. on Combinatorial Optimization and Applications
(COCOA 2010)</i>, Hawaii, 2010.<br>
<a href="//doi.org/10.1007/978-3-642-17458-2_12">Springer, <i>Lecture Notes in
Comp. Sci.</i> 6508, 2010, pp. 128&ndash;141</a>.<br>
<a href="//arxiv.org/abs/1009.0783">arXiv:1009.0783</a>.<br>
<a href="//doi.org/10.1016/j.tcs.2011.11.034"><i>Theor. Comput. Sci.</i>
447: 44&ndash;52, 2012</a> (special issue for COCOA 2010).
<p>
An earlier paper with Spiro at WADS 2009 provided dynamic graph
algorithms for counting how many copies of each possible type of
subgraph there are in a larger undirected graph, when the subgraphs have
at most three vertices. This paper extends the method to directed graphs
and to larger numbers of vertices per subgraph.
<p>
<li><b>Privacy-preserving data-oblivious geometric algorithms for
geographic data</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.cs.brown.edu/people/rt/home.html">R. Tamassia</a>.<br>
<a href="//doi.org/10.1145/1869790.1869796"><i>Proc. 18th ACM SIGSPATIAL Int. Conf. Advances in Geographic
Information Systems (ACM GIS 2010)</i>, San Jose, California, pp. 13&ndash;22</a>.<br>
<a href="//arxiv.org/abs/1009.1904">arXiv:1009.1904</a>.
<p>
An algorithm is data-oblivious if the memory access patterns it makes
depend only on the input size and not on the actual input values;
data-oblivious algorithms are an important building block of
cryptographic protocols that allow algorithmic tasks to be solved by
parties who each have some subset of the input data that they do not
wish to reveal. We show how to solve several basic geometric problems
data-obliviously, including construction of convex hulls, quadtrees, and
well-separated pair decompositions, and computation of closest pairs and
all nearest neighbors.
<p>
<li><b>Tracking moving objects with few handovers</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.ics.uci.edu/~mloffler/">M. L&ouml;ffler</a>.<br>
<a href="//arxiv.org/abs/1105.0392">arXiv:1105.0392</a>.<br>
<i>12th International Symposium on Algorithms and Data Structures (WADS 2011)</i>, New York,
2011.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 6844, 2011, pp. 362&ndash;373.
<p>
We apply competitive analysis to the problem of deciding online which cell
phone tower to change to when a phone moves out of the coverage region
of the tower it is connected to. We show that, when the coverage regions
have constant ply (at most a constant number of them overlap any point
of the plane) it is possible to get within a constant factor of the
minimum possible number of handovers that an offline algorithm could achieve.
<p>
<li><b>What's the difference? Efficient set reconciliation without prior
context</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
F. Uyeda, and
<a href="//cseweb.ucsd.edu/~varghese/">G. Varghese</a>.<br>
<a href="EppGooUye-SIGCOMM-11.pdf"><i>Proc. ACM SIGCOMM</i>, Toronto, Canada, 2011</a>.
<p>
We determine the symmetric difference
between two similar sets of items, held by different machines on the
internet, using an amount of communication bandwidth that is
proportional only to the difference between the sets and with low
computational overhead. Our solution technique combines the invertible
Bloom filter data structure from our previous
work on <a href="p-straggler.html">streaming straggler detection</a>
with a randomized sampling scheme that allows us to accurately and
efficiently estimate the size of the difference.
<p>
<li><b>Category-based routing in social networks: membership dimension and the small-world phenomenon</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.ics.uci.edu/~mloffler/">M. L&ouml;ffler</a>,
<a href="//www.ics.uci.edu/~dstrash/">D. Strash</a>, and
<a href="//www.ics.uci.edu/~ltrott/">L. Trott</a>.<br>
<i>Workshop on Graph Algorithms and Applications</i>, Z&uuml;rich,
Switzerland, July 2011.<br>
<i>International Conference on Computational
Aspects of Social Networks (CASoN 2011)</i>, Salamanca, Spain, October
2011.<br>
<a href="//arxiv.org/abs/1108.4675">arXiv:1108.4675</a>.<br>
<a href="//doi.org/10.1016/j.tcs.2013.04.027"><i>Theor. Comput. Sci.</i> 514: 96&ndash;104, 2013</a>. (Special issue on Graph
Algorithms and Applications: in Honor of Professor Giorgio Ausiello)<br>
<p>
We investigate greedy routing schemes for social networks, in which
participants know categorical information about some other participants
and use it to guide message delivery by forwarding messages to neighbors
that have more categories in common with the eventual destination.
We define the membership dimension of such a scheme to be the maximum
number of categories that any individual belongs to, a natural measure
of the cognitive load of greedy routing on its participants.
And we show that membership dimension is closely related to the small
world phenomenon: a social network can be given a category system with
polylogarithmic membership dimension that supports greedy routing if,
and only if, the network has polylogarithmic diameter.
<p>
<li><b>Planar and poly-arc Lombardi drawings</b>.<br>
<a href="//www2.latech.edu/~duncan/">C. Duncan</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.cs.arizona.edu/~kobourov/">S. Kobourov</a>, and
<a href="//www.ics.uci.edu/~mloffler/">M. L&ouml;ffler</a>.<br>
<i>Proc. 19th Int. Symp. Graph Drawing</i>, Eindhoven, The Netherlands, 2011.<br>
Springer, <i>Lecture Notes in
Comp. Sci.</i> 7034, 2012, pp. 308&ndash;319.<br>
<a href="//arxiv.org/abs/1109.0345">arXiv:1109.0345</a>.<br>
<a href="//doi.org/10.20382/jocg.v9i1a11"><i>J. Computational Geometry</i> 
9 (1): 328&ndash;355, 2018</a>.
<p>
We extend Lombardi drawing (in which each edge is a circular arc and
the edges incident to a vertex must be equally spaced around it) to
drawings in which edges are composed of multiple arcs, and we
investigate the graphs that can be drawn in this more relaxed framework.
<p>
<li><b>Privacy-enhanced methods for comparing compressed DNA sequences</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.igb.uci.edu/~pfbaldi/">P. Baldi</a>.<br>
<a href="//arxiv.org/abs/1107.3593">arXiv:1107.3593</a>.
<p>
<li><b>Force-directed graph drawing using social gravity and scaling</b>.<br>
<a href="//michaeljbannister.com/">M. J. Bannister</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.ics.uci.edu/~ltrott/">L. Trott</a>.<br>
<a href="//arxiv.org/abs/1209.0748">arXiv:1209.0748</a>.<br>
<i>20th Int. Symp. Graph Drawing</i>, Redmond, Washington, 2012.<br>
<a href="//doi.org/10.1007/978-3-642-36763-2_37">Springer, <i>Lecture Notes in Comp. Sci.</i> 7704, 2013, pp. 414&ndash;425</a>.<br>
<p>
We extend force-directed methods of graph drawing by adding a force that
pulls vertices towards the center of the drawing, with a strength
proportional to the centrality of the vertex. Gradually scaling up this
force helps avoid the tangling that would otherwise result from its use.
<p>
<li><b>On the density of maximal 1-planar graphs</b>.<br>
<a href="//www.infosun.fmi.uni-passau.de/br/lehrstuhl/Mitarbeiter/Brandenburg/">F. J. Brandenburg</a>,
D. Eppstein,
A. Glei&szlig;ner,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
K. Hanauer, and
J. Reislhuber.<br>
<i>20th Int. Symp. Graph Drawing</i>, Redmond, Washington, 2012.<br>
<a href="//doi.org/10.1007/978-3-642-36763-2_29">Springer, <i>Lecture Notes in Comp. Sci.</i> 7704, 2013, pp. 327&ndash;338</a>.<br>
<p>
A graph is 1-planar if it can be drawn in the plane with at most one
crossing per edge, and maximal 1-planar if it is 1-planar but adding any
edge would force more than one crossing on some edge or edges. Although
maximal 1-planar graphs on <i>n</i> vertices may have as many as
4<i>n</i>&nbsp;&minus;&nbsp;8 edges, we show that there exist maximal
1-planar graphs with as few as 45<i>n</i>/17&nbsp;+&nbsp;O(1) edges.
<p>
<li><b>Combinatorial pair testing: distinguishing workers from slackers</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
and <a href="//www.ics.uci.edu/~dan/">D. S. Hirschberg</a>.<br>
<a href="//arxiv.org/abs/1305.0110">arXiv:1305.0110</a>.<br>
13th Int. Symp. Algorithms and Data Structures (WADS 2013), London, Ontario.<br>
<a href="//doi.org/10.1007/978-3-642-40104-6_28">Springer, <i>Lecture Notes in Comp. Sci. 8037</i>, 2013, pp. 316&ndash;327</a>.<br>
<p>
We study the problem of distinguishing workers (people who complete
their assigned tasks) from slackers (people who do not contribute
towards the completion of their tasks) by grouping people in pairs and
assigning a task to each group.
<p>
<li><b>Set-difference range queries</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.ics.uci.edu/~jsimons/">J. Simons</a>.<br>
<a href="//arxiv.org/abs/1306.3482">arXiv:1306.3482</a>.<br>
<i>25th Canadian Conference on Computational Geometry</i>, Waterloo,
Canada, 2013.
<p>
We show how to use invertible Bloom filters as part of range searching
data structures that determine the differences between the members of two
sets that lie in a given query range.
<p>
(<a href="EppGooSim-CCCG-13-slides.pdf">Slides</a>)
<p>
<li><b>Wear minimization for cuckoo hashing: how not to throw a lot of
eggs into one basket</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.eecs.harvard.edu/~michaelm/">M .Mitzenmacher</a>, and
<a href="//www.ics.uci.edu/~ppszona/">P. Pszona</a>.<br>
<a href="//arxiv.org/abs/1404.0286">arXiv:1404.0286</a>.<br>
<i>Proc. 13th International Symposium on Experimental Algorithms (SEA
2014)</i>, Copenhagen, Denmark, 2014.<br>
<a href="//doi.org/10.1007/978-3-319-07959-2_14">Springer, <i>Lecture Notes in Comp. Sci.</i> 8504, pp. 162&ndash;173, 2014</a>.
<p>
We study cuckoo hashing data structures in a model of flash memory in
which each memory cell has a limited number of times it can be changed,
so the goal is to prevent hot spots that change many times.
<p>
<li><b>The Galois complexity of graph drawing: why numerical solutions are
ubiquitous for force-directed, spectral, and circle packing drawings</b>.<br>
<a href="//michaeljbannister.com/">M. J. Bannister</a>,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//arxiv.org/abs/1408.1422">arXiv:1408.1422</a>.<br>
<i>22nd Int. Symp. Graph Drawing</i>, W&uuml;rzburg, Germany, 2014<br>
<a href="//doi.org/10.1007/10.1007/978-3-662-45803-7_13">Springer, <i>Lecture
Notes in Comp. Sci.</i> 8871, 2014, pp. 149&ndash;161.</a><br>
<a href="//doi.org/10.7155/jgaa.00349"><i>J. Graph Algorithms &
Applications</i> 19 (2): 619&ndash;656, 2015</a>.
<p>
We show that many standard graph drawing methods have algebraic
solutions described by polynomials that can have unsolvable Galois groups,
and that can have Galois groups whose order is divisible by large prime
numbers. As a consequence certain models of exact algebraic computation
are unable to construct these drawings.
<p>
<li><b>Balanced circle packings for planar graphs</b>.<br>
<a href="//www.cs.arizona.edu/~mjalam/">M. J. Alam</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.cs.arizona.edu/~kobourov/">S. Kobourov</a>, and
<a href="//www.cs.arizona.edu/~spupyrev/">S. Pupyrev</a>.<br>
<a href="//arxiv.org/abs/1408.4902">arXiv:1408.4902</a>.<br>
<i>22nd Int. Symp. Graph Drawing</i>, W&uuml;rzburg, Germany, 2014.<br>
<a href="//doi.org/10.1007/978-3-662-45803-7_11">Springer, <i>Lecture
Notes in Comp. Sci.</i> 8871, 2014, pp. 125&ndash;136.</a>
<p>
The balanced circle packings of the title are systems of
interior-disjoint circles, whose tangencies represent the given graph,
and whose radii are all within a polynomial factor of each other.
We show that these packings always exist for trees, cactus graphs,
outerpaths, k-outerplanar graphs of bounded degree when k is at most
logarithmic, and planar graphs of bounded treedepth.
The treedepth result uses a new construction of inversive-distance
circle packings.
<p>
<li><b>Models and algorithms for graph watermarking</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.ics.uci.edu/~jlam2/">J. Lam</a>,
N. Mamano,
<a href="//www.eecs.harvard.edu/~michaelm/">M. Mitzenmacher</a>, and
M. Torres.<br>
<a href="//arxiv.org/abs/1605.09425">arXiv:1605.09425</a>.<br>
<i>Proc. 19th Information Security Conference (ISC 2016)</i>, Honolulu,
Hawaii.<br>
<a href="//doi.org/10.1007/978-3-319-45871-7_18">Springer, <i>Lecture Notes in
Comp. Sci.</i> 9866 (2016), pp. 283&ndash;301</a>.
<p>
We show how to modify a small number of edges in a large social network
in order to make the modified copy easy to identify, even if an
adversary tries to hide the modification by permuting the vertices and
flipping a much larger number of edges. The result depends on the random
fluctuation of vertex degrees in such networks, and the ability to
uniquely identify vertices by their adjacencies to a small number of
high-degree landmark vertices. This paper won the best student paper
award at ISC for its student co-authors Lam, Mamano, and Torres.
<p>
<li><b>Scheduling autonomous vehicle platoons through an unregulated
intersection</b>.<br>
J. Besa,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<i>Proc. 16th Worksh. Algorithmic Approaches for Transportation
Modelling, Optimization and Systems (ATMOS 2016)</i>, Aarhus, Denmark,
2016.<br>
<a href="//doi.org/10.4230/OASIcs.ATMOS.2016.5">OpenAccess Series in Informatics (OASIcs) 54, Schloss
Dagstuhl (2016), pp. 5:1&ndash;5.16</a>.<br>
<a href="//arxiv.org/abs/1609.04512">arXiv:1609.04512</a>.<br>
<p>
We consider a model of vehicle scheduling in which vehicles arrive at an
intersection in indivisible platoons (or individual vehicles of variable
length) and the goal is to find a schedule for them to all cross the
intersection without collisions, minimizing the maximimum delay incurred
by any platoon. We show that for many types of intersections, an optimal
schedule can be found in polynomial time by a combination of dynamic
programming and parametric search.
<p>
<li><b>Algorithms for stable matching and clustering in a grid</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
N. Mamano.<br>
<a href="//arxiv.org/abs/1704.02303">arXiv:1704.02303</a><br>
<i>Proc. 18th International Workshop on Combinatorial Image Analysis
(IWCIA 2017)</i>, Plovdiv, Bulgaria, 2017.<br>
<a href="//doi.org/10.1007/978-3-319-59108-7_10">Springer, <i>Lecture Notes in
Comp. Sci.</i> 10256 (2017), pp. 117&ndash;131</a>.
<p>
Motivated by redistricting, we consider geometric variants of the stable
matching problem in which points (such as the pixels of a discretization
of the unit square) are to be matched to a smaller number of centers
such that each center has the same number of matches and no match is
unstable with respect to Euclidean distances. We show how to solve such
problems in polylogarithmic time per matched point, experiment with
practical heuristics for solving these problems, and test methods for
moving the centers to improve the shape of the matched regions.
<p>
<li><b>2-3 cuckoo filters for faster triangle listing and set intersection</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.eecs.harvard.edu/~michaelm/">M. Mitzenmacher</a>, and
M. Torres.<br>
<a href="//doi.org/10.1145/3034786.3056115"><i>Proc. 36th ACM SIGMOD-SIGACT-SIGAI Symposium on Principles of
Database Systems (PODS 2017)</i>, Chicago, 2017, pp. 247&ndash;260</a>.<br>
<p>
We show that bit-parallel algorithm design techniques, on a machine of
word size <i>w</i>, can speed up the time for sparse set intersection by
a factor of log&nbsp;<i>w</i>/<i>w</i>. The main data structure
underlying our algorithms is the cuckoo filter, a variant of cuckoo hash
tables that has operations similar to a Bloom filter but outperforms
Bloom filters in several respects.
<p>
<li><b>Using multi-level parallelism and 2-3 cuckoo filters for faster
set intersection queries and sparse boolean matrix multiplication</b>.<br>
D. Eppstein and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//doi.org/10.1145/3087556.3087599">Brief announcement, <i>Proc. 29th ACM Symposium on Parallelism in
Algorithms and Architectures (SPAA)</i>, Washington, DC, 2017, pp. 137&ndash;139.</a><br>
<p>
We provide parallel versions of our bit-parallel algorithms from PODS
2017 for sparse set intersection.
<p>
<li><b>Defining equitable geographic districts in road networks via stable matching</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
D. Korkmaz, and
N. Mamano.<br>
<a href="//arxiv.org/abs/1706.09593">arXiv:1706.09593</a><br>
<a href="//doi.org/10.1145/3139958.3140015"><i>Proc. 25th ACM SIGSPATIAL Int. Conf. Advances
in Geographic Information Systems (ACM SIGSPATIAL 2017)</i>,
Redondo Beach, California, pp. 52:1&ndash;52:4</a>.<br>
<p>
We cluster road networks (modeled as planar graphs, or more generally as
graphs obeying a separator theorem) with a given set of cluster centers,
by matching graph vertices to centers stably according to distance: no
unmatched vertex and center should have smaller distances than the
matched pairs for the same points. We provide a separator-based data
structure for dynamic nearest neighbor queries in planar or separated
graphs, which allows the optimal stable clustering to be constructed in
time <i>O</i>(<i>n</i><sup>3/2</sup>log&nbsp;<i>n</i>).
We also experiment with heuristics for fast practical construction of
this clustering.
<p>
<li><b>Quadratic time algorithms appear to be optimal for sorting
evolving data</b>.<br>
J. Besa,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.ics.uci.edu/~tujohnso/">T. Johnson</a>.<br>
<a href="//doi.org/10.1137/1.9781611975055.8"><i>Proc. Algorithm
Engineering &amp; Experiments (ALENEX 2018)</i>, New Orleans, 2018,
pp. 87&ndash;96</a>.<br>
<a href="https://arxiv.org/abs/1805.05443">arXiv:1805.05443</a>.
<p>
We experiment with sorting algorithms in the evolving data model,
in which, at the same time as the algorithm compares pairs of elements
and possibly chooses a new ordering based on the results of the comparison,
an adversary randomly chooses two adjacent elements in the sorted order
and swaps them. As we show, bubble sort and its variants appear to
maintain an order that is within inversion distance of optimal.
<p>
<li><b>Reactive proximity data structures for graphs</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
N. Mamano.<br>
<a href="//arxiv.org/abs/1803.04555">arXiv:1803.04555</a>.<br>
<i>Proc. 13th Latin American Theoretical Informatics Symposium (LATIN
2018)</i>, Buenos Aires, Argentina.<br>
<a href="//doi.org/10.1007/978-3-319-77404-6_56">Springer, <i>Lecture Notes in
Comp. Sci.</i> 10807 (2018), pp. 777&ndash;789</a>.
<p>
We develop data structures for solving nearest neighbor queries for
dynamic subsets of vertices in a planar graph, or more generally for a
graph in any graph class with small separators (polynomial expansion).
<p>
<li><b>Subexponential-time and FPT algorithms for embedded flat clustered
planarity</b>.<br>
G. Da Lozzo,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
S. Gupta.<br>
<a href="//arxiv.org/abs/1803.05465">arXiv:1803.05465</a><br>
<i>Proc. 44th International Workshop on Graph-Theoretic Concepts in
Computer Science (WG 2018)</i>, L&uuml;bbenau, Germany.<br>
<a href="//doi.org/10.1007/978-3-030-00256-5_10">Springer, <i>Lecture Notes in
Comp. Sci.</i> 11159 (2018), pp. 111&ndash;124</a>.
<p>
Clustered planarity is the problem of simultaneously drawing a planar
graph and a clustering of its vertices (as Jordan curves surrounding the
cluster) with no unnecessary crossings between edges or cluster
boundaries; it remains unknown whether it can be solved in polynomial time.
We provide parameterized and subexponential exact algorithms for the
case where the planar embedding is fixed and the clusters form a
partition of the vertices.
<p>
<li><b>Stable-matching Voronoi diagrams:
combinatorial complexity and algorithms</b>.<br>
<a href="//www.cs.technion.ac.il/~barequet/">G. Barequet</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
N. Mamano.<br>
<a href="//arxiv.org/abs/1804.09411">arXiv:1804.09411</a><br>
<i>Proc. 45th International Colloquium on Automata, Languages, and
Programming (ICALP 2018)</i>, Prague.<br>
<a href="//doi.org/10.4230/LIPIcs.ICALP.2018.89">Leibniz International
Proceedings in Informatics (LIPIcs) 107, pp. 89:1&ndash;89:14</a>.<br>
<p>
The stable-matching Voronoi diagram of a collection of point sites in
the plane, each with a specified area, is a collection of disjoint
regions of the plane, one for each site and having the specified area,
so that no pair of a point and a site are closer to each other than to
the farthest other site and point that they may be matched to.
We prove nearly-matching upper and lower bounds on the combinatorial
complexity of these diagrams and provide algorithms that can compute them
in a polynomial number of primitive steps.
<p>
<li><b>Optimally sorting evolving data</b>.<br>
J. Besa,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
T. Johnson.<br>
<a href="//arxiv.org/abs/1805.03350">arXiv:1805.03350</a><br>
<i>Proc. 45th International Colloquium on Automata, Languages, and
Programming (ICALP 2018)</i>, Prague.<br>
<a href="//doi.org/10.4230/LIPIcs.ICALP.2018.81">Leibniz International Proceedings in Informatics (LIPIcs) 107, pp. 81:1&ndash;81:13</a>.<br>
<p>
Suppose that a collection of objects has a linear order that is evolving
by swaps of randomly chosen consecutive elements. We would like to
maintain an approximation to this order using an algorithm that performs
one comparison per swap. We show that repeated insertion sort can
maintain linear inversion distance from the underlying order, the best
possible.
<p>
<li><b>Geometric fingerprint matching via
oriented point-set pattern matching</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
J. Jorgensen, and
M. Torres.<br>
<a href="//arxiv.org/abs/1808.00561">arXiv:1808.00561</a><br>
<a href="http://www.cs.umanitoba.ca/~cccg2018/papers/proceedings.pdf"><i>Proc. 30th Canadian Conference on
Computational Geometry</i>, Winnepeg, Canada, 2018, pp. 98&ndash;113</a>.<br>
<p>
When matching fingerprints, the data involves planar points each of
which has an associated direction. Motivated by this application, we
consider point matching problems
in which the distance between points combines both their translational
distance and the rotation needed to make their directions align.
We provide fast and simple approximation schemes for matching oriented
point sets under the directed Hausdorff distance with different allowed
groups of transformations.
<p>
</ul>

<hr><p>
<a href="auth.html">Co-authors</a> &ndash;
<a href="/~eppstein/pubs/">Publications</a> &ndash;
<a href="/~eppstein/">David Eppstein</a> &ndash;
<a href="/~theory/">Theory Group</a> &ndash;
<a href="/">Inf. &amp; Comp. Sci.</a> &ndash;
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ