¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue†¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueC860¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXSun, 11 Mar 2018 02:01:57 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"35c-5671968ffef40"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 19:20:48 GMTKraw_content¢DtypeEvalueY\# test_songs.py


from songs import Song, SongCollection
import unittest



class SongCollectionTest(unittest.TestCase):
    def setUp(self):
        self._collection = SongCollection()


    def test_new_collections_have_size_zero(self):
        self.assertEqual(self._collection.size(), 0)


    def test_after_adding_one_song_to_a_collection__size_is_1(self):
        self._collection.add(self._create_test_song())
        self.assertEqual(self._collection.size(), 1)


    def test_continuing_to_add_songs_continues_to_increase_size(self):
        for song_count in range(1, 101):
            self._collection.add(self._create_test_song())
            self.assertEqual(self._collection.size(), song_count)


    def _create_test_song(self) -> Song:
        return Song()



if __name__ == '__main__':
    unittest.main()
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ