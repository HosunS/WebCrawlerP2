¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE25619¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueX°trac_form_token=67003c1545401b92276066d5; httponly; Path=/wiki/public, trac_session=14fb0006e682d5861a4de06a; expires=Thu, 09 May 2019 21:25:52 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueGExpiresAv¢DtypeEvalueXFri, 01 Jan 1999 00:00:00 GMT¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueMCache-ControlAv¢DtypeEvalueOmust-revalidate¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 21:25:52 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueWtext/html;charset=utf-8Kraw_content¢DtypeEvalueYd<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

    <html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      cs122b-2019-winter-project2 (diff) â€“ Public
    </title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/wiki/public/search" />
        <link rel="help" href="/wiki/public/wiki/TracGuide" />
        <link rel="up" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=history" title="Page history" />
        <link rel="next" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=18" title="Version 18" />
        <link rel="start" href="/wiki/public/wiki" />
        <link rel="stylesheet" href="/wiki/public/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/diff.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/tracwysiwyg/editor.css" />
        <link rel="tracwysiwyg.base" href="/wiki/public" />
        <link rel="prev" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=16" title="Version 16" />
        <link rel="shortcut icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
    <style id="trac-noscript" type="text/css">.trac-noscript { display: none !important }</style>
    <script type="text/javascript">
      var _tracwysiwyg={};
    </script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/jquery.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/babel.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/trac.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/search.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/diff.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/tracwysiwyg/wysiwyg.js"></script>
    <script type="text/javascript">
      jQuery("#trac-noscript").remove();
      jQuery(document).ready(function($) {
        $(".trac-autofocus").focus();
        $(".trac-target-new").attr("target", "_blank");
        setTimeout(function() { $(".trac-scroll").scrollToTop() }, 1);
        $(".trac-disable-on-submit").disableOnSubmit();
      });
    </script>
    <link rel="stylesheet" type="text/css" href="/wiki/public/chrome/common/css/diff.css" />
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW" />
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.ics.uci.edu/"><img src="/wiki/public/chrome/site/ics.jpg" alt="ICS Logo" height="67" width="128" /></a>
      </div>
      <form id="search" action="/wiki/public/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/wiki/public/login">Login</a></li><li><a href="/wiki/public/prefs">Preferences</a></li><li class="last"><a href="/wiki/public/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
        <ul>
          <li class="first"><span>&larr; <a class="prev" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=16" title="Version 16">Previous Change</a></span></li><li><a href="/wiki/public/wiki/cs122b-2019-winter-project2?action=history" title="Page history">Wiki History</a></li><li class="last"><span><a class="next" href="/wiki/public/wiki/cs122b-2019-winter-project2?action=diff&amp;version=18" title="Version 18">Next Change</a> &rarr;</span></li>
        </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
      <h1>
        Changes between
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=16">Version 16</a> and
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=17">Version 17</a> of
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2">cs122b-2019-winter-project2</a>
      </h1>
      <form method="post" id="prefs" action="/wiki/public/wiki/cs122b-2019-winter-project2?version=17"><div><input type="hidden" name="__FORM_TOKEN" value="67003c1545401b92276066d5" /></div>
        <div>
          <input type="hidden" name="action" value="diff" />
          <input type="hidden" name="version" value="17" />
          <input type="hidden" name="old_version" value="16" />
          
  <label for="style">View differences</label>
  <select id="style" name="style">
    <option selected="selected" value="inline">inline</option>
    <option value="sidebyside">side by side</option>
  </select>
  <div class="field">
    <label><input type="radio" name="contextall" value="0" checked="checked" />
             Show</label>
      <label><input type="text" name="contextlines" id="contextlines" size="2" maxlength="3" value="2" />
             lines around each change</label><br />
    <label><input type="radio" name="contextall" value="1" />
           Show the changes in full context</label>
  </div>
  <fieldset id="ignore">
    <legend>Ignore:</legend>
    <div class="field">
      <input type="checkbox" id="ignoreblanklines" name="ignoreblanklines" />
      <label for="ignoreblanklines">Blank lines</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorecase" name="ignorecase" />
      <label for="ignorecase">Case changes</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorewhitespace" name="ignorewhitespace" />
      <label for="ignorewhitespace">White space changes</label>
    </div>
  </fieldset>
  <div class="buttons">
    <input type="submit" name="update" value="Update" />
  </div>

        </div>
      </form>
      <dl id="overview">
        <dt class="property time">Timestamp:</dt>
        <dd class="time">
            Jan 18, 2019 8:38:23 PM (<a class="timeline" href="/wiki/public/timeline?from=2019-01-18T20%3A38%3A23-08%3A00&amp;precision=second" title="See timeline at Jan 18, 2019 8:38:23 PM">3 weeks</a> ago)
        </dd>
        <dt class="property author">Author:</dt>
        <dd class="author">
          dayueb
        </dd>
        <dt class="property message">Comment:</dt>
        <dd class="message">
          
          <p>
--
</p>

        </dd>
      </dl>
      <div class="diff">
        <div class="legend" id="diff-legend">
          <h3>Legend:</h3>
          <dl>
            <dt class="unmod"></dt><dd>Unmodified</dd>
            <dt class="add"></dt><dd>Added</dd>
            <dt class="rem"></dt><dd>Removed</dd>
            <dt class="mod"></dt><dd>Modified</dd>
          </dl>
        </div>
        <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2 id="file0">
          <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=17">cs122b-2019-winter-project2</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Version 16">
                    <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=16#L98">
                      v16</a>
                  </th>
                  <th title="Version 17">
                    <a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=17#L98">
                      v17</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>98</th><th>98</th><td class="l"><span>== Examples ==</span></td>
                  </tr><tr>
                          <th>99</th><th>99</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="first">
                          <th>100</th><th>Â </th><td class="l"><del>'''GET API example'''</del></td>
                  </tr><tr>
                          <th>101</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>102</th><th>Â </th><td class="l"><del>Here's the same API example as in Project 1: [https://github.com/UCI-Chenli-teaching/project1-api-example project1-api-example] that uses frontend &amp; backend separation approach to show a list of stars.&nbsp; Note starting with this example we use !DataSource managed by Tomcat, thus we don't have to set database information in each servlet. To config a !DataSource, following tutorial here&nbsp; https://tomcat.apache.org/tomcat-8.0-doc/jndi-datasource-examples-howto.html&nbsp; Follow the instruction on README.md to deploy and test the examples on tomcat.</del></td>
                  </tr><tr>
                          <th>103</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>104</th><th>Â </th><td class="l"><del>'''POST API example'''</del></td>
                  </tr><tr>
                          <th>105</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>106</th><th>Â </th><td class="l"><del>Here's an example [https://github.com/UCI-Chenli-teaching/2019w-project2-login-example project2-login-example] to show you how to implement the login feature using the new frontend-backend-separation design. Follow the instruction on README.md to deploy and test the examples on tomcat.</del></td>
                  </tr><tr>
                          <th>107</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>108</th><th>Â </th><td class="l"><del>[[Span(id=FormExample)]]</del></td>
                  </tr><tr>
                          <th>109</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>110</th><th>Â </th><td class="l"><del>'''Form example'''</del></td>
                  </tr><tr>
                          <th>111</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>112</th><th>Â </th><td class="l"><del>The HTML &lt;form&gt; element defines a form that is used to collect user input.</del></td>
                  </tr><tr>
                          <th>113</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>114</th><th>Â </th><td class="l"><del>Form elements are different types of input elements, like text fields, checkboxes, radio buttons, submit buttons, and more.</del></td>
                  </tr><tr>
                          <th>115</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>116</th><th>Â </th><td class="l"><del>Here's an example [https://github.com/UCI-Chenli-teaching/2019w-project2-form-example project2-form-example] to show you how to implement an HTML &lt;form&gt; to send user search query to the backend, and display the search result within an HTML &lt;table&gt;.</del></td>
                  </tr><tr>
                          <th>117</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>118</th><th>Â </th><td class="l"><del>Follow the instruction on README.md to deploy the example on tomcat.&nbsp; Click the link http://localhost:8080/project2-form-example,&nbsp; then enter the search entry and click the "Submit Order" button.&nbsp; It will take the value in the "Last Name" box to query a backend credit card table to retrieve records with that last name.</del></td>
                  </tr><tr>
                          <th>119</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>120</th><th>Â </th><td class="l"><del>Note: In the project2-form-example, we used `@WebServlet` annotation to declare the configuration of a Servlet `FormServlet` right on top of class Form definition. This is a relatively new feature supported since Servlet 3.0. In order to scan web.xml properly with Servlet 3.0 or newer, you will need to modify the web.xml as followed:</del></td>
                  </tr><tr>
                          <th>121</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>122</th><th>Â </th><td class="l"><del>{{{</del></td>
                  </tr><tr>
                          <th>123</th><th>Â </th><td class="l"><del>&lt;web-app </del></td>
                  </tr><tr>
                          <th>124</th><th>Â </th><td class="l"><del>&nbsp; &nbsp; xmlns="http://java.sun.com/xml/ns/javaee"</del></td>
                  </tr><tr>
                          <th>125</th><th>Â </th><td class="l"><del>&nbsp; &nbsp; xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</del></td>
                  </tr><tr>
                          <th>126</th><th>Â </th><td class="l"><del>&nbsp; &nbsp; xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</del></td>
                  </tr><tr>
                          <th>127</th><th>Â </th><td class="l"><del>&nbsp; &nbsp; version="3.0"&gt;</del></td>
                  </tr><tr>
                          <th>128</th><th>Â </th><td class="l"><del>}}}</del></td>
                  </tr><tr>
                          <th>129</th><th>Â </th><td class="l"><del>For more information:</del></td>
                  </tr><tr>
                          <th>130</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>131</th><th>Â </th><td class="l"><del>&nbsp;* [https://stackoverflow.com/questions/6535676/webservlet-annotation-with-tomcat-7 @WebServlet annotation with Tomcat]</del></td>
                  </tr><tr>
                          <th>132</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>133</th><th>Â </th><td class="l"><del>[[Span(id=ServletSession)]]</del></td>
                  </tr><tr>
                          <th>134</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>135</th><th>Â </th><td class="l"><del>'''Servlet session examples'''</del></td>
                  </tr><tr>
                          <th>136</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>137</th><th>Â </th><td class="l"><del>Session provides a way to identify a user across more than one page request or visit a website and to store information about that user.</del></td>
                  </tr><tr>
                          <th>138</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>139</th><th>Â </th><td class="l"><del>The servlet container uses this interface to create a session between an HTTP client and an HTTP server. The session persists for a specified time period, across more than one connection or page request from the user. A session usually corresponds to one user, who may visit a site many times. The server can maintain a session in many ways such as using cookies or rewriting URLs.</del></td>
                  </tr><tr>
                          <th>140</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>141</th><th>Â </th><td class="l"><del>Here's an example [https://github.com/UCI-Chenli-teaching/2019w-project2-session-example project2-session-example] to show you two session usages.</del></td>
                  </tr><tr>
                          <th>142</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>143</th><th>Â </th><td class="l"><del>Follow the instruction on README.md to deploy the example on tomcat. And then click the following two URLs:</del></td>
                  </tr><tr>
                          <th>144</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>145</th><th>Â </th><td class="l"><del>&nbsp;* http://localhost:8080/project2-session-example/session?myname=Michael [[BR]]</del></td>
                  </tr><tr>
                          <th>146</th><th>Â </th><td class="l"><del>&nbsp;* http://localhost:8080/project2-session-example/items?newItem=DVD [[BR]]</del></td>
                  </tr><tr>
                          <th>147</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>148</th><th>Â </th><td class="l"><del>[[Span(id=JSP)]]</del></td>
                  </tr><tr>
                          <th>149</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>150</th><th>Â </th><td class="l"><del>'''JSP example (Optional)'''</del></td>
                  </tr><tr>
                          <th>151</th><th>Â </th><td class="l"><del>An alternative technology to use is JSP (Java Servlet Pages). JSP is old technology, but it's still very handy to use. Normal Java Servlet lets you write HTML string in the print statements in Java, which is clumsy. JSP enables you to conveniently write Java code inside HTML.</del></td>
                  </tr><tr>
                          <th>152</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>153</th><th>Â </th><td class="l"><del>Here's an example [https://github.com/UCI-Chenli-teaching/2019w-project2-jsp-example project2-jsp-example] that generates the HTML page with JSP, similar to the project1-star-example.</del></td>
                  </tr><tr>
                          <th>154</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>155</th><th>Â </th><td class="l"><del>Follow the instruction on README.md to deploy the example on tomcat.&nbsp; Then click:</del></td>
                  </tr><tr>
                          <th>156</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>157</th><th>Â </th><td class="l"><del>&nbsp; http://localhost:8080/project2-jsp-example/index.jsp</del></td>
                  </tr><tr>
                          <th>158</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>159</th><th>Â </th><td class="l"><del>which will activate the JSP page.&nbsp; It will talk to your local MySQL database.</del></td>
                  </tr><tr>
                          <th>160</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>161</th><th>Â </th><td class="l"><del>To learn more about JSP using examples, check:</del></td>
                  </tr><tr>
                          <th>162</th><th>Â </th><td class="l"><del></del></td>
                  </tr><tr>
                          <th>163</th><th>Â </th><td class="l"><del>&nbsp;* http://www.easywayserver.com/jsp/JSP-example.htm</del></td>
                  </tr><tr>
                          <th>164</th><th>Â </th><td class="l"><del>&nbsp;* https://www.guru99.com/jsp-tutorial.html</del></td>
                  </tr><tr class="last">
                          <th>165</th><th>Â </th><td class="l"><del></del></td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>166</th><th>100</th><td class="l"><span>----</span></td>
                  </tr><tr>
                          <th>167</th><th>101</th><td class="l"><span>[[Span(id=DeploymentOnAWS)]]</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=16#L170">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=17#L104">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>170</th><th>104</th><td class="l"><span>Use Github for your project 2 code and deploy on AWS, similar to what you have done in project 1.</span></td>
                  </tr><tr>
                          <th>171</th><th>105</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>172</th><th>Â </th><td class="l"><span>a) Your submission is based on commits that pushed to '''github master branch'''. Make sure the file on <del>gith</del>ub master branch is what you want to submit. We are '''NOT''' looking at local git commits. We are '''NOT''' looking at commits on other branches</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>106</th><td class="r"><span>a) Your submission is based on commits that pushed to '''github master branch'''. Make sure the file on <ins>GitH</ins>ub master branch is what you want to submit. We are '''NOT''' looking at local git commits. We are '''NOT''' looking at commits on other branches</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>173</th><th>107</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>174</th><th>108</th><td class="l"><span>b) Make sure that if you git clone your project to a new environment, it will run correctly, especially on AWS, because you will clone a version to AWS instance and demo with it.</span></td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=16#L178">â€¦</a></th>
                  <th><a href="/wiki/public/wiki/cs122b-2019-winter-project2?version=17#L112">â€¦</a></th>
                  <td>Â </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>178</th><th>112</th><td class="l"><span>d) '''Do not use the upload file feature in Github to submit your codebase.'''</span></td>
                  </tr><tr>
                          <th>179</th><th>113</th><td class="l"><span></span></td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>180</th><th>Â </th><td class="l"><span>e) We will run a script to get the '''LAST''' commit on '''github master branch''' within 24 hours after the due time (grace period).&nbsp; If you want to use the grace period (with 10 points marked), you can keep pushing commits to GitHub within 24 hours.&nbsp; If you do not want to use grace period, '''DO NOT''' push any commits to <del>gith</del>ub until the grace period is passed. You can keep editing and commit locally if you want though.</span></td>
                      </tr>
                      <tr class="last">
                        <th>Â </th><th>114</th><td class="r"><span>e) We will run a script to get the '''LAST''' commit on '''github master branch''' within 24 hours after the due time (grace period).&nbsp; If you want to use the grace period (with 10 points marked), you can keep pushing commits to GitHub within 24 hours.&nbsp; If you do not want to use grace period, '''DO NOT''' push any commits to <ins>GitH</ins>ub until the grace period is passed. You can keep editing and commit locally if you want though.</span></td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>181</th><th>115</th><td class="l"><span></span></td>
                  </tr><tr>
                          <th>182</th><th>116</th><td class="l"><span>f) Any commits pushed to GitHub after grace period will be ignored.</span></td>
                  </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
      </div>
  </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/wiki/public/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/wiki/public/about"><strong>Trac 1.0.13</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ