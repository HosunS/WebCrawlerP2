¦Ifinal_url¢DtypeEvaluex@https://www.ics.uci.edu/~thornton/ics32a/ProjectGuide/Project0A/Lhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE11173¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXMon, 02 Oct 2017 18:03:00 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueT"2ba5-55a942f62f8de"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 01 Feb 2019 10:10:32 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY+¥<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC
 "-//W3C//DTD XHTML 1.1//EN"
 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">

<head>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" href="../../course.css" type="text/css" />

<title>ICS 32A Fall 2017, Project #0A: The Morning After the Night Before</title>
</head>

<body>

<div class="navbar">

<p>
ICS 32A Fall 2017 |
<a href="../../index.html">News</a> |
<a href="../../CourseReference.html">Course Reference</a> |
<a href="../../Schedule.html">Schedule</a> |
<a href="../../ProjectGuide">Project Guide</a> |
<a href="../../Notes">Notes and Examples</a> |
<a href="http://www.ics.uci.edu/~thornton/">About Alex</a>
</p>

<hr />

</div>

<div class="header">

<p>ICS 32A Fall 2017<br />
   Project #0A: <i>The Morning After the Night Before</i></p>

</div>

<div class="section">

<p class="center"><b>Due date and time:</b> <i>Wednesday, October 4, 11:59pm</i></p>

<p class="center"><i>This project is to be done individually</i></p>

</div>

<div class="section">

<hr />

<p class="title">Introduction</p>

<p>One of the core assumptions of this course is that you've taken an introductory programming course in some programming language before, but that the language was something other than Python.  For some of you, it may have been a while since you last wrote a program, so a good way to hit the ground running this quarter is to flex the muscles you built previously, by solving some small-scale problems in a language that you're already familiar with.  Of course, not all of you have the same background, so we'll allow you to choose any language you prefer for this task, with the only caveat being that it <i>cannot be Python</i>.</p>

</div>

<div class="section">

<hr />

<p class="title">The problems</p>

<p>This project consists of eight problems that you'll be asked to solve.  Choose <i>one</i> programming language with which to solve them; you are not permitted to use different languages for different problems.  There are no rules about what you can choose, except that the language can't be Python; examples of languages you could choose include Java, C++, C, JavaScript, Ruby, C#, Visual Basic, Scheme, Racket, or Haskell, though you're certainly not limited only to those choices.  Use what you're familiar with and, as long as you avoid Python, anything goes.</p>

<p>For each problem, write a single function, method, procedure, subroutine, etc., that can be called to solve it.  (Different programming languages name this particular concept differently, but they basically all have something like it.)  You can feel free to define additional helpers that assist in the solution to each, but the problems are small enough that they don't necessarily need them.  Make clear, though, using comments or naming conventions, which parts of your submission solve which problems, so we can quickly determine which ones you've attempted.</p>

<p>You'll notice that the problems are defined a little bit loosely in some cases, mainly because we're allowing enough flexibility here &mdash; since you can choose any programming language other than Python &mdash; that we can't nail them down any more carefully than this.  The goal, in general, is to consider the spirit of each problem, not to stress too much about the tiny details of how they're worded.  None of the problems is intended to be a trick, and each is intended to flex a particular muscle that you will have likely built previously, and are definitely going to need again in this course.  Avoid pre-built solutions (e.g., functions or methods you would find in a standard library like the one included with Java or C++) that solve the problem simply by calling the solution that exists; the point of this exercise is to be sure that you're able to solve these problems on your own from first principles.  (Again, keep in mind the spirit of what we're doing here; this is to make sure you're back in the swing of things before you work on new material in Python.)</p>

<p class="subtitle">Problem 1</p>

<p>Given two numbers, representing the width and the height of a right triangle, 
calculate the <i>perimeter</i> of the triangle (i.e., the sum of the lengths of 
all three of its sides).</p>

<p class="subtitle">Problem 2</p>

<p>Given two strings of text, calculate their <i>concatenation</i> and return it as a separate string of text.  The concatenation of two strings is a string that contains all of the characters in the first string, followed by all of the characters in the second.  For example, the concatenation of <b>boo</b> and <b>lean</b> is <b>boolean</b>.</p>

<p>(Whenever these problems refer to a "string of text," I'm referring to a sequence of individual characters.  Choose an implementation that is appropriate for the language you chose.  For example, in Java, you would use a <b>String</b>; in C++, you might use a <b>std::string</b> or a <b>char*</b>; and so on.)</p>

<p class="subtitle">Problem 3</p>

<p>Separately read two pieces of input from a user, which are intended to be both a name and an age (in years).  Afterward, print the output <b>Your name is <i>XXX</i> and you are <i>YYY</i> years old</b>, where <b><i>XXX</i></b> is the name and <b><i>YYY</i></b> is the number of years old.  So, for example, if the name was given as <b>Boo</b> and the age was given as <b>11</b>, you would print <b>Your name is Boo and you are 11 years old</b>.  Note, too, that you should finish that sentence with <b>1 year old</b> instead of <b>1 years old</b> if the age is 1.</p>

<p>(Whenever these problems refer to reading input from a user, you'll need to handle that in a way that is appropriate for the language you chose.  For example, in Java, you might use a Scanner; in C++, you might use <b>std::cin</b>; in C, you might use <b>scanf</b>; and so on.)</p>

<p class="subtitle">Problem 4</p>

<p>Given a list of numbers, compute its sum.</p>

<p>(Whenever these problems refer to a "list", I'm referring to a sequence that may have an arbitrary number of values in it.  Choose an implementation that is appropriate for the language you chose.  For example, in Java, you might use an <b>ArrayList</b> or an array; in C++, you might use a <b>std::vector</b> or an array; and so on.)</p>

<p class="subtitle">Problem 5</p>

<p>Given a list containing strings of text, determine the longest string (i.e., the string that contains the largest number of characters).</p>

<p class="subtitle">Problem 6</p>

<p>Read input from a user that is intended to consist of a license number (such as a driver's license number).  If the input is not a valid license number, then ask again, and continue asking until the input is valid.</p>

<p>We'll say, for the purposes of this problem, that a license number must follow these rules in order to be valid:</p>

<ul>
  <li>It must consist only of uppercase letters and digits; anything else (including spaces) would make it invalid.</li>
  <li>The first and last characters must be uppercase letters.</li>
  <li>There must be at least one digit (and any number of uppercase letters) in between.</li>
</ul>

<p>By these rules, the following are all valid license numbers: <b>A123B</b>, <b>ABC1DEF</b>, <b>A1B2C3D4E</b>.  These would all be invalid: <b>A123</b>, <b>123B</b>, <b>ABCDEF</b>, <b>A1B2C3D4</b>.</p>

<p class="subtitle">Problem 7</p>

<p>Given a string of text and a character to search for, count the number of times that the search character occurs in that string.  For example, in the string <b>Boo is not boolean</b>, the search character <b>o</b> appears five times, while the search character <b>b</b> appears once (because upper- and lowercase are considered distinct).</p>

<p class="subtitle">Problem 8</p>

<p>Given a string of text, determine whether it is a <i>palindrome</i>.  A palindrome is text that consists of letters that would look the same whether you printed them in order or in reverse order.  So, for example, <b>HANNAH</b> is a palindrome, but <b>HELLO HELLO</b> is not.</p>

<p class="subtitle">How we will grade your submission</p>

<p>Unlike other projects, this project will be graded on a 2-point scale, with the 2 points being allocated completely to whether or not you submitted an honest attempt at each of the problems above.  Since there are eight problems, we'll allocate 0.25 points to each of them, with no partial credit available (or, really, necessary; either it's an honest attempt or it's not).</p>

<p>With the wide variety of possible submissions, since we're allowing you to use any programming language you'd like, we'll be looking at your solutions but not thoroughly testing them.  Honest attempts will be accepted even if not entirely correct.  Note that this is quite different from how we'll be grading most of your work in this course, but given that the goal here is to get warmed up, we'll cast a less scrutinizing eye on this one.</p>

</div>

<div class="section">

<hr />

<p class="title">Deliverables</p>

<p>Follow <a href="../SubmittingProjects.html">this link</a> for a discussion of how to submit your project via Checkmate.  Be aware that I'll be holding you to all of the rules specified in that document, including the one that says that you're responsible for submitting the version of the project that you want graded.  We won't regrade a project simply because you submitted the wrong version accidentally.</p>

<p class="subtitle">What to submit</p>

<p>Submit only your source code, but no additional files generated by any kind of development environment &mdash; project files, build scripts, or the like.  For example, if you wrote your solutions in Java, a single <b>.java</b> file will suffice.</p>

<p class="subtitle">Can I submit after the deadline?</p>

<p>This project is not included in the late work policy for this course.  The objective is not just that you do this one, but that you do it early enough to be of benefit, so it needs to be completed during the initial days of the course and submitted before the due date above.  Submissions beyond that deadline will not be considered.</p>

<p>The late work policy for this course &mdash; which does not apply to this project, but applies to all of the others &mdash; is described in the section titled <i>Late work</i> at <a href="../index.html">this link</a>.</p>

<p class="subtitle">Should I submit if I'm not enrolled yet?</p>

<p>If you're on the waitlist for the course and intending to enroll if given the chance, you'll still need to submit this project on time.  You can register yourself in Checkmate even if you're not enrolled in the course.  Follow <a href="../SubmittingProjects.html">this link</a> for a discussion of how to submit your project via Checkmate.</p>

</div>

<div class="history">

<hr />

<ul class="nomarker">
  <li>Originally written by Alex Thornton, Fall 2017.</li>
</ul>

</div>

</body>
</html>
Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ