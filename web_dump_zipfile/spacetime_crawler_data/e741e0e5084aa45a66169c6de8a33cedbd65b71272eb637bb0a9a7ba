¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue†¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1758¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXTue, 06 May 1997 20:21:55 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"6de-310d93b103ec0"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXSun, 03 Feb 2019 17:23:32 GMTKraw_content¢DtypeEvalueYß// SchÅ¡nhardt Polyhedron
#include "colors.inc"	// Standard Color definitions
#include "textures.inc"	// Standard Texture definitions

camera
{
  location  <0.0 , 2 ,-4.5>
  look_at   <0.0 , 0.0 , 0.0>
  right x
}

// create a regular point light source
light_source
{
  0*x // light's position (translated below)
  color red 1.5  green 1.0  blue 1.0  // light's color
  translate <-10, 20, -5>
}
light_source
{
  0*x // light's position (translated below)
  color red 1.0  green 1.5  blue 1.0  // light's color
  translate <0, 20, -15>
}
light_source
{
  0*x // light's position (translated below)
  color red 1.0  green 1.0  blue 1.5  // light's color
  translate <10, 20, -5>
}

// Light gray ground plane
plane
{
  y, -1.0
  texture {
    pigment { color rgb <0.6,0.6,0.6> }
    finish { reflection 0.2 }
  }
}

// Create an infinite sphere around scene and allow any texture on it
sky_sphere
{
  pigment
  {
    gradient y
    color_map { [0.0 color blue 0.6] [1.0 color rgb 1] }
  }
}

#declare ytop=1.5

// triangle or smooth-triangle mesh FINITE (no CSG) shape
// NOTE: Each triangle can be independently textured,
//       remaining triangles get texture at bottom
mesh
{
  triangle { <-2, ytop, 0>, <1, ytop, sqrt(3)>, <1,ytop,-sqrt(3)> }
  triangle { <0, -1, 2>, <sqrt(3), -1, -1>, <-sqrt(3), -1, -1> }
  triangle { <-2, ytop, 0>, <1, ytop, sqrt(3)>, <-sqrt(3), -1, -1> }
  triangle { <1, ytop, sqrt(3)>, <1,ytop,-sqrt(3)>, <0, -1, 2> }
  triangle { <-2, ytop, 0>, <1,ytop,-sqrt(3)>, <sqrt(3), -1, -1> }
  triangle { <0, -1, 2>, <-sqrt(3), -1, -1>, <1, ytop, sqrt(3)> }
  triangle { <sqrt(3), -1, -1>, <-sqrt(3), -1, -1>, <-2, ytop, 0> }
  triangle { <0, -1, 2>, <sqrt(3), -1, -1>, <1,ytop,-sqrt(3)> }
  texture { Spun_Brass }
  rotate 6*clock*y
}
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ