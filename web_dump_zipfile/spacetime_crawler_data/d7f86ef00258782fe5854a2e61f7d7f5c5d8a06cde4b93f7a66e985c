¦Ifinal_url¢DtypeEvaluex0https://www.ics.uci.edu/~eppstein/pubs/1992.htmlLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD8570¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 18 Jan 2019 21:54:47 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"735b-57fc28f43e7b4-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 01 Feb 2019 01:04:45 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYs[<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
1992
</h2>
Note that a paper may appear in listings for multiple years
due to multiple publication (of tech. report, conference, and journal versions).
<p>
<ul>
<li><b>Fast optimal parallel algorithms for maximal matching in sparse graphs</b>.<br>
H. Asuri, <a href="/~dillenco/">M. Dillencourt</a>, D. Eppstein, 
<a href="//www.ics.uci.edu/~lueker/">
G. Lueker</a>, and M. Molodowitch.<br>
Tech. Rep. 92-01, ICS, UCI, 1992.
<p>
We later discovered that the same results were published
in a SPAA paper by Greg Shannon.
<p>(<a href="/~eppstein/bibs/eppstein.html#Fast optimal parallel algorithms for maximal matching in sparse graphs">BibTeX</a>)
<p>
<li><b>Sets of points with many halving lines</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-92-86.pdf">Tech. Rep. 92-86</a>, ICS, UCI, 1992.
<p>
I used genetic algorithms to search for small configurations of points
bisected by lines in many combinatorially distinct ways.
<p>(<a href="/~eppstein/bibs/eppstein.html#Sets of points with many halving lines">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Sets-of-points-with-many-halving-lines.html">Citations</a>)
<p>
<li><b>Finding minimum area <i>k</i>-gons</b>.<br>
D. Eppstein, 
<a href="//www.cs.ruu.nl/people/markov/">
M. Overmars</a>,
<a href="//page.mi.fu-berlin.de/rote/">G. Rote</a>, and 
<a href="//www.opt.math.tu-graz.ac.at/woe/">
G. Woeginger</a>.<br>
<a href="EppOveRot-DCG-92.pdf"><i>Disc. Comp. Geom.</i> 7 (1): 45&ndash;58, 1992</a>.
<p>
Uses dynamic programming to choose sets of <i>k</i>
points optimizing various criteria on the quality of their convex hull
(in particular area).  The time complexity (cubic in <i>n</i>)
was later improved to quadratic in
my paper
"<a href="p-kgon.html">New algorithms for minimum area <i>k</i>-gons</a>",
which however continues to use the same dynamic program as a subroutine.
<p>(<a href="/~eppstein/bibs/eppstein.html#Finding minimum area $k$-gons">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Finding-minimum-area-k-gons.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein92finding.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=149124">ACM DL</a>)
<p>
<li><b>Simultaneous strong separations of
probabilistic and unambiguous complexity classes</b>.<br>
D. Eppstein,
<a href="//www.cs.rochester.edu/u/lane/">
L. Hemachandra</a>, J. Tisdall, and B. Yener.<br>
<i>Int. Conf. Computing and Information,</i> Toronto,
North-Holland, 1989, pp. 65&ndash;70.<br>
Tech. Rep. 335, Dept. Comp. Sci., U. Rochester, 1990.<br>
<a href="EppHemTis-MST-92.pdf"><i>Mathematical Systems Theory</i> 25 (1): 23&ndash;36, 1992</a>.
<p>
Structural complexity theory.
Constructs oracles in which BPP (a probabilistic complexity class)
and UP (the class of problems with a unique "witness")
contain languages that in a very strong sense are not contained in the
other class.
The conference version used the title
"Probabilistic and unambiguous computation are incomparable".
<p>(BibTeX: <a href="/~eppstein/bibs/eppstein.html#Probabilistic and unambiguous computation are incomparable">ICCI</a>,
<a href="/~eppstein/bibs/eppstein.html#Simultaneous strong separations of probabilistic and unambiguous complexity classes">MST</a> &ndash;
Citations:
<a href="//fano.ics.uci.edu/cites/Document/Probabilistic-and-unambiguous-computation-are-incomparable.html">ICCI</a>,
<a href="//fano.ics.uci.edu/cites/Document/Simultaneous-strong-separations-of-probabilistic-and-unambiguous-complexity-classes.html">MST</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein92simultaneous.html">CiteSeer</a>)
<p>
<li><b>Maintenance of a minimum spanning forest in a dynamic plane graph</b>.<br>
D. Eppstein, 
<a href="//www.info.uniroma2.it/~italiano/">G.F. Italiano</a>, 
<a href="//www.cs.brown.edu/people/rt/home.html">R. Tamassia</a>, 
<a href="//www.cs.Princeton.EDU/~ret/">R.E. Tarjan</a>,
J. Westbrook,
and M. Yung.<br>
<a href="//portal.acm.org/citation.cfm?id=320177">
<i>1st ACM-SIAM Symp. Discrete Algorithms,</i>
San Francisco, 1990, pp. 1&ndash;11</a>.<br>
<i>J. Algorithms</i> 13 (1): 33&ndash;54, 1992
(special issue for 1st Symp. Discrete Algorithms).<br>
Corrigendum, <i>J. Algorithms</i> 15: 173, 1993.
<p>
The complement of a
<a href="mst.html">minimum spanning tree</a> is a maximum spanning tree in
the dual graph.  By applying this fact we can use a modified form of
Sleator and Tarjan's dynamic tree data structure to update the MST in
logarithmic time per update.
<p>(<a href="/~eppstein/bibs/eppstein.html#Maintenance of a minimum spanning forest in a dynamic planar graph">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Maintenance-of-a-minimum-spanning-forest-in-a-dynamic-planar-graph.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein92maintenance.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=139668">ACM DL</a>)
<p>
<li><b>The farthest point Delaunay triangulation minimizes angles</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-90-45.pdf">Tech. Rep. 90-45</a>, ICS, UCI, 1990.<br>
<a href="//doi.org/10.1016/S0925-7721(98)00031-5">
<i>Comp. Geom. Theory &amp; Applications</i> 1: 143&ndash;148, 1992</a>.
<p>
Given a collection of points in convex position,
the sharpest angle determined by any triple can be found
as a corner of a triangle
in the farthest point Delaunay triangulation.
<p>(<a href="/~eppstein/bibs/eppstein.html#The farthest point Delaunay triangulation minimizes angles">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/The-farthest-point-Delaunay-triangulation-minimizes-angles.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein90farthest.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=158945">ACM DL</a>)
<p>
<li><b>Parallel recognition of series parallel graphs</b>.<br>
D. Eppstein.<br>
<a href="Epp-IC-92.pdf"><i>Information &amp; Computation</i> 98: 41&ndash;55, 1992</a>.
<p>
Characterizes two-terminal series graphs in terms of a
tree-like structure in their ear decompositions.
Uses this characterization to construct
parallel algorithms that recognize these graphs and
construct their series-parallel decompositions.
<p>(<a href="/~eppstein/bibs/eppstein.html#Parallel recognition of series parallel graphs">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Parallel-recognition-of-series-parallel-graphs.html">Citations</a> &ndash;
<a href="//theory.lcs.mit.edu/~iandc/References/eppstein1992:41.html">MIT hypertext bibliography</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein92parallel.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=162582">ACM DL</a>)
<p>
<li><b>Finding the <i>k</i> smallest spanning trees</b>.<br>
D. Eppstein.<br>
<i>2nd Scand. Worksh. Algorithm Theory,</i> Bergen, Norway, 1990.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 447, 1990, pp. 38&ndash;47.<br>
<a href="Epp-BIT-92.pdf"><i>BIT</i> 32: 237&ndash;248, 1992</a>
(special issue for 2nd Scand. Worksh. Algorithm Theory).
<p>
By removing edges not involved in some solution,
and contracting edges involved in all solutions,
we reduce the problem to one in a graph with O(<i>k</i>)
edges and vertices.  This simplification step
transforms any time bound involving <i>m</i> or <i>n</i>
to one involving min(<i>m,</i> <i>k</i>) or min(<i>n,</i> <i>k</i>)
respectively.  This paper also introduces the geometric
version of the <i>k</i> smallest spanning trees problem
(the graph version was long known) which it solves using
order (<i>k</i>+1) Voronoi diagrams.
<p>(<a href="/~eppstein/bibs/eppstein.html#Finding the $k$ smallest spanning trees">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Finding-the-k-smallest-spanning-trees.html">Citations</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=671927">ACM DL (SWAT)</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=174321">ACM DL (BIT)</a>)
<p>
<li><b>Sparse dynamic programming</b>.<br>
D. Eppstein,
<a href="//www.scs.gatech.edu/people/zvi-galil">Z. Galil</a>,
<a href="//hpdma2.math.unipa.it/giancarl/source.html">R. Giancarlo</a>,
and <a href="//www.info.uniroma2.it/~italiano/">G.F. Italiano</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=320238">
<i>1st ACM-SIAM Symp. Discrete Algorithms,</i>
San Francisco, 1990, pp. 513&ndash;522</a>.<br>
"Sparse dynamic programming I: linear cost functions", <i>J. ACM</i>
39: 519&ndash;545, 1992</a>.<br>
"Sparse dynamic programming II: convex and concave cost functions", <i>J. ACM</i> 39: 546&ndash;567, 1992</a>.
<p>
Considers sequence alignment and RNA structure problems
in which the solution is constructed by piecing together
some initial set of fragments (e.g. short sequences that match exactly).
The method is to consider a planar point set formed by
the fragment positions in the two input sequences,
and use plane sweep to construct a cellular decomposition of the plane
similar to the rectilinear Voronoi diagram.
<p>
(<a href="/~eppstein/bibs/eppstein.html#Sparse dynamic programming">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Sparse-dynamic-programming.html">Citations to conference version</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Sparse-dynamic-programming-I-linear-cost-functions.html">Citations to SDP I</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Sparse-dynamic-programming-II-convex-and-concave-cost-functions.html">Citations to SDP II</a>)
<p>
<li><b>Polynomial-size non-obtuse triangulation of polygons</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>
and D. Eppstein.<br>
<a href="//portal.acm.org/citation.cfm?id=109686">
<i>7th ACM Symp. Comp. Geom.,</i> North Conway, New Hampshire, 1991, pp. 342&ndash;350</a>.<br>
<a href="BerEpp-IJCGA-92.pdf"><i>Int. J. Comp. Geom. &amp; Appl.</i> 2: 241&ndash;255, 1992</a>
(special issue for 7th Symp. Comput. Geom.).
<p>
Any simple polygon can be triangulated with quadratically many nonobtuse
triangles.  Mostly subsumed by recent results of Bern et al described in
"<a href="p-cpack.html">Faster circle packing</a>".
<p>(<a href="/~eppstein/bibs/eppstein.html#Polynomial size non-obtuse triangulation of polygons">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Polynomial-size-non-obtuse-triangulation-of-polygons.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/bern92polynomialsize.html">CiteSeer</a>)
<p>
<li><b>Connectivity, graph minors, and subgraph multiplicity</b>.<br>
D. Eppstein.<br>
Tech. Rep. 92-06, ICS, UCI, 1992.<br>
<a href="Epp-JGT-93.pdf"><i>J. Graph Th.</i> 17: 409&ndash;416, 1993</a>.
<p>
It was known that planar graphs have O(<i>n</i>) subgraphs isomorphic
to K<sub>3</sub> or K<sub>4</sub>. That is, K<sub>3</sub> and
K<sub>4</sub> have linear subgraph multiplicity.
This paper shows that the graphs with linear subgraph multiplicity in
the planar graphs are exactly the 3-connected planar graphs.
Also, the graphs with linear subgraph multiplicity in the outerplanar
graphs are exactly the 2-connected outerplanar graphs.
<p>
More generally, let F be a minor-closed family, and let x be the
smallest number such that some complete bipartite graph K<sub>x,y</sub>
is a forbidden minor for F. Then the x-connected graphs have linear
subgraph multiplicity for F, and there exists an
(x&nbsp;&minus;&nbsp;1)-connected graph (namely
K<sub>x&nbsp;&minus;&nbsp;1,x&nbsp;&minus;&nbsp;1</sub>) that does not
have linear subgraph multiplicity.
When x&nbsp;&le;&nbsp;3 or when x&nbsp;=&nbsp;4 and the minimal
forbidden minors for F are triangle-free, then the graphs with linear
subgraph multiplicity for F are exactly the x-connected graphs.
<p>
Please refer only to the journal version, and not the earlier technical
report: the technical report had a bug that was repaired in the journal
version.
<p>(<a href="/~eppstein/bibs/eppstein.html#Connectivity, graph minors, and subgraph multiplicity">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Connectivity-graph-minors-and-subgraph-multiplicity.html">Citations</a>)
<p>
<li><b>Edge insertion for optimal triangulations</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
<a href="//www.cs.duke.edu/~edels/">H. Edelsbrunner</a>,
D. Eppstein, 
<a href="//endo.sandia.gov/~samitch/index.html">
S. Mitchell</a>, and
<a href="//www.comp.nus.edu.sg/~tants/">T.S. Tan</a>.<br>
<i>1st Latin Amer. Symp. Theoretical Informatics,</i> Sao Paulo, 1992.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 583, 1992, pp. 46&ndash;60.<br>
Tech. Rep. EDC UILU-ENG-92-1702, Univ. Illinois, Urbana-Champaign, 1992.<br>
<a href="//www.comp.nus.edu.sg/~tants/Paper/eis.ps.gz"><i>Disc.
&amp; Comp. Geom.</i> 10: 47&ndash;65, 1993</a>.
<p>
One standard way of constructing Delaunay triangulations
is by iterated local improvement, in which each step
flips the diagonal of some quadrilateral.
For many other optimal triangulation problems, flipping is
insufficient, but the problems can instead be solved
by a more general local improvement step in which
a new edge is added to the triangulation, cutting through
several triangles, and the region it cuts through
is retriangulated on both sides.
<p>(<a href="/~eppstein/bibs/eppstein.html#Edge insertion for optimal triangulation">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Edge-insertion-for-optimal-triangulation.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/bern92edge.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=689852">ACM DL</a>)
<p>
<li><b>Dynamic three-dimensional linear programming</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-91-53.pdf">Tech. Rep. 91-53</a>, ICS, UCI, 1991.<br>
<i>32nd IEEE Symp. Foundations of Comp. Sci.,</i>
San Juan, Puerto Rico, 1991, pp. 488&ndash;494.<br>
<i>ORSA J. Computing</i> 4: 360&ndash;368, 1992
(special issue on computational geometry).
<p>
Uses Dobkin-Kirkpatrick hierarchies to perform
<a href="geom-lp.html">linear programming</a>
queries in the intersection of several convex polyhedra.
By maintaining a collection of halfspaces as several subsets,
represented by polyhedra, this leads to algorithms for a dynamic
linear program in which updates change the set of constraints.
The fully dynamic results have largely been subsumed
by Agarwal and Matou&#353;ek, but this paper also includes
polylog time results for semi-online problems,
and uses them to give a fast randomized algorithm for the planar
2-center problem (later improved by various authors, most recently
in "<a href="p-2c.html">Faster Construction of Planar Two-Centers</a>",
which re-uses the data structures described here).
<p>(<a href="/~eppstein/bibs/eppstein.html#Dynamic three-dimensional linear programming">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Dynamic-three-dimensional-linear-programming.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein92dynamic.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=123359">ACM DL</a>)
<p>
<li><b>Approximating the minimum weight Steiner triangulation</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-91-55.pdf">Tech. Rep. 91-55</a>, ICS, UCI, 1991.<br>
<a href="//portal.acm.org/citation.cfm?id=139415"><i>3rd ACM-SIAM Symp. Discrete Algorithms,</i> Orlando, 1992, pp. 48&ndash;57</a>.<br>
<a href="Epp-DCG-94.pdf"><i>Disc. Comp. Geom.</i> 11: 163&ndash;191, 1994</a>.
<p>
<a href="geom-qt.html">Quadtree</a> based
<a href="geom-tri.html">triangulation</a> gives a large but constant factor
<a href="geom-approx.html">approximation</a>
to the minimum weight triangulation of a point set or
convex polygon, allowing extra Steiner points to be added as vertices.
Includes proofs of several bounds on triangulation weight relative to
the <a href="mst.html">minimum spanning tree</a> or non-Steiner
triangulation, and a conjecture
that for convex polygons the only points that need to be added are on
the polygon boundary.
<p>(<a href="/~eppstein/bibs/eppstein.html#Approximating the minimum weight Steiner triangulation">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Approximating-the-minimum-weight-Steiner-triangulation.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein92approximating.html">CiteSeer</a>)
<p>
<li><b>New algorithms for minimum area <i>k</i>-gons</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-91-59.pdf">Tech. Rep. 91-59</a>, ICS, UCI, 1991.<br>
<a href="//portal.acm.org/citation.cfm?id=139422"><i>3rd ACM-SIAM Symp. Discrete Algorithms,</i> Orlando, 1992, pp. 83&ndash;86.</a>
<p>
Shows that the minimum area polygon containing <i>k</i> of <i>n</i>
points must be near a line determined by two points,
and uses this observation to find the polygon quickly.
Merged with
"<a href="p-inn.html">Iterated nearest neighbors and finding minimal
polytopes</a>" in the journal version.
<p>(<a href="/~eppstein/bibs/eppstein.html#New algorithms for minimum area $k$-gons">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/New-algorithms-for-minimum-area-k-gons.html">Citations</a>)
<p>
<li><b>New algorithms for minimum measure simplices and one-dimensional
weighted Voronoi diagrams</b>.<br>
D. Eppstein and 
<a href="//compgeom.cs.uiuc.edu/~jeffe/">
J. Erickson</a>.<br>
<a href="tr.html">Tech. Rep. 92-55</a>, ICS, UCI, 1992.
<p>
Looks at space complexity of finding minimum simplices &ndash; solves the problem in
O(<i>n</i><sup>2</sup>) space and O(<i>n<sup>d</sup></i>) time
(matching the best known time bounds)
or in linear space at the expense of an additional log in time.
Also finds one-dimensional multiplicatively weighted Voronoi diagrams in
linear time for sorted inputs (O(<i>n</i> log <i>n</i>) was known).
<p>(<a href="/~eppstein/bibs/eppstein.html#New algorithms for minimum measure simplices and one-dimensional weighted Voronoi diagrams">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/New-algorithms-for-minimum-measure-simplices-and-one-dimensional-weighted-Voronoi-diagrams.html">Citations</a> &ndash;
<a href="//compgeom.cs.uiuc.edu/~jeffe/pubs/simplex.html">Jeff's pub list entry</a>)
<p>
<li><b>Iterated nearest neighbors and finding minimal polytopes</b>.<br>
D. Eppstein and 
<a href="//compgeom.cs.uiuc.edu/~jeffe/">J. Erickson</a>.<br>
Tech. Rep. 92-71, ICS, UCI, 1992.<br>
<a href="//portal.acm.org/citation.cfm?id=313612">
<i>4th ACM-SIAM Symp. Discrete Algorithms,</i> Austin, 1993, pp. 64&ndash;73</a>.<br>
<a href="//compgeom.cs.uiuc.edu/~jeffe/pubs/pdf/small.pdf"><i>Disc. Comp. Geom.</i> 11: 321&ndash;350, 1994</a>.
<p>
Showed that for various optimization criteria, the
optimal polygon containing <i>k</i> of <i>n</i>
points must be near one of the points, hence one can transform
time bounds involving several factors of <i>n</i>
to bounds linear in <i>n</i> but polynomial in <i>k.</i>
Used as a subroutine are data structures for finding several
<a href="geom-nn.html">nearest neighbors</a> in rectilinear metric spaces, and
algorithms for finding the
<a href="geom-deep.html">deepest point in an arrangement</a> of cubes or
spheres.
<p>(<a href="/~eppstein/bibs/eppstein.html#Iterated nearest neighbors and finding minimal polytopes">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Iterated-nearest-neighbors-and-finding-minimal-polytopes.html">Citations</a> &ndash;
<a href="//compgeom.cs.uiuc.edu/~jeffe/pubs/small.html">Jeff's pub list entry</a> &ndash;
<a href="//citeseer.ist.psu.edu/erickson94iterated.html">CiteSeer</a>)
<p>
<li><b>Tree-weighted neighbors and geometric <i>k</i> smallest spanning trees</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-92-77.pdf">Tech. Rep. 92-77</a>, ICS, UCI, 1992.<br>
<i>Int. J. Comp. Geom. &amp; Appl.</i> 4: 229&ndash;238, 1994.
<p>
"<a href="p-kmst.html">Finding the <i>k</i> smallest spanning trees</a>"
used higher order Voronoi diagrams to reduce the geometric
<a href="kbest.html"><i>k</i> smallest</a>
<a href="mst.html">spanning tree</a> problem to the graph problem.
Here I instead use nearest neighbors for a modified
distance function where the bottleneck shortest path length
is subtracted from the true distance between points.
The result improves the planar time bounds and extends
more easily to higher dimensions.
<p>(<a href="/~eppstein/bibs/eppstein.html#Tree-weighted neighbors and geometric $k$ smallest spanning trees">BibTeX</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein92treeweighted.html">CiteSeer</a>)

<p>
<li><b>Offline algorithms for dynamic minimum spanning tree problems</b>.<br>
D. Eppstein.<br>
<i>2nd Worksh. Algorithms and Data Structures,</i> Ottawa, Canada, 1991.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 519, 1991, pp. 392&ndash;399.<br>
<a href="Epp-TR-92-04.pdf">Tech. Rep. 92-04</a>, ICS, UCI, 1992.<br>
<a href="//doi.org/10.1006/jagm.1994.1033">
<i>J. Algorithms</i> 17: 237&ndash;250, 1994</a>.
<p>
Given a sequence of edge insertions and deletions in a graph,
finds the corresponding sequence of minimum spanning tree changes,
in logarithmic time per update.
Similarly solves the planar geometric version of the problem
(using a novel "mixed MST" formulation in which part of the input
is a graph and part is a point set) in time
O(log<sup>2</sup> <i>n</i>) for the Euclidean metric and
O(log <i>n</i> log log <i>n</i>) for the rectilinear metric.
<p>(<a href="/~eppstein/bibs/eppstein.html#Offline algorithms for dynamic minimum spanning tree problems">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Offline-algorithms-for-dynamic-minimum-spanning-tree-problems.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein94offline.html">CiteSeer</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=185278">ACM DL (JA)</a>)
<p>
<li><b>Dynamic Euclidean minimum spanning trees and extrema of binary functions</b>.<br>
D. Eppstein.<br>
<a href="tr.html">Tech. Rep. 92-05</a>, ICS, UCI, 1992.<br>
<a href="tr.html">Tech. Rep. 92-88</a>, ICS, UCI, 1992.<br>
<a href="Epp-DCG-95.pdf"><i>Disc. Comp. Geom.</i> 13: 111&ndash;122, 1995</a>.
<p>
Shows that bichromatic nearest neighbors can be maintained under point
insertion and deletion essentially as quickly as known solutions to the
post office problem, and that the
<a href="mst.html">minimum spanning tree</a> can be
maintained in the same time except for an additive O(sqrt <i>n</i>) needed for
solving the corresponding graph problem.
TR 92-88's title was actually "Fully dynamic maintenance of Euclidean
minimum spanning trees and maxima of decomposable functions".
TR 92-05's title left out the part about maxima; that version gave a slower
algorithm superseded by the result in 92-88.
<p>(<a href="/~eppstein/bibs/eppstein.html#Dynamic Euclidean minimum spanning trees and extrema of binary functions">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Dynamic-Euclidean-minimum-spanning-trees-and-extrema-of-binary-functions.html">Citations</a> &ndash;
<a href="/~eppstein/projects/pairs/">Closest pair project page</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein95dynamic.html">CiteSeer</a>)
<p>
<li><b>Dynamic algorithms for half-space reporting, proximity problems, and
geometric minimum spanning trees</b>.<br>
<a href="//www.cs.duke.edu/~pankaj/">P.K. Agarwal</a>,
D. Eppstein, and
<a href="//www.ms.mff.cuni.cz/acad/kam/matousek/">J. Matou&#353;ek</a>.<br>
<a href="AgaEppMat-FOCS-92.pdf"><i>33rd IEEE Symp. Foundations of
Comp. Sci.,</i> Pittsburgh, 1992, pp. 80&ndash;89</a>.
<p>
This conference paper merged my results from
"<a href="p-dynmst.html">Dynamic Euclidean minimum
spanning trees</a>" with results of my co-authors on nearest neighbors
and halfspace range searching.
<p>(<a href="/~eppstein/bibs/eppstein.html#Dynamic algorithms for half-space reporting, proximity problems, and geometric minimum spanning trees">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Dynamic-algorithms-for-half-space-reporting-proximity-problems-and-geometric-minimum-spanning-trees.html">Citations</a>)
<p>
<li><b>Asymptotic speed-ups in constructive solid geometry</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-92-87.pdf">Tech. Rep. 92-87</a>, ICS, UCI, 1992.<br>
<i>Algorithmica</i> 13: 462&ndash;471, 1995.
<p>
Finds boundary representations of CSG objects.
Uses techniques from dynamic graph algorithms,
including a tree partitioning technique of Frederickson
and a new data structure for maintaining the value
of a Boolean expression with changing variables
in time O(log <i>n</i> / log log <i>n</i>) per update.
<p>(<a href="/~eppstein/bibs/eppstein.html#Asymptotic speed-ups in constructive solid geometry">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Asymptotic-speed-ups-in-constructive-solid-geometry.html">Citations</a>)
<p>
<li><b>Triangulating polygons without large angles</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
<a href="//www.cs.Princeton.EDU/~dpd/">D. Dobkin</a>,
and D. Eppstein.<br>
<a href="//portal.acm.org/citation.cfm?id=142722">
<i>8th ACM Symp. Comp. Geom.,</i> Berlin, 1992, pp. 222&ndash;231</a>.<br>
<a href="BerDobEpp-IJCGA-95.ps.gz"><i>Int. J. Comp. Geom. &amp; Appl.</i> 5: 171&ndash;192, 1995</a>
(special issue for 8th Symp. Comput. Geom.)
<p>
Follows up "<a href="p-nonobtuse.html">Polynomial size non-obtuse
triangulation of polygons</a>";
improves the number of triangles by relaxing the requirements on their angles.
Again mostly subsumed by results of Bern et al described in
"<a href="p-cpack.html">Faster circle packing</a>".
<p>(<a href="/~eppstein/bibs/eppstein.html#Triangulating polygons without large angles">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Triangulating-polygons-without-large-angles.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/bern95triangulating.html">CiteSeer</a>)
<p>
<li><b>Mesh generation and optimal triangulation</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>
and D. Eppstein.<br>
Tech. Rep. CSL-92-1, Xerox PARC, 1992.<br>
<i>Computing in Euclidean Geometry,</i>
D.-Z. Du and F.K. Hwang, eds.,
World Scientific, 1992, pp. 23&ndash;90.<br>
<a href="BerEpp-CEG-95.pdf">Revised
version in <i>Computing in Euclidean Geometry,</i> 2nd ed.,
D.-Z. Du and F.K. Hwang, eds.,
World Scientific, 1995, pp. 47&ndash;123</a>.
<p>
Considers both heuristics and theoretical algorithms
for finding good triangulations and tetrahedralizations
for surface interpolation and unstructured finite element meshes.
Note that the online copy here omits the figures;
also online is this paper's
<a href="//www.ics.uci.edu/~eppstein/bibs/meshgen.bib">bibliography</a>.
<p>(<a href="/~eppstein/bibs/eppstein.html#Mesh generation and optimal triangulation">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Mesh-generation-and-optimal-triangulation.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/bern92mesh.html">CiteSeer</a>)
<p>
<li><b>Sparsification&mdash;A technique for speeding up dynamic graph algorithms</b>.<br>
D. Eppstein,
<a href="//www.scs.gatech.edu/people/zvi-galil">Z. Galil</a>, 
<a href="//www.info.uniroma2.it/~italiano/">
G.F. Italiano</a>, and A. Nissenzweig.<br>
<i>33rd IEEE Symp. Foundations of Comp. Sci.,</i> Pittsburgh, 1992, pp. 60&ndash;69.<br>
Tech. Rep. RC 19272 (83907), IBM, 1993.<br>
Tech. Rep. CS96-11, Univ. Ca' Foscari di Venezia, Oct. 1996.<br>
<a href="//doi.org/10.1145/265910.265914"><i>J. ACM</i> 44 (5): 669&ndash;696, 1997</a>.
<p>
Uses a divide and conquer on the edge set of a graph, together with the
idea of replacing subgraphs by sparser certificates, to make various
dynamic algorithms as fast on dense graphs as they are on sparse graphs.
Applications include random generation of spanning trees
as well as finding the <i>k</i>
<a href="mst.html">minimum weight spanning trees</a>
for a given parameter <i>k.</i>
<p>(<a href="/~eppstein/bibs/eppstein.html#Sparsification &ndash;- A technique for speeding up dynamic graph algorithms">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Sparsification-A-technique-for-speeding-up-dynamic-graph-algorithms.html">Citations</a> &ndash;
<a href="//theory.lcs.mit.edu/~dmjones/FOCS/References/eppsteingin1992:60.html">MIT hypertext bibliography</a> &ndash;
<a href="//portal.acm.org/citation.cfm?id=265914">ACM DL</a>)
<p>
<li><b>The diameter of nearest neighbor graphs</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-92-76.pdf">Tech. Rep. 92-76</a>, ICS, UCI, 1992.
<p>
Any connected nearest neighbor forest
with diameter <i>D</i> has O(<i>D</i><sup>6</sup>) vertices.  This was
later further
improved to O(<i>D</i><sup>5</sup>) and merged with results of Paterson
and Yao into "<a href="p-nn.html">On nearest neighbor graphs</a>".
<p>(<a href="/~eppstein/bibs/eppstein.html#The diameter of nearest neighbor graphs">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/The-diameter-of-nearest-neighbor-graphs.html">Citations</a> &ndash;
<a href="//citeseer.ist.psu.edu/eppstein92diameter.html">CiteSeer</a>)
<p>
</ul>

<hr><p>
<a href="year.html">Years</a> &ndash;
<a href="/~eppstein/pubs/">Publications</a> &ndash;
<a href="/~eppstein/">David Eppstein</a> &ndash;
<a href="/~theory/">Theory Group</a> &ndash;
<a href="/">Inf. &amp; Comp. Sci.</a> &ndash;
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ