¦Ifinal_url¢DtypeEvaluex5https://www.ics.uci.edu/~eli/courses/cs153-f09/p4.txtLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1286¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 25 Sep 2009 20:22:37 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"506-4746cb57cfd40"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXWed, 06 Feb 2019 20:53:54 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueYProject 4

Implement a 2-input 2-output N-bit div/mod combinational entity in VHDL. Use
the div/mod algorithm introduced in lecture for performing the operations.

Unlike your previous project, your architecture should be structural
in nature. In other words, you should first create a number of entities
as building blocks. Then, you should instantiate these in your div/mode
architecture and connect them using signals.

So, your div/mod architecture should not have any process inside of it!


Implement a partial testbench for your div/mod combinational entity in
VHDL. The partial testbench should make use of a 8-bit and a 17-bit div/mod
entity. For each of these, test a few cases to ensure correctness.

Simulate your testbench and div/mod entity and show the wave-forms of input
and output signals to your TA. Make sure your TA checks out your demo. This
will be worth 70% the points for this project.

Complete a report and attach to it all source VHDL files. Your report should
include your name, a description of the VHDL files attached, any special
notes or comments, and a description of how you tested your design.

Your TA will provide you with information on tools, lab setup, and other things
related to this project. Make sure you seek help to get you started.






Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ