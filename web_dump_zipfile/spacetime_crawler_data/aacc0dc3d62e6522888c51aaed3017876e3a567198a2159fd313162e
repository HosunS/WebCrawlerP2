¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1003¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:53:57 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"3eb-4da84c249d740"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 07 Feb 2019 22:49:37 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueYë/*
  $Id: indexentry.h 4143 2008-12-08 23:23:55Z abehm $

  Copyright (C) 2007 by The Regents of the University of California

  Redistribution of this file is permitted under the terms of the 
  BSD license

  Date: 05/04/2006
  Author: Rares Vernica <rares (at) ics.uci.edu>
*/

#ifndef _indexentry_h_
#define _indexentry_h_

#include <set>

#include "simfunc/simdist.h"
#include "simfunc/simvect.h"

using namespace std;

class IndexEntry
{
public:
  unsigned index;
  SimType dist;
 
  IndexEntry(unsigned i, SimType d): index(i), dist(d) {}

  friend ostream& operator<<(ostream &out, const IndexEntry &e);
  friend bool operator<(const IndexEntry &left, const IndexEntry &right);
};

typedef set<IndexEntry> ContIndexEntry;

class IndexEntryVect
{
public:
  unsigned index;
  SimVect vect;
 
  IndexEntryVect(unsigned i, SimVect v): index(i), vect(v) {}

  friend bool operator<(const IndexEntryVect &left, const IndexEntryVect &right);
};

typedef set<IndexEntryVect> ContIndexEntryVect;

#endif
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ