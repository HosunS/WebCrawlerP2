¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue†¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1762¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXMon, 19 Nov 2018 16:15:18 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"6e2-57b06d2aec5b4"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 01:24:33 GMTKraw_content¢DtypeEvalueYâ#
# analyze t-data with Metropolis algorithm
#
# y = data
# k = number of observations
# nu = degrees of freedom
#
y <- c(-1.69,0.12,1.20,1.23,1.39,1.49,1.59,1.77,2.59,2.68,2.69,2.86,3.12,3.14,3.94,4.51,4.61,4.71,5.75,9.96)
k <- length(y)
nu <- 3
#
# function logpost (input: mu, log(sigma);  output; log(posterior)
#
logpost <- function(parm){
	mu <- parm[1]
	sigma2 <- exp(2*parm[2])
        z <- 1 + (y - mu)^2/(nu*sigma2)
	output <- -1*k*parm[2] -(nu+1)*sum(log(z))/2
        output}
#
# set up array (params) to hold simulations 
# (M= chains; nloop=length of chains)
#
M <- 5
nloop <- 1000
params <- array(NA, c(nloop,2,M))
#
# set variance matrix for Gaussian jumping distribution (v= identity)
#
param.vcov <- matrix(c(1,0,0,1),2,2)
vchol <- chol(param.vcov)
#
# starting values (overdispersed; chosen in ad hoc manner)
#
params[1,1,] <- c(-1,1,3,5,7)
params[1,2,] <- log(c(0.5,2,5,8,18))
#
# const = scaling factor for Metroplis jumps 
# (played with until acceptance rate in (.25, .40)
#
const <- 0.5
#
# Metropolis loop
#
for (m in 1:M){
ac <- 0
lm <- logpost(params[1,,m])
for (loop in 2:nloop){
  x <- matrix(rnorm(2,0,1),1,2)
  x <- const*x%*%vchol
  cand <- params[loop-1,,m] + x
  candlm <- logpost(cand)
  unif <- runif(1) 
  if (unif < exp(candlm-lm)) {
	ac <- ac + 1
        params[loop,,m] <- cand
        lm <- candlm
	}
  else {
	params[loop,,m] <- params[loop-1,,m]
	}
  }
  print(ac,m) 
  }
#
# run the G&R convergence and save results for mu, sigma
#
results <- matrix(0,2,7)
results[1,] <- c(gandr.conv(params[,1,])$quantiles,gandr.conv(params[,1,])$confshrink)
results[2,] <- c(gandr.conv(exp(params[,2,]))$quantiles,gandr.conv(exp(params[,2,]))$confshrink)
resultsMis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ