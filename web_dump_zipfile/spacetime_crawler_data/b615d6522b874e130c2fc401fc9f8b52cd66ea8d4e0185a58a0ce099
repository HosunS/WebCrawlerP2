¦Ifinal_url¢DtypeEvaluex8https://www.ics.uci.edu/~eppstein/projects/pairs/Papers/Lhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD1344¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 04 Sep 2003 02:46:40 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"ad8-3c677fe4d0400-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 04:53:51 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY
Ø<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<title>Closest Pair Papers</title>
<!--#config timefmt="%d %h %Y, %T %Z" -->
</head>
<body fgcolor="#000000" bgcolor="#FFFFFF">
<h1><a href="../">Closest Pair Data Structures</a>: Papers</h1>

<ul>
<li><a href="/~eppstein/pubs/p-dynhalf.html">Dynamic algorithms for
half-space reporting, proximity problems, and geometric minimum
spanning trees</a>, FOCS 1992. (With P.&nbsp;Agarwal and
J.&nbsp;Matousek.) The initial appearance of my closest pair data
structure, together with results of Agarwal and Matousek on range
searching.<br><br></li>

<li><a href="/~eppstein/pubs/p-dynmst.html">Dynamic Euclidean
minimum spanning trees and extrema of binary functions</a>, <i>
Disc. Comp. Geom.</i> 1995. The journal version of my part of the
FOCS '92 paper.<br><br></li>

<li><a href="/~eppstein/pubs/p-avgdynopt.html">Average case
analysis of dynamic geometric optimization</a>, Tech. Rep. 1993,
SODA 1994, <i>Comp. Geom. Th. &amp; Appl.</i> 1996. Includes
algorithms for maintaining planar farthest pairs.<br><br></li>

<li><a href="Epp-SODA-98.pdf">Fast hierarchical clustering and
other applications of dynamic closest pairs</a>, SODA 1998, <a
href="http://www.jea.acm.org/2000/EppsteinDynamic/"><i>JEA</i>
2000</a>, <a href="http://arXiv.org/abs/cs.DS/9912014">
cs.DS/9912014</a>. Non-geometric applications of my closest pair
data structure.<br><br></li>

<li><a href="http://compgeom.cs.uiuc.edu/~jeffe/pubs/cycles.html">
Raising roofs, crashing cycles, and playing pool: applications of a
data structure for finding pairwise interactions</a> (with <a href= 
"http://compgeom.cs.uiuc.edu/~jeffe/">Jeff Erickson</a>), SCG 1998,
<i>Disc. Comp. Geom.</i> 1999. We use closest pairs to solve
collision detection, offset curve construction, and skeletonization
problems.<br><br></li>

<li><a href="http://arXiv.org/abs/cs.CG/9809038">Incremental and
decremental maintenance of planar width</a>, SODA 1999,
cs.CG/9909038, <i>J. Algorithms</i> 2000. Keeps track of the width
of a point set by turning it into a dynamic bichromatic closest
pair problem on the set of convex hull features.<br><br></li>

<li><a href="http://www.ulb.ac.be/di/scsi/jcardin/lazy.ps.gz">Lazy
algorithms for dynamic closest pair with arbitrary distance
measures</a>
(with <a href="http://www.ulb.ac.be/di/scsi/jcardin/">J. Cardinal</a>),
Tech. Rep. 502, Univ. Libre de Bruxelles, 2003.  Adds a lazy deletion
mechanism to my previous closest pair data structures and shows
experimentally that it enhances their performance.<br><br></li>

</ul>

<hr>
<a href="/~eppstein/">David Eppstein, <a href="/">Information
&amp; Computer Science</a>, <a href="http://www.uci.edu/">UC
Irvine</a>, <!--#flastmod file="index.html" -->.</a>
</body>
</html>

Mis_redirected¢DtypeEvalueõIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ