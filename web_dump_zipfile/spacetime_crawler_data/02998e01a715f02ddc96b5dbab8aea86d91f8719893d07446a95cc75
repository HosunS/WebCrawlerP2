¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE45810¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueX°trac_form_token=7c51469a7ecdb969f976909d; httponly; Path=/wiki/public, trac_session=dba66f4110edafd79b1d944d; expires=Thu, 09 May 2019 00:30:05 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueGExpiresAv¢DtypeEvalueXFri, 01 Jan 1999 00:00:00 GMT¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueMCache-ControlAv¢DtypeEvalueOmust-revalidate¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 00:30:05 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueWtext/html;charset=utf-8Kraw_content¢DtypeEvalueY²ò<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      cs122b-2019-winter-project1 â€“ Public
    </title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/wiki/public/search" />
        <link rel="help" href="/wiki/public/wiki/TracGuide" />
        <link rel="alternate" href="/wiki/public/wiki/cs122b-2019-winter-project1?version=9&amp;format=txt" type="text/x-trac-wiki" title="Plain Text" />
        <link rel="up" href="/wiki/public/wiki/cs122b-2019-winter-project1" title="View latest version" />
        <link rel="next" href="/wiki/public/wiki/cs122b-2019-winter-project1?version=10" title="Version 10" />
        <link rel="start" href="/wiki/public/wiki" />
        <link rel="stylesheet" href="/wiki/public/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/tracwysiwyg/editor.css" />
        <link rel="tracwysiwyg.base" href="/wiki/public" />
        <link rel="prev" href="/wiki/public/wiki/cs122b-2019-winter-project1?version=8" title="Version 8" />
        <link rel="shortcut icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
    <style id="trac-noscript" type="text/css">.trac-noscript { display: none !important }</style>
    <script type="text/javascript">
      var _tracwysiwyg={};
    </script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/jquery.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/babel.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/trac.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/search.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/folding.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/tracwysiwyg/wysiwyg.js"></script>
    <script type="text/javascript">
      jQuery("#trac-noscript").remove();
      jQuery(document).ready(function($) {
        $(".trac-autofocus").focus();
        $(".trac-target-new").attr("target", "_blank");
        setTimeout(function() { $(".trac-scroll").scrollToTop() }, 1);
        $(".trac-disable-on-submit").disableOnSubmit();
      });
    </script>
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW" />
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $("#content").find("h1,h2,h3,h4,h5,h6").addAnchor(_("Link to this section"));
        $("#content").find(".wikianchor").each(function() {
          $(this).addAnchor(babel.format(_("Link to #%(id)s"), {id: $(this).attr('id')}));
        });
        $(".foldable").enableFolding(true, true);
      });
    </script>
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.ics.uci.edu/"><img src="/wiki/public/chrome/site/ics.jpg" alt="ICS Logo" height="67" width="128" /></a>
      </div>
      <form id="search" action="/wiki/public/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/wiki/public/login">Login</a></li><li><a href="/wiki/public/prefs">Preferences</a></li><li class="last"><a href="/wiki/public/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
  </div>
    <div id="main">
      <div id="pagepath" class="noprint">
  <a class="pathentry first" title="View WikiStart" href="/wiki/public/wiki">wiki:</a><a class="pathentry" href="/wiki/public/wiki/cs122b-2019-winter-project1" title="View cs122b-2019-winter-project1">cs122b-2019-winter-project1</a>
</div>
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
        <ul>
          <li class="first"><span>&larr; <a class="prev" href="/wiki/public/wiki/cs122b-2019-winter-project1?version=8" title="Version 8">Previous Version</a></span></li><li><a href="/wiki/public/wiki/cs122b-2019-winter-project1" title="View latest version">View Latest Version</a></li><li class="last"><span><a class="next" href="/wiki/public/wiki/cs122b-2019-winter-project1?version=10" title="Version 10">Next Version</a> &rarr;</span></li>
        </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
        <br />
        <table id="info" summary="Revision info">
          <tr><th scope="row">Version 9 (modified by qiushi, <a class="timeline" href="/wiki/public/timeline?from=2019-01-07T23%3A50%3A32-08%3A00&amp;precision=second" title="See timeline at Jan 7, 2019 11:50:32 PM">4 weeks ago</a>)
             (<a href="/wiki/public/wiki/cs122b-2019-winter-project1?action=diff&amp;version=9">diff</a>)</th></tr>
          <tr><td class="message">
            <p>
--
</p>

          </td></tr>
        </table>
      <div class="wikipage searchable">
        
          <div id="wikipage" class="trac-content"><p>
</p><div class="wiki-toc">
<ol>
  <li>
    <a href="#CS122B:Project1">CS122B: Project 1</a>
  </li>
  <li>
    <a href="#Tasks">Tasks</a>
  </li>
  <li>
    <a href="#Task1:SetupApacheTomcat">Task 1: Setup Apache Tomcat</a>
    <ol>
      <li>
        <a href="#ApacheTomcatEclipseIntegration">Apache Tomcat Eclipse Integration</a>
      </li>
      <li>
        <a href="#SetupMaven">Setup Maven</a>
      </li>
    </ol>
  </li>
  <li>
    <a href="#Task2:SetupanAWSInstance">Task 2: Setup an AWS Instance</a>
    <ol>
      <li>
        <a href="#LaunchafreeAWSEC2instance">Launch a free AWS EC2 instance</a>
      </li>
      <li>
        <a href="#SetupMySQLandApacheTomcatontheAWSinstance">Setup MySQL and Apache/Tomcat on the AWS instance</a>
      </li>
    </ol>
  </li>
  <li>
    <a href="#Task3:JoinGithubOrganizationandcreatearepoforyourteam.">Task 3: Join Github Organization and create a repo for your team.</a>
  </li>
  <li>
    <a href="#Task4:CreateaMySQLDatabase">Task 4: Create a MySQL Database</a>
  </li>
  <li>
    <a href="#Task5:ImplementtheMovieListpageoftheFablixApplication">Task 5: Implement the Movie List page of the Fablix Application</a>
  </li>
  <li>
    <a href="#Task67:ImplementSingleMovieandSingleStarpage">Task 6 &amp; 7: Implement "Single Movie" and "Single Star" page</a>
    <ol>
      <li>
        <a href="#CreateYourprojectinEclipse">Create Your project in Eclipse</a>
      </li>
      <li>
        <a href="#Setupgitignorefile">Setup gitignore file</a>
      </li>
    </ol>
  </li>
  <li>
    <a href="#ExamplesandResources">Examples and Resources</a>
    <ol>
      <li>
        <a href="#Whenimplementingthemovielistfeatures">When implementing the movie list features</a>
      </li>
      <li>
        <a href="#JDBC">JDBC</a>
      </li>
      <li>
        <a href="#TomcatServletExample">Tomcat Servlet Example</a>
      </li>
      <li>
        <a href="#OtherOnlineResources">Other Online Resources</a>
      </li>
    </ol>
  </li>
  <li>
    <a href="#ProjectSubmission">Project Submission</a>
  </li>
  <li>
    <a href="#Demonstration">Demonstration</a>
  </li>
</ol>
</div><p>
</p>
<h1 id="CS122B:Project1">CS122B: Project 1</h1>
<p>
<strong>Due: Week 3 Monday, 01/21, 11:45pm. Due on Github.</strong><br />
</p>
<h1 id="Tasks">Tasks</h1>
<ol><li>Setup Apache Tomcat (on your development machine)
</li><li>Setup an Amazon AWS instance
</li><li>Join Github Organization and create a repo for your team
</li><li>Create a MySQL database with provided movie info
</li><li>Implement the Movie List page of the Fablix Application
</li><li><em>Implement the "Single Movie" page</em>
</li><li><em>Implement the "Single Star" page</em>
</li></ol><hr />
<h1 id="Task1:SetupApacheTomcat">Task 1: Setup Apache Tomcat</h1>
<p>
We assume you already have Java installed on your machine.<strong><em>The required version is <a class="ext-link" href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html"><span class="icon">â€‹</span>Java 8</a>.</em></strong>
</p>
<p>
Download and install the latest Apache Tomcat from <a class="ext-link" href="https://tomcat.apache.org/download-80.cgi#8.5.29"><span class="icon">â€‹</span>https://tomcat.apache.org/download-80.cgi#8.5.29</a> on your development machine. Go to "8.5.29" -&gt; "Binary Distributions" -&gt; "Core", for Mac and Linux, download the "zip" file, for Windows, download the "32-bit or 64-bit Windows zip".Unzip the downloaded file.
</p>
<p>
Follow this <a class="ext-link" href="https://javatutorial.net/how-to-install-and-configure-tomcat-8"><span class="icon">â€‹</span>Install and Configure Tomcat 8 tutorial</a> to set up Tomcat. For the "Change Servlet Compiler to use Java 8" section, the "conf/web.xml" doesn't have the lines as the tutorial said. You can add these lines to the place suggested by the tutorial.
</p>
<ul><li>For Mac and Linux users, you may need to give permission to the "sh" files by going to the "bin" folder and then running: <tt> sudo chmod +x *.sh </tt>
</li><li>Be sure to change your Tomcat password to something else than "admin". Otherwise your website will be very vulnerable.
</li></ul><p>
You should see the following interfaces if you setup Tomcat successfully: <a href="https://grape.ics.uci.edu/wiki/public/attachment/wiki/cs122b-2019-winter-project1/tomcat-startup-interface.png">Screenshot 1</a>, <a href="https://grape.ics.uci.edu/wiki/public/attachment/wiki/cs122b-2019-winter-project1/tomcat-app-manager.png">Screenshot 2</a>
</p>
<h2 id="ApacheTomcatEclipseIntegration">Apache Tomcat Eclipse Integration</h2>
<p>
Apache Tomcat makes hosting your applications easy. The Eclipse IDE makes development easy.  We recommend you to use the latest version of Eclipse EE (EE stands for Enterprise Edition and has built-in support for application and web servers including Tomcat)
</p>
<p>
Eclipse Downloads:
</p>
<ul><li><a class="ext-link" href="https://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/oxygen3"><span class="icon">â€‹</span>Eclipse Java EE Edition (recommended) </a>
</li><li><a class="ext-link" href="http://www.eclipse.org/downloads/packages/eclipse-ide-java-developers/oxygen3"><span class="icon">â€‹</span>Eclipse Standard Edition</a>
</li></ul><p>
The following tutorial is a quick start guide and will help you set up your development environment in eclipse. <em>Use the latest Tomcat version instead of the shown version in the tutorial</em>.     <em>Note</em>: If you opt for Eclipse EE edition, you can skip the installation of Eclipse Web Tools Platform when following the quick start guide.
</p>
<ul><li><a class="ext-link" href="http://www.mulesoft.com/tomcat-eclipse"><span class="icon">â€‹</span>Apache Tomcat Eclipse Integration Quickstart Guide</a>
</li></ul><p>
These tutorials can also be helpful:
</p>
<ul><li><a class="ext-link" href="http://o7planning.org/en/10209/installing-and-configuring-tomcat-server-in-eclipse"><span class="icon">â€‹</span>Install and Configure Tomcat Server in Eclipse</a>
</li><li><a class="ext-link" href="https://javatutorial.net/run-tomcat-from-eclipse"><span class="icon">â€‹</span>Run Tomcat from Eclipse</a>
</li></ul><p>
For reference only, if you find more comfortable using other powerful code editors and IDEs :
</p>
<ul><li><a class="ext-link" href="https://www.jetbrains.com/idea/"><span class="icon">â€‹</span>IntellJ IDEA</a>
</li><li><a class="ext-link" href="https://code.visualstudio.com"><span class="icon">â€‹</span>Visual Studio Code</a>
</li></ul><h2 id="SetupMaven">Setup Maven</h2>
<p>
Maven is a tool to manage project dependencies and automate the build process. 
</p>
<p>
Maven is built in with Eclipse. But to run it on command line you also need to install maven on your development machine.
</p>
<p>
To install Maven:
</p>
<ul><li>Windows: follow <a class="ext-link" href="https://www.google.com/search?q=install+maven+on+windows&amp;oq=install+maven+on+windows&amp;aqs=chrome..69i57j0l5.3082j0j4&amp;sourceid=chrome&amp;ie=UTF-8"><span class="icon">â€‹</span>this tutorial</a>
</li><li>Mac: Run "brew install maven"
</li><li>Ubuntu: Run "sudo apt-get install maven"
</li></ul><h1 id="Task2:SetupanAWSInstance">Task 2: Setup an AWS Instance</h1>
<p>
<span id="setup-aws"></span>You need to launch an Amazon <a class="ext-link" href="https://aws.amazon.com/console/"><span class="icon">â€‹</span>AWS EC2 instance</a> to repeat the tasks above. Make sure to use the <strong>free-tier 64-bit Ubuntu instances</strong> so that we can make our future instructions consistent. You are welcome to participate in the â€‹<a class="ext-link" href="https://aws.amazon.com/education/awseducate/"><span class="icon">â€‹</span>AWS Educate</a> program, which can provide $100 AWS credits per student. (UCI is a member institution.)
</p>
<p>
Generally, similar to many other tasks in this quarter, we expect you to figure out how to do many tasks by reading online materials.  <a class="ext-link" href="https://aws.amazon.com/free/"><span class="icon">â€‹</span>This</a> link is a good place to start from.
</p>
<h2 id="LaunchafreeAWSEC2instance">Launch a free AWS EC2 instance</h2>
<ol><li>Go to <a class="ext-link" href="https://aws.amazon.com/console/"><span class="icon">â€‹</span>AWS Console</a> to sign up. You will need to enter a valid credit card. Don't worry; as long as you choose a free-tier instance and remove it after the end of the quarter, you will not be charged.
</li><li>When you are done, login to the AWS console.
</li><li>Launch a new <strong>Ubuntu 16.04</strong> free-tier <strong>t2.micro</strong> EC2 instance. Notice that you need to generate and download a key to ssh to the machine, and it may take a few minutes for the instance to be initialized.
</li><li>After the instance is running, you will see a public IP address assigned to it. Keep this IP: you are required to give us this IP to demo project 1.
</li><li>When viewing the list of instances, you can click on the "connect" button, on the top to get instructions on how to use SSH to connect to the instance. By default, only the SSH port, 22, is open. In order to get other services (e.g., HTTP, HTTPS, and Tomcat) to be available to other machines, you will need to open the corresponding ports. <strong>To do so, when the instance is checked, select the security group, go to the "inbound" tab, and add more rules</strong>.
</li></ol><h2 id="SetupMySQLandApacheTomcatontheAWSinstance">Setup MySQL and Apache/Tomcat on the AWS instance</h2>
<p>
This part assumes you have SSH access to the Ubuntu 14.04 AWS instance.
</p>
<ol><li><a class="ext-link" href="https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-16-04"><span class="icon">â€‹</span>Install MySQL</a>.
</li><li><a class="ext-link" href="https://help.ubuntu.com/lts/serverguide/httpd.html"><span class="icon">â€‹</span>Install Apache Web server</a>. <strong>Open port 80</strong>.
</li><li><a class="ext-link" href="https://medium.com/coderscorner/installing-oracle-java-8-in-ubuntu-16-10-845507b13343"><span class="icon">â€‹</span>Install Java</a> <br />
</li><li><a href="https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2019-spring-project1-install-tomcat-on-aws">Install Tomcat on AWS</a>. Setup its application app manager page and test it using the URL <a class="ext-link" href="http://YOUR_PUBLIC_IP:8080/manager/html"><span class="icon">â€‹</span>http://YOUR_PUBLIC_IP:8080/manager/html</a>. <strong>Open port 8080</strong>. This part is a little tricky, so read the instructions carefully.
</li><li>Install Maven: "sudo apt-get install maven"
</li></ol><p>
Here are two cheat sheets of Linux/Ubuntu commands:
</p>
<ul><li><a class="ext-link" href="http://cli.learncodethehardway.org/bash_cheat_sheet.pdf"><span class="icon">â€‹</span>http://cli.learncodethehardway.org/bash_cheat_sheet.pdf</a>
</li><li><a class="ext-link" href="http://www.cheat-sheets.org/saved-copy/ubunturef.pdf"><span class="icon">â€‹</span>http://www.cheat-sheets.org/saved-copy/ubunturef.pdf</a>
</li></ul><h1 id="Task3:JoinGithubOrganizationandcreatearepoforyourteam.">Task 3: Join Github Organization and create a repo for your team.</h1>
<p>
This course uses Github for version control. The students are expected to use Github as explained below.
</p>
<ul><li>Create an account on Github if you don't have one. Then provide us your username in the Google Spreadsheet <a class="ext-link" href="https://docs.google.com/spreadsheets/d/1Nmx75Oh0yf8S4BbqQJsGPdWuIJCqAooMkh1YHc1qzpU/edit?usp=sharing"><span class="icon">â€‹</span>Github Usernames</a>.
</li><li>Wait for the invitation from our staff to join the <a class="ext-link" href="https://github.com/UCI-Chenli-teaching"><span class="icon">â€‹</span>UCI-Chenli-teaching organization</a>. The invitation might take a few days to be sent out based on our schedule.
</li><li>One member from each team needs to create a <strong>private</strong> repository. The repository name should be of the form 'cs122b-winter19-team-x' where 'x' is your assigned team number, e.g., "cs122b-winter19-team-1". Other members can then be added to the repository as collaborators (by following steps given <a class="ext-link" href="https://help.github.com/articles/inviting-collaborators-to-a-personal-repository/"><span class="icon">â€‹</span>here</a>).
</li><li>You must wait for the invitation from us and <strong>create a private repository within the organization UCI-Chenli-teaching</strong>. Don't create a private repository on your own. 1) Go to <a class="ext-link" href="https://github.com/UCI-Chenli-teaching"><span class="icon">â€‹</span>UCI-Chenli-teaching organization</a>. 2) click the <strong>New</strong> button to create a repository. 3) Type in the name and choose <strong>private</strong>.
</li></ul><p>
Create repo under the organization
</p>
<p>
<a style="padding:0; border:none" href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/create-repo-button.png"><img src="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/create-repo-button.png" /></a>
</p>
<p>
Type the repo name properly and choose "private"
</p>
<p>
<a style="padding:0; border:none" href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/create-repo-interface.png"><img src="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/create-repo-interface.png" /></a>
</p>
<ul><li>You can then begin with your project using Github. Put the code of your project in your team's Github repository.
</li></ul><p>
We have a <a href="https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2019-winter-project1-git">wiki</a> to get you started with Github for this course. Go through one of these online tutorials to get familiar with Git and Github if you are not familiar with them.
</p>
<ul><li><a class="ext-link" href="https://try.github.io"><span class="icon">â€‹</span>https://try.github.io</a>
</li><li><a class="ext-link" href="https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners"><span class="icon">â€‹</span>https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners</a>
</li></ul><h1 id="Task4:CreateaMySQLDatabase">Task 4: Create a MySQL Database</h1>
<ul><li>Download a MySQL database for your development machine from <a class="ext-link" href="http://dev.mysql.com/downloads/mysql/"><span class="icon">â€‹</span>http://dev.mysql.com/downloads/mysql/</a>;
</li><li>Create a database called "moviedb" with the following tables:<br />
</li></ul><table class="wiki">
<tr><td> Table Name<br /> </td><td> Attributes<br /> </td><td> Notes 
</td></tr><tr><td> movies<br /> </td><td> id:varchar(10) (primary key)<br /> title:varchar(100) <br /> year:integer <br /> director:varchar(100) <br /> </td><td> required <br /> required <br /> required <br /> required 
</td></tr><tr><td> stars<br /> </td><td> id:varchar(10) (primary key)<br /> name:varchar(100) <br /> birthYear:integer <br /> </td><td> required<br /> required <br /> not required<br /> 
</td></tr><tr><td> stars_in_movies<br /> </td><td> starId:varchar(10), referencing stars.id<br /> movieId:varchar(10), referencing movies.id<br /> </td><td> all attributes required 
</td></tr><tr><td> genres<br /> </td><td> id:integer (primary key)<br /> name:varchar(32) <br /> </td><td> all attributes required; "id" should be <br />"AUTO_INCREMENT" 
</td></tr><tr><td> genres_in_movies<br /> </td><td> genreId:integer, referencing genres.id<br /> movieId:varchar(10]), referencing movies.id<br /> </td><td> all attributes required 
</td></tr><tr><td> customers<br /> </td><td> id:integer (primary key)<br /> firstName:varchar(50) <br /> lastName:varchar(50) <br /> ccId:varchar(20), referencing creditcards.id<br /> address:varchar(200) <br /> email:varchar(50) <br /> password:varchar(20) <br /> </td><td> all attributes required; "id" should be <br />"AUTO_INCREMENT" 
</td></tr><tr><td> sales<br /> </td><td> id:integer (primary key)<br />       customerId:integer, referencing customers.id<br /> movieId:varchar(10), referencing movies.id<br /> saleDate:date  <br /> </td><td> all attributes required; "id" should be <br />"AUTO_INCREMENT" 
</td></tr><tr><td> creditcards<br /> </td><td> id:varchar(20), (primary key)<br /> firstName:varchar(50) <br /> lastName:varchar(50) <br /> expiration:date <br /> </td><td> all attributes required 
</td></tr><tr><td> ratings<br /> </td><td> movieId:varchar(10), referencing movies.id<br /> rating:float <br /> numVotes:integer <br /> </td><td> all attributes required 
</td></tr></table>
<p>
The table-creation SQL statements should be written in a <strong>createtable.sql</strong> file.  All varchar() fields for which there is no data (i.e., the fields contents are missing or unknown) are the empty string (''); other non-required fields which have no data are null. Required fields have the constraint that they are not null. <br /> <br />
</p>
<ul><li>Use the provided <a class="attachment" href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/movie-data.sql" title="Attachment 'movie-data.sql' in cs122b-2019-winter-project1">movie-data.sql</a><a class="trac-rawlink" href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/movie-data.sql" title="Download">â€‹</a> file to populate the tables.
</li></ul><h1 id="Task5:ImplementtheMovieListpageoftheFablixApplication">Task 5: Implement the Movie List page of the Fablix Application</h1>
<p>
<a style="padding:0; border:none" href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/122b-project1-diagram.jpg"><img src="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/122b-project1-diagram.jpg" /></a>
</p>
<p>
You only need to implement the Movie List, Single Movie and Single Star page of the Fablix Application. You'll implement other parts in project 2. You do NOT need to implement the sorting and prev/next features.
</p>
<p>
In project 1, the "Movie list" page shows the top 20 rated movies, sorted by the rating. You don't need to show all the movies. Each movie needs to contain the following information:
</p>
<ul><li>title
</li><li>year;
</li><li>director;
</li><li>list of genres;
</li><li>list of stars
</li><li>rating
</li></ul><h1 id="Task67:ImplementSingleMovieandSingleStarpage">Task 6 &amp; 7: Implement "Single Movie" and "Single Star" page</h1>
<ul><li>If the user clicks on a movie, the corresponding "Single Movie" page displays all the information about the movie, including its id, title, year, director, a list of genres, a list of stars (hyperlinked), and rating.
</li><li>If the user clicks on a star, the corresponding "Single Star" page displays all the information about this star, including the name, year of birth, and a list of (hyperlinked) movies in which the star acted. The user can jump between a page for a movie and a page for a star following hyperlinks.
</li></ul><h2 id="CreateYourprojectinEclipse">Create Your project in Eclipse</h2>
<p>
To create project 1 in eclipse, you need to create a dynamic web project. 
</p>
<p>
Follow <a href="https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2019-winter-project1-eclipse-project">Create New Project in Eclipse</a> to properly setup your project 1 in Eclipse.
</p>
<p>
Make sure that the project1 Eclipse project is created <strong>within your git repository folder</strong>.
</p>
<p>
If you meet any problems, <a class="ext-link" href="http://www.thejavageek.com/2013/10/22/creating-new-dynamic-web-project-eclipse/"><span class="icon">â€‹</span>this guide</a> can also be helpful.
</p>
<h2 id="Setupgitignorefile">Setup gitignore file</h2>
<p>
When put your project code in the Git repository, a good practice of using Git is to only put the source code files in the Git repository, and ignore all the compiled files (such as .class files, executables) and other irrelevant files (such as files generated by Eclipse). The purpose of ".gitignore" file is to tell git to ignore certain files according to some patterns. You can learn more about gitignore <a class="ext-link" href="https://medium.com/@haydar_ai/learning-how-to-git-ignoring-files-and-folders-using-gitignore-177556afdbe3"><span class="icon">â€‹</span>here</a>.
</p>
<p>
We provide a sample <a href="https://grape.ics.uci.edu/wiki/public/attachment/wiki/cs122b-2019-winter-project1/gitignore">gitignore</a> file that you can directly use in your project. Download the file and put the file into your project git folder. Then rename the file from "gitignore" to ".gitignore" (notice we <strong>add a dot</strong> "." in the beginning). For Mac and Linux users, the file then become hidden, don't worry, this is the correct behavior. Go to the terminal and type "git status" and you can see the ".gitignore" file. For Windows users, see <a class="ext-link" href="https://stackoverflow.com/questions/10744305/how-to-create-gitignore-file"><span class="icon">â€‹</span>this stackoverflow question</a> to create the ".gitignore" file. Git will then automatically read the ".gitignore" file and ignore the unnecessary files.
</p>
<h1 id="ExamplesandResources">Examples and Resources</h1>
<h2 id="Whenimplementingthemovielistfeatures">When implementing the movie list features</h2>
<p>
<em>An "old" way to develop Web sites is to use Java Servlet or JSP to generate HTML pages. This approach is gradually becoming out of date and no longer considered a good practice. We suggest you separate the frontend and backend. The frontend fetches the data by sending HTTP requests to the backend and then displays the returned data. The Java Servlet backend only provides API in a JSON format to the frontend. The frontend needs to be written in HTML, CSS, and JS files. <strong>This approach is not required, but if you choose to implement this way, you will get 3% extra credit on project 1, and 5% on project 2. </strong>
</em></p>
<p>
This approach involves lots of JavaScript and jQuery programming, so we highly recommend you to go through this very nice online tutorial: â€‹<a class="ext-link" href="http://jqfundamentals.com/"><span class="icon">â€‹</span>http://jqfundamentals.com/</a><em>
</em></p>
<p>
<em>Here's an example â€‹<a class="ext-link" href="https://github.com/UCI-Chenli-teaching/project1-api-example"><span class="icon">â€‹</span>project1-api-example</a> that uses this approach to show the API example using frontend-backend separation, which is similar to the project1-star-example we provided. Note starting with this example we use DataSource managed by Tomcat, thus we don't have to set database information in each servlet. To config a DataSource, following tutorial here â€‹<a class="ext-link" href="https://tomcat.apache.org/tomcat-8.0-doc/jndi-datasource-examples-howto.html"><span class="icon">â€‹</span>https://tomcat.apache.org/tomcat-8.0-doc/jndi-datasource-examples-howto.html</a> Follow the instruction on README.md to deploy and test the examples on tomcat.</em>
</p>
<h2 id="JDBC">JDBC</h2>
<p>
Your Java Servlet need to talk to MySQL using JDBC. Download a MySQL JDBC driver file from â€‹<a class="ext-link" href="https://dev.mysql.com/downloads/connector/j"><span class="icon">â€‹</span>https://dev.mysql.com/downloads/connector/j</a>
</p>
<p>
<span id="jdbc-samples"></span>Here are some sample JDBC programs. The <a class="attachment" href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/cs122b-setup-scripts.txt" title="Attachment 'cs122b-setup-scripts.txt' in cs122b-2019-winter-project1">Setup Scripts</a><a class="trac-rawlink" href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/cs122b-setup-scripts.txt" title="Download">â€‹</a> will give you the instructions on how to create the required database/tables and how to execute the sample code.
</p>
<ul><li><a class="attachment" href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/cs122b-setup-scripts.txt" title="Attachment 'cs122b-setup-scripts.txt' in cs122b-2019-winter-project1">Setup Scripts</a><a class="trac-rawlink" href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/cs122b-setup-scripts.txt" title="Download">â€‹</a>
</li><li><a class="attachment" href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/JDBC1.java" title="Attachment 'JDBC1.java' in cs122b-2019-winter-project1">JDBC1.java - obtaining metadata and table contents</a><a class="trac-rawlink" href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/JDBC1.java" title="Download">â€‹</a>
</li><li><a class="attachment" href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/JDBC2.java" title="Attachment 'JDBC2.java' in cs122b-2019-winter-project1">JDBC2.java - deleting a record</a><a class="trac-rawlink" href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/JDBC2.java" title="Download">â€‹</a>
</li></ul><h2 id="TomcatServletExample">Tomcat Servlet Example</h2>
<p>
<span id="TomcatExample"></span>
</p>
<p>
<em>You are recommend to implement project 1 using the Java servlet techniques covered in the class with frontend-backend separation. </em>
</p>
<p>
We've prepared this <a class="ext-link" href="https://github.com/UCI-Chenli-teaching/project1-star-example"><span class="icon">â€‹</span>project1-star-example</a> that help you get started. This project contains a Java Servlet that talks to MySQL to get star information and return an HTML to display a table of stars. 
We also have <a class="ext-link" href="https://github.com/UCI-Chenli-teaching/project1-api-example"><span class="icon">â€‹</span>project1-api-example</a> for frontend-backend separation implementation.
</p>
<p>
Follow <a href="https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2019-spring-project1-import-project">Import Project to Eclipse</a> to import this example project to Eclipse and export the WAR file.
</p>
<p>
You can run the project directly from Eclipse if you finished the Eclipse Tomcat Integration steps. To directly deploy the WAR file to tomcat, you can either deploy it through the tomcat manager webpage, or deploy it through the command line.
</p>
<p>
To deploy the WAR file using Tomcat manager webpage:
</p>
<ol><li>Start the Tomcat server. Go to <a class="ext-link" href="http://localhost:8080"><span class="icon">â€‹</span>http://localhost:8080</a>; this is your local web page. The tomcat welcome page should appear.
</li><li>Click "Tomcat Manager", enter your tomcat admin username and password. 
</li><li>Under "Deploy directory or WAR file located on server" you should see a deploy button. You need not specify a path. If you simply click the deploy button, Tomcat will automatically refresh its list of applications.
</li><li>the new project should appear in the list. Click on the name of the project, and it should take you to the index.html page
</li><li>To see the star servlet, go to "localhost:8080/project1-star-example/stars", you should see a table containing star information.
</li></ol><p>
To deploy the WAR file in command line:
</p>
<ol><li>generate the WAR file using "mvn clean package". The war file is in the "target" folder.
</li><li>copy the WAR file to "tomcat_directory/webapps". For example "cp target/project1-star-example.war tomcat_directory/webapps/"
</li></ol><h2 id="OtherOnlineResources">Other Online Resources</h2>
<p>
Here are some relevant tutorials. You can start the project after learning the basics. Don't spend too much time on learning the advanced content. You won't use them until Project 2.
</p>
<ul><li>HTML and CSS tutorial: <a class="ext-link" href="http://htmldog.com/guides/html/beginner/"><span class="icon">â€‹</span>http://htmldog.com/guides/html/beginner/</a>
</li><li>An interactive HTML tutorial: <a class="ext-link" href="https://www.codecademy.com/learn/learn-html"><span class="icon">â€‹</span>https://www.codecademy.com/learn/learn-html</a>
</li><li>A good Java Servlet Tutorial: <a class="ext-link" href="http://tutorials.jenkov.com/java-servlets/index.html"><span class="icon">â€‹</span>http://tutorials.jenkov.com/java-servlets/index.html</a>
</li><li>Another good Java Servlet Tutorial: <a class="ext-link" href="http://o7planning.org/en/10169/java-servlet-tutorial"><span class="icon">â€‹</span>http://o7planning.org/en/10169/java-servlet-tutorial</a>
</li></ul><h1 id="ProjectSubmission">Project Submission</h1>
<p>
We'll take your Github code as submissions. You need to include all the code in your Github repository, including Java, SQL, HTML, CSS, etc... You don't have to submit anything on EEE.
</p>
<p>
On the night of the end of the grace period, we will run a script that gets the latest commit ID in your repository. We'll use the time of the latest commit to determine if you use the Grace Period or not. <strong>So if you don't plan to use the Grace Period, don't push anything to Github during the 24-hour Grace Period.</strong> After the 24-hour grace period, you can continue using your repository normally for the next project.
 
</p>
<ul><li><strong><em>Do not use the upload file feature in Github to submit your codebase.</em></strong>
</li><li>Remember that we will only be checking the code in the <strong>master branch</strong> of your repository.
</li><li>Do not try to cheat, e.g., by modifying the timestamp of a commit to an earlier date. We'll use the time that you push your commits to Github. So be sure to push your changes to Github before the deadline!  Such cheating cases will be subject to very bad consequences.
</li><li>To avoid any surprises, we will be publishing the final commit number that we have recorded for every team. It's your responsibility to check the commit number published by us. If you think we have made a mistake on the commit ID, you need to tell us ASAP.
</li></ul><h1 id="Demonstration">Demonstration</h1>
<p>
<strong>You are required to demonstrate  this project</strong>. Your task is to show us <strong>(in 15 minutes)</strong> that your work is correctly and completely carried out and the course project is ready to move to phase 2. Your demo will include the following steps:
</p>
<p>
a) Make sure you AWS instance has everything properly installed (Java, MySQL, Tomcat, git). Make sure that the Tomcat server is running and the Tomcat admin page is accessible. 
</p>
<p>
b) On the AWS instance, clone your project repository before the demo. During the demo, show us that you checkout to the commit ID that we recorded. You can use these commands: 
</p>
<pre class="wiki">git checkout master // checkout to the master branch
git status // show us nothing is changed in your repository
git log // the first commit ID that shows up should match the commit ID we have

If "git status" shows that some files are changed, we can use "git stash" to temporarily revert the changed files. You can use "git stash pop" to get those files back later.
</pre><p>
c) On the AWS instance, you should drop the moviedb before the demo. Your repository should contain the "create_table.sql" file that you write. Use your "create_table.sql"  to show us that you can create the moviedb and all the tables. Download the movie-data.sql file using "wget <a href="https://grape.ics.uci.edu/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/movie-data.sql">https://grape.ics.uci.edu/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/movie-data.sql</a>", then populate the tables using the data sql file. 
</p>
<p>
d) On your local development machine, you should already have your git repository. During the demo, do "get checkout master" first, then checkout to the commit ID that we recorded.
</p>
<p>
e) If you use Eclipse, then you should already have your project in Eclipse. Show us that the project in Eclipse is in your git repository. Export the WAR file using Eclipse (right click -&gt; export -&gt; WAR file). If you are not using Eclipse, you should figure out how to compile the project properly and generate the WAR file on your own. 
</p>
<p>
f) Open your AWS instance's Tomcat admin console on your browser, deploy the WAR file you just exported. Go to your webpage and demonstrate the correctness, completeness, and performance of all the required features.
</p>
<p>
We can ask questions during the demo. Each of the team members needs to show that you understand what's going on with you project. Failing to answer the questions will lead to deductions.
</p>
<p>
Before the demo, you SHOULD test the whole process on you own. It is completely up to you to plan your demo so that all the required features are displayed and the grader can see the quality of your work in the given time frame.<strong> <em>If the demostration fails to finish in 15 minutes, it will be abroted, rescheduled with 10% penalty in the current project. </em>
</strong></p>
<p>
Demonstration schedule will be posted later.
</p>
</div>
          
          
        
        
      </div>
      
    <div id="attachments">
        <h3 class="foldable">Attachments <span class="trac-count">(11)</span></h3>
        <div>
          <ul>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/create-repo-button.png" title="View attachment">create-repo-button.png</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/create-repo-button.png" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="39282 bytes">38.4 KB</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-07T16%3A28%3A15-08%3A00&amp;precision=second" title="See timeline at Jan 7, 2019 4:28:15 PM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/create-repo-interface.png" title="View attachment">create-repo-interface.png</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/create-repo-interface.png" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="118777 bytes">116.0 KB</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-07T16%3A28%3A37-08%3A00&amp;precision=second" title="See timeline at Jan 7, 2019 4:28:37 PM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/gitignore" title="View attachment">gitignore</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/gitignore" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="2835 bytes">2.8 KB</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-07T16%3A28%3A49-08%3A00&amp;precision=second" title="See timeline at Jan 7, 2019 4:28:49 PM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/JDBC1.java" title="View attachment">JDBC1.java</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/JDBC1.java" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="1660 bytes">1.6 KB</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-07T16%3A29%3A27-08%3A00&amp;precision=second" title="See timeline at Jan 7, 2019 4:29:27 PM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/JDBC2.java" title="View attachment">JDBC2.java</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/JDBC2.java" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="749 bytes">749 bytes</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-07T16%3A29%3A32-08%3A00&amp;precision=second" title="See timeline at Jan 7, 2019 4:29:32 PM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/tomcat-app-manager.png" title="View attachment">tomcat-app-manager.png</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/tomcat-app-manager.png" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="170135 bytes">166.1 KB</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-07T16%3A29%3A38-08%3A00&amp;precision=second" title="See timeline at Jan 7, 2019 4:29:38 PM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/tomcat-startup-interface.png" title="View attachment">tomcat-startup-interface.png</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/tomcat-startup-interface.png" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="209299 bytes">204.4 KB</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-07T16%3A29%3A44-08%3A00&amp;precision=second" title="See timeline at Jan 7, 2019 4:29:44 PM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/cs122b-setup-scripts.txt" title="View attachment">cs122b-setup-scripts.txt</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/cs122b-setup-scripts.txt" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="2238 bytes">2.2 KB</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-07T16%3A38%3A15-08%3A00&amp;precision=second" title="See timeline at Jan 7, 2019 4:38:15 PM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/122b-project1-diagram.jpg" title="View attachment">122b-project1-diagram.jpg</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/122b-project1-diagram.jpg" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="93524 bytes">91.3 KB</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-08T00%3A06%3A41-08%3A00&amp;precision=second" title="See timeline at Jan 8, 2019 12:06:41 AM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/aws-instance-ubuntu-16.4.png" title="View attachment">aws-instance-ubuntu-16.4.png</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/aws-instance-ubuntu-16.4.png" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="37019 bytes">36.2 KB</span>) -
      added by <em>michaelwbh</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-08T00%3A23%3A00-08%3A00&amp;precision=second" title="See timeline at Jan 8, 2019 12:23:00 AM">4 weeks ago</a>.
              </li>
              <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2019-winter-project1/movie-data.sql" title="View attachment">movie-data.sql</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2019-winter-project1/movie-data.sql" class="trac-rawlink" title="Download">â€‹</a>
       (<span title="12107835 bytes">11.5 MB</span>) -
      added by <em>yicongh1</em> <a class="timeline" href="/wiki/public/timeline?from=2019-01-13T15%3A24%3A19-08%3A00&amp;precision=second" title="See timeline at Jan 13, 2019 3:24:19 PM">4 weeks ago</a>.
              </li>
          </ul>
        </div>
    </div>

    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="last first">
          <a rel="nofollow" href="/wiki/public/wiki/cs122b-2019-winter-project1?version=9&amp;format=txt">Plain Text</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/wiki/public/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/wiki/public/about"><strong>Trac 1.0.13</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ