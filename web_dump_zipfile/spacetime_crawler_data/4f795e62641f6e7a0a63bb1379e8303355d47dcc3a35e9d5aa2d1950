¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD7239¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 28 Jun 2006 07:15:11 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueT"1c47-417439374ddc0"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 01:58:12 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueYG<html>
<head>

<style type="text/css">
  <! --
  H { font-family: Arial, Helvetica, Modern; }
  H1 { font-family:  Arial, Helvetica, Modern; font-size:large}
  H2 { font-family: 10pt;  Arial,Helvetica,Modern;   
       padding-top: 1; padding-bottom: 1; padding-left: 2; color:black}
  H3 { font-family:    Arial,Helvetica,Modern; background:#aaccaa;  color:black;
       padding-top: 1; padding-bottom: 1; padding-left: 2; font-size:medium }
  P { font-family: Arial; font-size: small; color: black}
  P.important { margin-left: 0.5cm; margin-right: 1cm; color: red }
  LI { margin-left: 0.5cm; font-family: Arial; font-size: small }
  B  { font-size: smaller }
  table.indent { margin-left: 1cm }
  div.math { font-family: times; text-align: center; margin-top: 1em }
  span.math { font-family: times }
  span.mathi { font-family: times; font-style: italic }
  -->
</style>

<title>CCToolbox Documentation: Curve Format</title>

</head>

<body bgcolor="#eeeeee">
 <H2 align=center>Curve Format</H2>



<div align=center>
<a href="http://www.ics.uci.edu/~sgaffney/software/CCT">CCToolbox</a> |
<a href="../#Down">Download</a> |
<a href="./">Documentation</a> |
<a href="http://www.ics.uci.edu/~sgaffney#contact">Contact</a>
</div>

<!-- <a href="./">Documentation home</a> > Curve format -->




<h3>Curve representation</h3>
   <p>Curves are represented throughout the toolbox in several different
   ways. Some formats are best for computation whereas others are best for
   ease-of-use. The three main formats (<a href="#Cell">Cell</a>, 
   <a href="#Feature">Feature Vector</a>, and <a href="#Seq">Sequence</a>)
   used in this toolbox are discussed below; however, the standard user need
   only be concerned with the <a href="#Cell">Cell format</a> and how to pass curve data to
   functions using the <a href="#Trajs">'Trajs' structure</a>.



<h3 id="Trajs">The 'Trajs' structure</h3>
<p>All user functions in the toolbox accept curve data through the standard
   argument named 'Trajs'. In common use, one should pass-in a structure for
   this argument with the following two fields:
   <pre>
     Trajs
      .Y   : observed curve values
      .X   : observation time-points at which Trajs.Y was observed
   </pre>
   <p>The field 'X' is optional in which case a default value for it is assumed as
   described below. It is also possible to just pass-in Trajs.Y directly.
   In other words, you can dispense with the structure altogether if you are
   only interested in the curve values and not the time-points themselves. The
   user functions in the toolbox will correctly detect whether or not a 
   structure has been used.
   
   <p>The 'X' and 'Y' fields can be given in either the Cell or Feature Vector
   formats described below; the Cell format is preferred. Before we detail the
   curve formats, we list some general curve notation.
     
   <p>Assume that we have curves in the form y=f(x) so that the observed curve
   values y are functions of an independent variable x (usually associated
   with time). The curve values y can be multivariate but x is assumed to
   be univariate.
   <pre>
     n  : the number of curves
     ni : length of the i-th curve
     D  : the dimension of y (e.g. D is 1 if y is univariate)
     N  : the total number of "points" in all curves, this is equal to the
          sum of the lengths of all curves (independent of the dimension of y)
   </pre>



<h3 id="Cell">Cell format</h3>
<p>In this format curves are represented using cell arrays. Let Y be an 
   n-by-1 cell array. Then Y{i} is an ni-by-D matrix holding the observed curve
   values for the i-th curve.  If the observation times (i.e., x) are uniform 
   and regular across all curves, then there is no need to specify
   or keep track of X directly. In this case, each curve is assumed to have
   time points [0,1,...,(ni-1)]. Otherwise, X is an n-by-1 cell array and X{i} is
   a vector of length ni holding the time points for the i-th curve. 
   
   <p>As a special case, if X is a single vector, then it is assumed that 
   all curves share the specified time points up to their length ni. In 
   this case, the length of the vector X must be greater than or equal to 
   the longest curve in Y. 




<h3 id="Feature">Feature vector format</h3>
<p>Sets of curves are represented by a single matrix. The n curves
   are all assumed to have uniform length m and dimension D. Thus the curve
   values can be contained in the matrix Y of size n-by-m-by-D. The observation
   times are not usually important when curves are represented in this format.
   However, the toolbox will assume the time points [0,1,...,(m-1)] if needed.
   Similarly, X can be a single vector as described above in the <a href="#Cell">cell
   format</a> section.



<h3 id="Seq">Sequence format</h3>
<p>This format represents curves using three matrices: Y, X, and Seq.
   The format is used internally for cluster algorithms in the CCToolbox 
   and is not usually embedded in a 'Trajs' structure for user functions.
   The three matrices are laid out as follows:
   <ol>
     <li>Y is an N-by-D matrix holding the N observed curve values (each of
         dimension D), one curve after another.
     <li>X is an N-by-1 matrix holding the N time-points at which the curve 
         values in Y were observed. In advanced usage, X can also be 
         an N-by-(p+1) regression matrix where p gives the order of the 
         regression (i.e., the matrix will be used directly without 
         modification). However, this can only be used when no time
         transformations are allowed (i.e., <b>lrm</b>, <b>srm</b>, <b>lrm_d</b>, 
         <b>srm_d</b>, <b>lrm_cd</b>, <b>srm_cd</b>.)
     <li>Seq is a vector of length (n+1) holding the curve offsets into X 
         and Y (e.g., Seq(3) gives the starting index of the third curve in 
         both X and Y). Seq(n+1) is ALWAYS equal to Seq(n) + nj, where
         nj equals the length of the last curve. In other words, Seq(n+1)
         points to the position just beyond the last curve entry. This
         means that Seq(n+1)-1 is always equal to N (the total number of
         points, as defined above).
   </ol>



<h3 id="Using">Using the different curve formats</h3>
<p>As far as the common user is concerned, there is no need to use anything
   other than the standard 'Trajs' structure and the Cell format.
   However, some functions only operate on or return specific formats. 
   One can usually tell what formats are acceptable by noting the name of 
   the input/output arguments for a function.
   
   <p>Functions receive or return curve data using two different parameter sets:
   (1) either the single argument 'Trajs', or (2) the three arguments Y,
   X, and Seq. In the latter case, only the sequence format is acceptable. In
   the former case (when 'Trajs' is specified), the function accepts any valid
   'Trajs' structure as well as Trajs.Y itself (as described above).



<h3></h3>
<div align=center>
<a href="#top">Top</a> |
<a href="http://www.ics.uci.edu/~sgaffney/software/CCT">CCToolbox</a> |
<a href="../#Down">Download</a> |
<a href="./Documentation</a> |
<a href="http://www.ics.uci.edu/~sgaffney#contact">Contact</a>
</div>



</body>

</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ