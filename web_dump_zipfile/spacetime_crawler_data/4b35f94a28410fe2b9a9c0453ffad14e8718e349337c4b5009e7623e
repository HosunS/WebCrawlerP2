¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD5983¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueXjApache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 17 Dec 2010 19:06:21 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueT"175f-4979fdda4c540"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXTue, 05 Feb 2019 22:16:17 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY_<html>
<head>
    <title>Ucigame - Gallery - FlippedOut</title>
<link href="../stylesheet.css" rel="stylesheet" type="text/css">
</head>
<body>

<center><h2>Ucigame - Gallery - FlippedOut</h2></center>

<h4>
<a href="../index.html">Home</a> |
<a href="../getting-started.html">Getting Started</a> |
<a href="../reference.html">Reference</a> |
<a href="../java.html">Introduction to Java</a> |
<a href="../gallery.html">Gallery</a>
</h4>

<p>
<table>
<tr>
<td width="300" valign="top">
<applet
   code="FlippedOut.class"
   codebase="."
   archive="../ucigame.jar"
   width="250"
   height="250"
   border="0"
>
Your browser cannot show Java applets.
</applet>
</td>
<td width=600 valign="top" halign="center">
This demo illustrates a number of Ucigame features, including
sound and sprite rotation.
The art in <a href="images/char9.png">images/char9.png</a> and
<a href="images/blocks1.png">images/blocks1.png</a> comes from
Ari Feldman's marvelous
<a href="http://www.flyingyogi.com/fun/spritelib.html">SpriteLib</a>
collection of sprites.
<br>
Keyboard controls: <br>
<table>
<tr><td>UP		</td><td>give cat a boost</td></tr>
<tr><td>R		</td><td>rotate cat</td></tr>
<tr><td>B		</td><td>rotate block</td></tr>
<tr><td>SPACE	</td><td>restore cat and block orientation</td></tr>
<tr><td>PAUSE	</td><td>stops the violin solo</td></tr>
<tr><td>HOME	</td><td>starts the violin solo from the beginning with loop</td></tr>
<tr><td>SHIFT	</td><td>starts the violin solo from the beginning, plays once</td></tr>
<tr><td>1		</td><td>stops the piano solo</td></tr>
<tr><td>2		</td><td>starts the piano solo from the beginning with loop</td></tr>
<tr><td>3		</td><td>starts the piano solo from the beginning, plays once</td></tr>
</table>

</td>
</tr>
<tr>
<td colspan=2>
<br>
<b>FlippedOut.java</b>
<br>
<pre>
import ucigame.*;

public class FlippedOut extends Ucigame
{
    Sprite cat;
    Sprite block;
    Sprite tiledBackground;

    Sound violinSolo, pianoSolo;
    Sound bump;

    int catX, catY;                    // cat status variables
    int catSpeed = 2;
    int catRotation = 0;
    boolean headedRight = true;
    boolean upsideDown = false;

    int blockRotation = 0;

    public void setup()
    {
        window.size(250, 250);
        window.title("Flipped Out");
        framerate(30);

        canvas.background(50, 150, 150);

        cat = makeSprite(105, 60);
        cat.addFrames(getImage("images/char9.png", 0),
                            0, 70,        // cat has six frames
                            130, 70,
                            260, 70,
                            390, 70,
                            0, 203,
                            130, 203);

        catX = 0;
        catY = canvas.height()/2 - cat.height()/2;
        cat.position(catX, catY);
        cat.framerate(10);

        block = makeSprite(32, 32);
        block.addFrame(getImage("images/blocks1.png", 0), 240, 138);
        block.position(200, 118);

        tiledBackground = makeSprite(getImage("images/tilableBackground.png"), 250, 50);
        tiledBackground.position(0, 200);

        bump = getSound("sounds/Windows XP Battery Low.wav");
        violinSolo = getSound("sounds/paganini-caprice13.wav");
        pianoSolo = getSound("sounds/Schumann.mp3");
        violinSolo.loop();
    }

    public void draw()
    {
        canvas.clear();
        tiledBackground.draw();

        // Move cat, reversing direction at edge
        catX = catX + catSpeed;
        if (catX + cat.width() >= canvas.width())
        {
            headedRight = false;
            catSpeed = -catSpeed;
        }
        else if (catX <= 0)
        {
            headedRight = true;
            catSpeed = -catSpeed;  // change negative to positive
        }

        // if cat hits the top, flip it upside down
        if (catY <= 0)
            upsideDown = true;

        // If cat is up in the air, move it down
        if (catY < canvas.height() - cat.height())
            catY = catY + 1;
        else
            upsideDown = false;

        cat.position(catX, catY);

        cat.checkIfCollidesWith(block);
        if (cat.collided())
            bump.play();

        block.rotate(blockRotation);
        block.draw();

        if (!headedRight)
            cat.flipHorizontal();
        if (upsideDown)
            cat.flipVertical();
        cat.rotate(catRotation);
        cat.draw();
    }

    // UP    give cat a boost
    // R     rotate cat
    // B     rotate block
    // SPACE restore cat and block orientation
    // PAUSE stops the violin solo
    // HOME  starts the violin solo from the beginning with loop
    // SHIFT starts the violin solo from the beginning, plays once
    // 1     stops the piano solo
    // 2     starts the piano solo from the beginning with loop
    // 3     starts the piano solo from the beginning, plays once
    public void onKeyPress()
    {
        if (keyboard.key() == keyboard.UP)
            catY = catY - 20;
        if (keyboard.key() == keyboard.R)
            catRotation = catRotation + 5;
        if (keyboard.key() == keyboard.B)
            blockRotation = blockRotation + 5;
        if (keyboard.key() == keyboard.SPACE)
        {
            catRotation = 0;
            blockRotation = 0;
        }
        if (keyboard.key() == keyboard.PAUSE)
            violinSolo.stop();
        if (keyboard.key() == keyboard.HOME)
            violinSolo.loop();
        if (keyboard.key() == keyboard.SHIFT)
            violinSolo.play();
        if (keyboard.key() == keyboard.K1)
            pianoSolo.stop();
        if (keyboard.key() == keyboard.K2)
            pianoSolo.loop();
        if (keyboard.key() == keyboard.K3)
            pianoSolo.play();
    }
}
</pre>
</td>
</tr>
</table>

<br>
<br>

</body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ