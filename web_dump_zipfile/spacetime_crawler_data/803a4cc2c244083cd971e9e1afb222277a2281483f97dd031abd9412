¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD4676¢Ak¢DtypeEvaluePContent-EncodingAv¢DtypeEvalueDgzip¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueDVaryAv¢DtypeEvalueOAccept-Encoding¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXFri, 18 Jan 2019 21:54:45 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueX"3174-57fc28f2455ba-gzip"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 00:31:31 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY1t<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
Algorithmica
</h2>
<ul>
<li><b>Visibility with a moving point of view</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
<a href="//www.cs.Princeton.EDU/~dpd/">D.P. Dobkin</a>,
D. Eppstein, and 
<a href="//www.lac.uic.edu/NCDM/grossman.html">R. Grossman</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=320188">
<i>1st ACM-SIAM Symp. Discrete Algorithms,</i>
San Francisco, 1990, pp. 107&ndash;118</a>.<br>
<a href="BerDobEpp-Algo-94.pdf"><i>Algorithmica</i> 11: 360&ndash;378, 1994</a>.
<p>
An investigation of 3d visibility problems in which the viewing
position moves along a straight flight path, with various
assumptions on the complexity of the viewed scene.
<p>(<a href="/~eppstein/bibs/eppstein.html#Visibility with a moving point of view">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Visibility-with-a-moving-point-of-view.html">Citations</a>)
<p>
<li><b>Asymptotic speed-ups in constructive solid geometry</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-92-87.pdf">Tech. Rep. 92-87</a>, ICS, UCI, 1992.<br>
<i>Algorithmica</i> 13: 462&ndash;471, 1995.
<p>
Finds boundary representations of CSG objects.
Uses techniques from dynamic graph algorithms,
including a tree partitioning technique of Frederickson
and a new data structure for maintaining the value
of a Boolean expression with changing variables
in time O(log <i>n</i> / log log <i>n</i>) per update.
<p>(<a href="/~eppstein/bibs/eppstein.html#Asymptotic speed-ups in constructive solid geometry">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Asymptotic-speed-ups-in-constructive-solid-geometry.html">Citations</a>)
<p>
<li><b>Diameter and treewidth in minor-closed graph families</b>.<br>
D. Eppstein.<br>
<a href="//arXiv.org/abs/math.CO/9907126">arXiv:math.CO/9907126</a>.<br>
<i>Algorithmica</i> 27: 275&ndash;291, 2000
(special issue on treewidth, graph minors, and algorithms).
<p>
This paper introduces the <i>diameter-treewidth
property</i> (later known as <i>bounded local treewidth</i>): a
functional relationship between the diameter of its graph and its treewidth.
Previously known results imply that planar graphs have
bounded local treewidth; we characterize the
other minor-closed families with this property. Specifically,
minor-closed family F has bounded local treewidth if and only if there
exists an <i>apex graph</i> G that is not in F; an apex graph is a graph
that can be made planar by removing a single vertex.
The minor-free families that exclude an apex graph (and therefore have
bounded local treewidth) include the bounded-genus
graphs (for which, as with planar graphs, we show a linear bound for the
treewidth as a function of the diameter) and K<sub>3,a</sub>-free graphs.  As
a consequence, subgraph isomorphism for subgraphs of bounded size and
approximations to several NP-hard optimization problems can be computed
efficiently on these graphs, extending previous results for planar
graphs.
<p>Some of these results
were announced in the conference version of
"<a href="p-psgi.html">subgraph isomorphism for planar graphs and related
problems</a>" but not included in the journal version. Since its
publication, there have been many more works on local treewidth. The class of
problems that could be solved quickly on graphs of bounded local
treewidth was extended and classified by Frick and Grohe, "<a
href="//doi.org/10.1145/504794.504798">Deciding first-order
properties of locally tree-decomposable structures</a>", <i>J. ACM</i>
48: 1184&ndash;1206, 2001;
the proof that bounded local treewidth is equivalent to having an
excluded apex minor was simplified, and the dependence of the treewidth
on diameter
improved, by a subsequent paper of Demaine and Hajiaghayi, "<a href="//erikdemaine.org/papers/DiameterTreewidth_Algorithmica/">Diameter and
treewidth in minor-closed graph families, revisited</a>", <i>Algorithmica</i>
40: 211&ndash;215, 2004. The concept of local treewidth is the basis for the
theory of <i>bidimensionality</i>, a general framework for
fixed-parameter-tractable algorithms and approximation algorithms in
minor-closed graph families; for a survey, see Demaine and Hajiaghayi,
"<a href="//erikdemaine.org/papers/BidimensionalSurvey_CJ/">The
bidimensionality theory and its algorithmic applications</a>", <i>The
Computer J.</i> 51: 292&ndash;302, 2008.
<p>(<a href="/~eppstein/bibs/eppstein.html#Diameter and treewidth in minor-closed graph families">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Diameter-and-treewidth-in-minor-closed-graph-families.html">Citations</a>)
<p>
<li><b>Algorithms for coloring quadtrees</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
D. Eppstein, and
B. Hutchings.<br>
<a href="//arXiv.org/abs/cs.CG/9907030">arXiv:cs.CG/9907030</a>.<br>
<i>Algorithmica</i> 32 (1): 87&ndash;94, 2002.
<p>
We consider several variations of the problem of
<a href="graph-color.html">coloring</a> the squares of a
<a href="geom-qt.html">quadtree</a> so that no two adjacent squares are
colored alike.
We give simple linear time algorithms for 3-coloring balanced quadtrees
with edge adjacency, 4-coloring unbalanced quadtrees with edge
adjacency, and 6-coloring balanced or unbalanced quadtrees with corner
adjacency.  The number of colors used by the first two algorithms is
optimal; for the third algorithm, 5 colors may sometimes be
needed.
<p>(<a href="/~eppstein/bibs/eppstein.html#Algorithms for coloring quadtrees">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Algorithms-for-coloring-quadtrees.html">Citations</a>)
<p>
<li><b>Guest editor's forward to special issue on dynamic graph algorithms</b>.<br>
D. Eppstein.<br>
<i>Algorithmica</i> 22 (3): 233&ndash;234, 1998.
<p>
<li><b>Confluent layered drawings</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
and
J. Meng.<br>
12th Int. Symp. Graph Drawing, New York, 2004.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 3383, 2004, pp. 184&ndash;194.<br>
<a href="//arxiv.org/abs/cs.CG/0507051">arXiv:cs.CG/0507051</a>.<br>
<a href="//doi.org/10.1007/s00453-006-0159-8"><i>Algorithmica</i> 47 (4): 439&ndash;452 (special issue for Graph Drawing), 2007</a>.
<p>
Describes a <a href="gdraw.html">graph drawing</a> technique
combining ideas of
<a href="p-confluent.html">confluent drawing</a>
with Sugiyama-style layered drawing.
Uses a reduction to <a href="graph-color.html">graph coloring</a>
to find and visualize sets of bicliques in each layer.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Confluent layered drawings">BibTeX</a> &ndash;
<a href="//fano.ics.uci.edu/cites/Document/Confluent-layered-drawings.html">Citations</a> &ndash;
<a href="//gdea.informatik.uni-koeln.de/archive/00000586/">GDEA</a>)
<p>
<li><b>Track layouts, layered path decompositions, and leveled
planarity</b>.<br>
<a href="//michaeljbannister.com/">M. J. Bannister</a>,
<a href="//www.ics.uci.edu/~wdevanny/">W. E. Devanny</a>, and
<a href="//engineering.uottawa.ca/eecs/people/dujmovic-vida">V. Dujmovi&#263;</a>,
D. Eppstein, and
<a href="//users.monash.edu.au/~davidwo/">D. R. Wood</a>.<br>
<a href="//arxiv.org/abs/1506.09145">arXiv:1506.09145</a>.<br>
<i>24th Int. Symp. Graph Drawing</i>, Athens, Greece, 2016.<br>
<a href="//doi.org/10.1007/978-3-319-50106-2_38">Springer, <i>Lecture Notes in Comp. Sci.</i> 9801 (2016), pp. 499&ndash;510</a>.<br>
<a href="//doi.org/10.1007/s00453-018-0487-5"><i>Algorithmica</i>, to
appear</a>.
<p>
We introduce the concept of a layered path decomposition, and show that
the layered pathwidth can be used to characterize the leveled planar
graphs. As a consequence we show that finding the minimum number of
tracks in a track layout of a given graph is NP-complete.
The GD version includes only the parts concerning track layout,
and uses the title "Track Layout is Hard".
<p>
<li><b>On the planar split thickness of graphs</b>.<br>
D. Eppstein,
<a href="//www1.informatik.uni-wuerzburg.de/en/staff/kindermann_philipp/">P. Kindermann</a>,
<a href="//www.cs.arizona.edu/~kobourov/">S. G. Kobourov</a>,
<a href="//www.diei.unipg.it/STAFF/liotta.htm">G. Liotta</a>,
<a href="//cs.uwaterloo.ca/~alubiw/Site/Anna_Lubiw.html">A. Lubiw</a>,
<a href="//www-ljk.imag.fr/membres/Aude.Maignan/">A. Maignan</a>,
<a href="//www.cs.umanitoba.ca/~jyoti/research.html">D. Mondal</a>,
<a href="//cs.uwaterloo.ca/~hvosough/">H. Vosoughpour</a>,
S. Whitesides, and
<a href="//www.cs.uleth.ca/~wismath/">S. Wismath</a>.<br>
<a href="//arxiv.org/abs/1512.04839">arXiv:1512.04839</a>.<br>
<i>Proc. 12th Latin American Theoretical Informatics Symposium (LATIN
2016)</i>, Ensenada, Mexico</i>.<br>
<a href="//doi.org/10.1007/978-3-662-49529-2_30">Springer, <i>Lecture Notes in Comp. Sci.</i> 9644 (2016), pp. 403&ndash;415</a>.<br>
<a href="//doi.org/10.1007/s00453-017-0328-y"><i>Algorithmica</i> 80
(3): 977&ndash;994 (special issue for LATIN), 2018</a>.
<p>
We study the problem of splitting the vertices of a given graph into a
bounded number of sub-vertices (with each edge attaching to one of the
sub-vertices) in order to make the resulting graph planar.
It is NP-complete, but can be approximated to within a constant factor,
and is fixed-parameter tractable in the treewidth.
<p>
(<a href="EppKinKob-LATIN-16-slides.pdf">Slides</a>)
<p>
<li><b>From discrepancy to majority</b>.<br>
D. Eppstein
and <a href="//www.ics.uci.edu/~dan/">D. S. Hirschberg</a>.<br>
<a href="//arxiv.org/abs/1512.06488">arXiv:1512.06488</a>.<br>
<i>Proc. 12th Latin American Theoretical Informatics Symposium (LATIN
2016)</i>, Ensenada, Mexico.<br>
<a href="//doi.org/10.1007/978-3-662-49529-2_29">Springer, <i>Lecture Notes in Comp. Sci.</i> 9644 (2016), pp. 390&ndash;402</a>.<br>
<a href="//doi.org/10.1007/s00453-017-0303-7"><i>Algorithmica</i> 80
(4): 1278&ndash;1297, 2018</a>.
<p>
We provide upper and lower bounds on the query complexity of a problem
in which the input is a collection
of two-colored items, and the problem is to either find an item of the
majority color or to determine that there is no majority,
by performing queries that determine the discrepancy of fixed-size
subsets of the items.
<p>
(<a href="EppHir-LATIN-16-slides.pdf">Slides</a>)
<p>
<li><b>Spanning trees in multipartite geometric graphs</b>.<br>
<a href="//cglab.ca/~biniaz/">A. Biniaz</a>,
<a href="//jitbose.ca/">P. Bose</a>,
D. Eppstein,
<a href="//people.scs.carleton.ca/~maheshwa/">A. Maheshwari</a>,
<a href="//cglab.ca/~morin/">P. Morin</a>, and
<a href="//people.scs.carleton.ca/~michiel/">M. Smid</a>.<br>
<a href="//arxiv.org/abs/1611.01661">arXiv:1611.01661</a>.<br>
<a href="//doi.org/10.1007/s00453-017-0375-4"><i>Algorithmica</i> 80
(11): 3177&ndash;3191, 2018</a>.
<p>
We provide near-linear-time algorithms for minimum and maximum spanning
trees on Euclidean graphs given by multicolored point sets, where each
point forms a vertex, and each bichromatic pair of points forms an edge
with length equal to their Euclidean distance.
<p>
<li><b>Maximum plane trees in multipartite geometric graphs</b>.<br>
<a href="//cglab.ca/~biniaz/">A. Biniaz</a>,
<a href="//jitbose.ca/">P. Bose</a>,
<a href="//cglab.ca/~jdecaruf/">J.-L. De Carufel</a>,
K. Crosbie,
D. Eppstein,
<a href="//people.scs.carleton.ca/~maheshwa/">A. Maheshwari</a>,
<a href="//people.scs.carleton.ca/~michiel/">M. Smid</a>.<br>
15th Algorithms and Data Structures Symp. (WADS 2017), St. John's, Newfoundland.<br>
<a href="//doi.org/10.1007/978-3-319-62127-2_17">Springer, <i>Lecture
Notes in Comp. Sci.</i> (2017), pp. 193&ndash;204</a>.<br>
<a href="//doi.org/10.1007/s00453-018-0482-x"><i>Algorithmica</i>, to appear</a>.
<p>
We consider problems of constructing the maximum-length plane (non-self-crossing) spanning
tree on Euclidean graphs given by multicolored point sets, where each
point forms a vertex, and each bichromatic pair of points forms an edge
with length equal to their Euclidean distance.
We show that several such problems can be efficiently approximated.
<p>
</ul>

<hr><p>
<a href="jour.html">Journals</a> &ndash;
<a href="/~eppstein/pubs/">Publications</a> &ndash;
<a href="/~eppstein/">David Eppstein</a> &ndash;
<a href="/~theory/">Theory Group</a> &ndash;
<a href="/">Inf. &amp; Comp. Sci.</a> &ndash;
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ