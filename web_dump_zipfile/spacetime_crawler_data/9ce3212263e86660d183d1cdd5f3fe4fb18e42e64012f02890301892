¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‰¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueE51952¢Ak¢DtypeEvalueJSet-CookieAv¢DtypeEvalueX°trac_form_token=24a81882a5b9e3a2af44809f; httponly; Path=/wiki/public, trac_session=353a2bb432ea8984aeb96910; expires=Thu, 09 May 2019 04:46:40 GMT; httponly; Path=/wiki/public¢Ak¢DtypeEvalueGExpiresAv¢DtypeEvalueXFri, 01 Jan 1999 00:00:00 GMT¢Ak¢DtypeEvalueJKeep-AliveAv¢DtypeEvalueRtimeout=5, max=100¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX„Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueJConnectionAv¢DtypeEvalueJKeep-Alive¢Ak¢DtypeEvalueMCache-ControlAv¢DtypeEvalueOmust-revalidate¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 04:46:39 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueWtext/html;charset=utf-8Kraw_content¢DtypeEvalueYÊð<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

    <html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      cs222p-2017-fall-project1 (diff) â€“ Public
    </title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/wiki/public/search" />
        <link rel="help" href="/wiki/public/wiki/TracGuide" />
        <link rel="up" href="/wiki/public/wiki/cs222p-2017-fall-project1?action=history" title="Page history" />
        <link rel="next" href="/wiki/public/wiki/cs222p-2017-fall-project1?action=diff&amp;version=2" title="Version 2" />
        <link rel="start" href="/wiki/public/wiki" />
        <link rel="stylesheet" href="/wiki/public/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/diff.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/tracwysiwyg/editor.css" />
        <link rel="tracwysiwyg.base" href="/wiki/public" />
        <link rel="shortcut icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
    <style id="trac-noscript" type="text/css">.trac-noscript { display: none !important }</style>
    <script type="text/javascript">
      var _tracwysiwyg={};
    </script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/jquery.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/babel.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/trac.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/search.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/common/js/diff.js"></script>
      <script type="text/javascript" charset="utf-8" src="/wiki/public/chrome/tracwysiwyg/wysiwyg.js"></script>
    <script type="text/javascript">
      jQuery("#trac-noscript").remove();
      jQuery(document).ready(function($) {
        $(".trac-autofocus").focus();
        $(".trac-target-new").attr("target", "_blank");
        setTimeout(function() { $(".trac-scroll").scrollToTop() }, 1);
        $(".trac-disable-on-submit").disableOnSubmit();
      });
    </script>
    <link rel="stylesheet" type="text/css" href="/wiki/public/chrome/common/css/diff.css" />
    <meta name="ROBOTS" content="NOINDEX, NOFOLLOW" />
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.ics.uci.edu/"><img src="/wiki/public/chrome/site/ics.jpg" alt="ICS Logo" height="67" width="128" /></a>
      </div>
      <form id="search" action="/wiki/public/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/wiki/public/login">Login</a></li><li><a href="/wiki/public/prefs">Preferences</a></li><li class="last"><a href="/wiki/public/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
        <ul>
          <li class="first"><span class="missing">&larr; Previous Change</span></li><li><a href="/wiki/public/wiki/cs222p-2017-fall-project1?action=history" title="Page history">Wiki History</a></li><li class="last"><span><a class="next" href="/wiki/public/wiki/cs222p-2017-fall-project1?action=diff&amp;version=2" title="Version 2">Next Change</a> &rarr;</span></li>
        </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
      <h1>
        Changes between
          <a href="/wiki/public/wiki/cs222p-2017-fall-project1?version=0">Initial Version</a> and
          <a href="/wiki/public/wiki/cs222p-2017-fall-project1?version=1">Version 1</a> of
          <a href="/wiki/public/wiki/cs222p-2017-fall-project1">cs222p-2017-fall-project1</a>
      </h1>
      <form method="post" id="prefs" action="/wiki/public/wiki/cs222p-2017-fall-project1?version=1"><div><input type="hidden" name="__FORM_TOKEN" value="24a81882a5b9e3a2af44809f" /></div>
        <div>
          <input type="hidden" name="action" value="diff" />
          <input type="hidden" name="version" value="1" />
          <input type="hidden" name="old_version" value="0" />
          
  <label for="style">View differences</label>
  <select id="style" name="style">
    <option selected="selected" value="inline">inline</option>
    <option value="sidebyside">side by side</option>
  </select>
  <div class="field">
    <label><input type="radio" name="contextall" value="0" checked="checked" />
             Show</label>
      <label><input type="text" name="contextlines" id="contextlines" size="2" maxlength="3" value="2" />
             lines around each change</label><br />
    <label><input type="radio" name="contextall" value="1" />
           Show the changes in full context</label>
  </div>
  <fieldset id="ignore">
    <legend>Ignore:</legend>
    <div class="field">
      <input type="checkbox" id="ignoreblanklines" name="ignoreblanklines" />
      <label for="ignoreblanklines">Blank lines</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorecase" name="ignorecase" />
      <label for="ignorecase">Case changes</label>
    </div>
    <div class="field">
      <input type="checkbox" id="ignorewhitespace" name="ignorewhitespace" />
      <label for="ignorewhitespace">White space changes</label>
    </div>
  </fieldset>
  <div class="buttons">
    <input type="submit" name="update" value="Update" />
  </div>

        </div>
      </form>
      <dl id="overview">
        <dt class="property time">Timestamp:</dt>
        <dd class="time">
            Sep 26, 2017 8:43:43 PM (<a class="timeline" href="/wiki/public/timeline?from=2017-09-26T20%3A43%3A43-07%3A00&amp;precision=second" title="See timeline at Sep 26, 2017 8:43:43 PM">17 months</a> ago)
        </dd>
        <dt class="property author">Author:</dt>
        <dd class="author">
          zuozhi
        </dd>
        <dt class="property message">Comment:</dt>
        <dd class="message">
          
          <p>
--
</p>

        </dd>
      </dl>
      <div class="diff">
        <div class="legend" id="diff-legend">
          <h3>Legend:</h3>
          <dl>
            <dt class="unmod"></dt><dd>Unmodified</dd>
            <dt class="add"></dt><dd>Added</dd>
            <dt class="rem"></dt><dd>Removed</dd>
            <dt class="mod"></dt><dd>Modified</dd>
          </dl>
        </div>
        <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2 id="file0">
          <a href="/wiki/public/wiki/cs222p-2017-fall-project1?version=1">cs222p-2017-fall-project1</a>
        </h2>
        <table class="trac-diff inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="Version currently edited">
                    <a href="#L1">
                      v1</a>
                  </th>
                  <th title="Version 1">
                    <a href="/wiki/public/wiki/cs222p-2017-fall-project1?version=1#L1">
                      v1</a>
                  </th>
                  <td>Â </td>
                </tr>
              </thead>
            <tbody class="add">
                  <tr class="first">
                          <th>Â </th><th>1</th><td class="r"><ins>[[PageOutline]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>2</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>3</th><td class="r"><ins>= Project 1 for CS222 =</ins></td>
                  </tr><tr>
                          <th>Â </th><th>4</th><td class="r"><ins>&nbsp; '''Deadline: Wednesday, Oct 5, 2016, 11:45 pm, on EEE.'''Â [[BR]][[BR]]'''Note that students are required to work individually on project 1.'''</ins></td>
                  </tr><tr>
                          <th>Â </th><th>5</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>6</th><td class="r"><ins>== Introduction ==</ins></td>
                  </tr><tr>
                          <th>Â </th><th>7</th><td class="r"><ins>In project 1, you will implement a very simple paged file (PF) manager. It builds up the basic file system required for continuing with projects 2,3 and 4. The PF component provides classes and methods for managing files and pages in files. In addition, you will implement the first few operations for a record-based file (RBF) manager (which you will continue working on in part 2 of the project) on top of your basic paged file system. This document aims at providing you with the necessary information required to start project 1.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>8</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>9</th><td class="r"><ins>== Goal ==</ins></td>
                  </tr><tr>
                          <th>Â </th><th>10</th><td class="r"><ins>The goal of project 1 is threefold:</ins></td>
                  </tr><tr>
                          <th>Â </th><th>11</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>12</th><td class="r"><ins>&nbsp;* Get (re)familiar with a C/C++ development environment.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>13</th><td class="r"><ins>&nbsp;* Implement a simple paged file system.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>14</th><td class="r"><ins>&nbsp;* Implement a few operations of a record-oriented (a.k.a. tuple-oriented) file system.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>15</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>16</th><td class="r"><ins>The detailed description of the project itself is inÂ [wiki:cs222-2016-fall-project1-description Project 1 Description].</ins></td>
                  </tr><tr>
                          <th>Â </th><th>17</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>18</th><td class="r"><ins>== Overview of Steps ==</ins></td>
                  </tr><tr>
                          <th>Â </th><th>19</th><td class="r"><ins>&nbsp;* Set up the development environment.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>20</th><td class="r"><ins>&nbsp;* Download and deploy the codebase of Project 1.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>21</th><td class="r"><ins>&nbsp;* Finish the development of Project 1.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>22</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>23</th><td class="r"><ins>== Detailed Instructions ==</ins></td>
                  </tr><tr>
                          <th>Â </th><th>24</th><td class="r"><ins>'''1. Set up the development environment'''</ins></td>
                  </tr><tr>
                          <th>Â </th><th>25</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>26</th><td class="r"><ins>&nbsp; We detail the steps of setting up a development environment in Eclipse. Note that you should make sure your code will work on a Linux machine (or a Linux virtual machine) because the assistants will be using a Linux machine to test and grade the assignment. To this end, students should follow the standard C library and common C++ libraries, e.g., STL, to implement your project, and make sure your code is GCC/G++ compilable. You can also use C++11 features (https://gcc.gnu.org/projects/cxx0x.htmlÂ ) if you wish. Please make sure that you do not call any platform specific functions, such as Windows-specific APIs in your projects. Linux and Mac users can follow the steps starting from "Set up JRE" (below) if you prefer to develop on Eclipse. For an elaborated tutorial, please refer toÂ [attachment:eclipse_tutorial.pdf this document]Â .</ins></td>
                  </tr><tr>
                          <th>Â </th><th>27</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>28</th><td class="r"><ins>&nbsp;* '''Set up MinGW (Windows only)'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>29</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>30</th><td class="r"><ins>&nbsp; If you are programming on Windows, it is recommended that you use the tool chain from MinGW to build your project. An introduction to MinGW can be found atÂ http://www.mingw.org/Â . Download mingw-get-setup.exe fromÂ http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/downloadÂ . Run the installer. In the select components page, please check "mingw-developer-toolkit", "mingw32-base", "mingw32-gcc-g++" and "msys-base" as well. Follow the default settings and finish the installation.[[BR]][[Image(mingw_setup_screen.jpg)]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>31</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>32</th><td class="r"><ins>&nbsp;* '''Configure the Environment Variables (Windows only)'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>33</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>34</th><td class="r"><ins>&nbsp; Add the binary paths of MinGW and MSYS to the Path variable. Please note that the actual path varies based on the installation directory you set. (e.g., C:\MingW\bin and C:\MinGW\msys\1.0\bin)</ins></td>
                  </tr><tr>
                          <th>Â </th><th>35</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>36</th><td class="r"><ins>&nbsp;* '''Set up JRE (Windows, Mac, Linux)'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>37</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>38</th><td class="r"><ins>&nbsp; Make sure that the Java runtime environment (JRE) is available on your system so you can run Eclipse. You can open a terminal (command prompt) and run "java" to check whether JRE is installed or not. If not, please followÂ http://www.java.com/en/download/Â to download and install the JRE.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>39</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>40</th><td class="r"><ins>&nbsp;* '''Set up the Eclipse IDE for C/C++ Developers (Windows, Mac, Linux)'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>41</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>42</th><td class="r"><ins>&nbsp; Download the zip file fromÂ http://www.eclipse.org/downloads/packages/eclipse-ide-cc-developers-includes-incubating-components/indigosr2Â . Make sure you download the proper zip file that matches your system environment (OS type, bit). You can download a different version of Eclipse by visiting[http://www.eclipse.org/downloads/packages/eclipse-ide-cc-developers/lunasr1 http://www.eclipse.org/downloads/packages/eclipse-ide-cc-developers/lunasr1]Â . Unzip it and start Eclipse.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>43</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>44</th><td class="r"><ins>&nbsp;* '''Create a new project in Eclipse (Windows only)'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>45</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>46</th><td class="r"><ins>&nbsp; Click "File"/"New"/"C++ Project" in Eclipse. You should be able to see "MinGW GCC" in the toolchains panel. Choose "Hello World C++ Project" in the "Project type" and type "!HelloWorldÂ " in the project name, then click on "Finish". A defaultÂ !HelloWorldÂ project will be created. Click the "Run" button in the toolbar and you should then see the output in the console window. You may also find this manual is useful:Â http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.cdt.doc.user%2Fgetting_started%2Fcdt_w_basic.htmÂ .</ins></td>
                  </tr><tr>
                          <th>Â </th><th>47</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>48</th><td class="r"><ins>&nbsp;* '''Create a new project in Eclipse (Mac, Linux only)'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>49</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>50</th><td class="r"><ins>&nbsp; Click "File"/"New"/"C++ Project" in Eclipse. You can see "Cross GCC", "Linux GCC", or "MacOSX GCC" in toolchains panel. Please note that the default C++ compiler for the recent versions of OS X is CLANG (http://clang.llvm.orgÂ ), not GCC. If you choose "MACOSX GCC", your project may not run properly on Linux systems. Choose "Hello World C++ Project" in the "Project type" and choose "Cross GCC" and type "!HelloWorldÂ " in the project name, and click "Next". A defaultÂ !HelloWorldÂ project will then be created. Click "Project"/"Build All". Then you should see that a binary has been created in the Binaries folder in theÂ !HelloWorldÂ project. At this point, your project structure should be similar to this picture (created by using Cross GCC toolchain):Â [[BR]][[Image(eclipse_project_explorer_capture_helloworld.jpg)]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>51</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>52</th><td class="r"><ins>&nbsp; Click the "Run" button in the toolbar and you should see the output in the console window. If you see an error, clickÂ !HelloWorldÂ in the Debug folder and click the "Run" button in the toolbar if you chose Cross GCC. You may also find this manual to be useful:Â http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.cdt.doc.user%2Fgetting_started%2Fcdt_w_basic.htm</ins></td>
                  </tr><tr>
                          <th>Â </th><th>53</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>54</th><td class="r"><ins>&nbsp;* '''Try GDB in Eclipse (Windows only)'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>55</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>56</th><td class="r"><ins>&nbsp; GDB is included in the binary distribution of MinGW. Click the "Debug" button in the toolbar, and click "Yes" in the Perspective Switch dialog, and you will be now in the Debug Perspective. Press "F6" to step over each line of code until the last line of the code is reached. In case GDB is not included in your installation and the debugger is missing, please download the gdb-7.3-2-mingw32-bin.tar.lzma package fromÂ http://sourceforge.net/projects/mingw/files/MinGW/Extension/gdb/GDB-7.3/Â and install it.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>57</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>58</th><td class="r"><ins>&nbsp;* '''Try Linux VM to test your code (Windows, Mac)'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>59</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>60</th><td class="r"><ins>&nbsp; After implementing your code, you may want to execute your code in a Linux VM since the assistants will use a Linux machine to grade your code. Again, please note that the default C++ compiler for the recent versions of OS X is CLANG (http://clang.llvm.orgÂ ), not GCC. Therefore, depending on your setup, your project may not run properly on a Linux system. You can download a free Linux VM fromÂ [https://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/6_0 VMware Player]Â ,Â [https://www.virtualbox.org/wiki/Downloads VirtualBox]Â . To install Linux on VMWare Player, visitÂ http://partnerweb.vmware.com/GOSIG/Ubuntu_16_04_LTS.htmlÂ . If you would like to useÂ !VirtualBoxÂ , visit[http://www.wikihow.com/Install-Ubuntu-on-VirtualBox http://www.wikihow.com/Install-Ubuntu-on-VirtualBox]Â . If you do not want to install a Linux VM, you can instead connect to your ICS openlab account to test your code on Linux. Refer to the ICS computing support site (http://www.ics.uci.edu/computing/linux/hosts.phpÂ ) for more info on that.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>61</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>62</th><td class="r"><ins>'''2. Download and deploy the codebase of Project 1'''</ins></td>
                  </tr><tr>
                          <th>Â </th><th>63</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>64</th><td class="r"><ins>&nbsp;* '''Download the codebase of Project 1'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>65</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>66</th><td class="r"><ins>&nbsp; Please download theÂ [attachment:codebase.zip codebase]Â onto your own computer. Unzip the file.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>67</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>68</th><td class="r"><ins>&nbsp;* '''Deploy the codebase'''</ins></td>
                  </tr><tr>
                          <th>Â </th><th>69</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>70</th><td class="r"><ins>&nbsp;* '''If you are developing in Eclipse'''[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>71</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>72</th><td class="r"><ins>&nbsp; Read the readme.txt under codebase.[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>73</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>74</th><td class="r"><ins>&nbsp; Create a new C++ project named "cs222" in Eclipse.[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>75</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>76</th><td class="r"><ins>&nbsp; Create a folder named "src" under cs222, and another folder named "rbf" under src.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>77</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>78</th><td class="r"><ins>&nbsp; Copy pfm.h, pfm.cc, rbfm.h, rbfm.cc, rbftest1.cc through rbftest12.cc from "codebase/rbf" under the rbf folder you have just created.[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>79</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>80</th><td class="r"><ins>&nbsp; There are 13 test cases, and each of these test cases is a stand-alone application that contains its own main() method, so Eclipse cannot compile the test cases properly when they are together. The simplest fix is to comment out all other test cases except the test that you are working on. For example, if you are working on rbftest1.cc, put block comments in the rbftest2.cc through rbftest12.cc files. Or, alternatively, you can only include one rbftestXX.cc file at a time. That way, you can test the 13 cases one by one. Yet another option is setting multiple targets for the 13 test cases. Refer to this guide if you would like to set targets for each of the 13 test cases:Â http://tinyguides.blogspot.com/2013/04/multiple-binaries-in-single-eclipse-cdt.htmlÂ . That is, you would need to create 13 targets (rbftest1, ... rbftest12) and each test case should not be included when compiling the other test cases.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>81</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>82</th><td class="r"><ins>&nbsp; At this point, your project structure is similar to this picture (created by using Cross GCC toolchain) :[[BR]][[Image(eclipse_project1_picture.jpg)]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>83</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>84</th><td class="r"><ins>&nbsp; Compile a test by doing Project -&gt; Build All. After the cs222 binary is created in a test folder, Right click the binary and click "Run As"/"Run Configurations" and register your test case as an application.Â [[Image(eclipse_project1_run_as_configuration.jpg)]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>85</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>86</th><td class="r"><ins>&nbsp; On Windows, if you see this error message - "Info: Nothing to build for cs222", put "g++ -static-libgcc -static-libstdc++" as the value in Command by visiting Project -&gt; Properties -&gt; Tool Settings -&gt; MinGW C++ Linker.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>87</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>88</th><td class="r"><ins>&nbsp; On Mac OS X, if you see this error message - "Launch failed, binary not found", check the "Mach-O 64 Parser is selected" option by visiting Project &gt; Properties &gt; C/C++ Build &gt; Settings &gt; Binary Parsers. OR, click "Debug"/"cs222" and click "Run" if you chose Cross GCC.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>89</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>90</th><td class="r"><ins>&nbsp; After you confirm that all test cases work properly, you can use the command-line tool to compile and test your code. In the end, the assistants will use the automated test script to test your code.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>91</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>92</th><td class="r"><ins>&nbsp;* '''If you are not using Eclipse'''Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>93</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>94</th><td class="r"><ins>&nbsp; Read the readme.txt under ./codebase/.[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>95</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>96</th><td class="r"><ins>&nbsp; Go to the codebase, and modify the CODEROOT in makefile.inc properly.Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>97</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>98</th><td class="r"><ins>&nbsp; Go to folder "rbf", and type in:</ins></td>
                  </tr><tr>
                          <th>Â </th><th>99</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>100</th><td class="r"><ins>&nbsp; make clean[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>101</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>102</th><td class="r"><ins>&nbsp; make[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>103</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>104</th><td class="r"><ins>&nbsp; ./rbftest1[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>105</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>106</th><td class="r"><ins>&nbsp; You will be able to see the output.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>107</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>108</th><td class="r"><ins>'''3. Finish the development of Project 1'''</ins></td>
                  </tr><tr>
                          <th>Â </th><th>109</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>110</th><td class="r"><ins>&nbsp; We have seen the results of running the code in codebase. But, since the implementation of the methods is empty, you cannot manage any files yet. Please finish the implementation in pfm.cc as well as the following methods in rbfm.cc (besides the constructor and destructor): 1) insertRecord. 2) readRecord. 3) printRecord. The remaining methods are not required for part 1 of the project; instead you will implement them as part of part 2 of the project. Please write your own test cases to test your code. You are responsible for anticipating other things that might go wrong that we haven't provided public tests for, just as you would be if you were building a DBMS in an industrial setting.Â [[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>111</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>112</th><td class="r"><ins>&nbsp; You may find these functions useful:Â http://www.cplusplus.com/reference/clibrary/cstdio/</ins></td>
                  </tr><tr>
                          <th>Â </th><th>113</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>114</th><td class="r"><ins>== Submission Instructions ==</ins></td>
                  </tr><tr>
                          <th>Â </th><th>115</th><td class="r"><ins>The following are requirements on your submission.Â '''Points will likely be deducted if they are not followed.'''</ins></td>
                  </tr><tr>
                          <th>Â </th><th>116</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>117</th><td class="r"><ins>&nbsp;* '''Suppress any debug messages that you put in your code. Only the original messages in the test cases should be printed.'''</ins></td>
                  </tr><tr>
                          <th>Â </th><th>118</th><td class="r"><ins>&nbsp;* Write a short report to briefly describe the implementation (key design choices) of your paged file and record-based file system layers. Please provide a text file rather than a PDF, Word Document, or other non-text format. Do not use RTF format.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>119</th><td class="r"><ins>&nbsp;* In your report, clearly mention your development environment - operating system and gcc version. (e.g., OS - Ubuntu 16.04 64 bit, GCC - 5.4)</ins></td>
                  </tr><tr>
                          <th>Â </th><th>120</th><td class="r"><ins>&nbsp;* Submit the source code under the "rbf" folder. Make sure you do a "make clean" first, and do NOT include any useless files (such as binary files and data files). You must make sure your makefile runs properly!</ins></td>
                  </tr><tr>
                          <th>Â </th><th>121</th><td class="r"><ins>&nbsp;* Please organize your project according to the following directory hierarchy:</ins></td>
                  </tr><tr>
                          <th>Â </th><th>122</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>123</th><td class="r"><ins>&nbsp; project1-''Â studentID''Â / codebase / {rbf, makefile.inc, readme.txt, project1-report.txt} where the rbf folder includes your source code and the makefile.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>124</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>125</th><td class="r"><ins>&nbsp; (e.g., project1-12345678 / codebase / {rbf, makefile.inc, readme.txt, project1-report.txt})</ins></td>
                  </tr><tr>
                          <th>Â </th><th>126</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>127</th><td class="r"><ins>&nbsp; Your folder structure should look like this picture:Â [[BR]][[Image(final_folder_structure_example.jpg)]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>128</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>129</th><td class="r"><ins>&nbsp;* Compress project1-''studentID''Â into a SINGLE zip file named "project1-''studentID''.zip" (e.g., project1-12345678.zip).</ins></td>
                  </tr><tr>
                          <th>Â </th><th>130</th><td class="r"><ins>&nbsp;* PutÂ [attachment:test.sh this script]Â and the zip file under the same directory. Run it to verify that your project can be properly unzipped and tested (using your own makefile.inc and rbftest.cc when you are testing the script). If the script doesn't work correctly, it's likely that your folder organization doesn't meet the above requirements. Our grading will be done by automatically done by running the script. The usage of the script is:</ins></td>
                  </tr><tr>
                          <th>Â </th><th>131</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>132</th><td class="r"><ins>{{{</ins></td>
                  </tr><tr>
                          <th>Â </th><th>133</th><td class="r"><ins>&nbsp; &nbsp; ./test.sh ''project1-studentID''</ins></td>
                  </tr><tr>
                          <th>Â </th><th>134</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>135</th><td class="r"><ins>}}}</ins></td>
                  </tr><tr>
                          <th>Â </th><th>136</th><td class="r"><ins>&nbsp;* '''IMPORTANT: Again, you need to make sure that your script works under Linux, as the assistants will use Linux to grade your assignment. Also, suppress any debug messages that you put in your code. Only the original messages in the test cases should be printed.'''</ins></td>
                  </tr><tr>
                          <th>Â </th><th>137</th><td class="r"><ins>&nbsp;* Upload the zip file "project1-''studentID''.zip" to EEE. (e.g., project1-12345678.zip)</ins></td>
                  </tr><tr>
                          <th>Â </th><th>138</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>139</th><td class="r"><ins>== Testing ==</ins></td>
                  </tr><tr>
                          <th>Â </th><th>140</th><td class="r"><ins>Please use the codes inside the codebase. Note that these test cases will be used to grade your project partially, but we also have our own private test cases. This is by no means an exhaustive test suite. You should add more cases to this and test your code thoroughly!</ins></td>
                  </tr><tr>
                          <th>Â </th><th>141</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>142</th><td class="r"><ins>Note: Again, this is not the complete suite we will use to test your codebase -- just a sample of it.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>143</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>144</th><td class="r"><ins>== Grading Rubrics ==</ins></td>
                  </tr><tr>
                          <th>Â </th><th>145</th><td class="r"><ins>Please see the grading rubricÂ [wiki:cs222-2016-fall-project1-grading here].</ins></td>
                  </tr><tr>
                          <th>Â </th><th>146</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>147</th><td class="r"><ins>== Q &amp; A ==</ins></td>
                  </tr><tr>
                          <th>Â </th><th>148</th><td class="r"><ins>&nbsp;* '''Q1''': What is the purpose of the make file if the project runs in eclipse?Â [[BR]]'''A''': Eclipse is able to generate a makefile for your project automatically. If you don't specify any makefile to Eclipse, by default it will generate a makefile and use it to build the project. You can find that makefile under "Debug/" folder. We have provided a makefile for students who don't use Eclipse to build their projects. Eclipse users, however, can also configure things to let Eclipse build projects by following the makefile in our codebase. Please read this post for detailed instructions:Â http://help.eclipse.org/indigo/index.jsp?topic=/org.eclipse.cdt.doc.user/concepts/cdt_c_makefile.htm. Note that it's OK if you don't build your project in Eclipse by using the makefile provided in our codebase, but you have to make sure that we can build your submitted project in command line by using 'make'. If you don't add any new source files to the project, you shouldn't need many modifications to our makefile.Â [http://www.gnu.org/software/make/manual/make.html Here]Â is a tutorial for the 'make' tool. You can refer to it if you do decide to change the makefile.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>149</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>150</th><td class="r"><ins>&nbsp;* '''Q2''': Consider a case where Page 3 of the file is full but Page 2 is partially filled and the user wants to append data? Now, if the size of the data that he or she wants to write is more than the available space on Page 2, what is the expected action to be taken? Do we just fit in whatever data we can and truncate the rest, OR completely disallow the user from making such a write?Â [[BR]]'''A''':Â !AppendPage() always happens to the end of the file, so this scenario can't arise. The number of file bytes affected by each page operation is always PAGE_SIZE. The paged file system layer always deals in pages -- nothing more and nothing less.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>151</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>152</th><td class="r"><ins>&nbsp;* '''Q3''': Is it fine if I do the file handling in C++ using the binary mode of read/write?Â [[BR]]'''A''': You should indeed use the binary mode!</ins></td>
                  </tr><tr>
                          <th>Â </th><th>153</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>154</th><td class="r"><ins>&nbsp;* '''Q4''': Why is the access specifier of the constructor and destructor of the classÂ !PagedFileManagerÂ set to be "protected"?Â [[BR]]'''A''': TheÂ !PagedFileManagerÂ is a singleton class, which means only ONE instance ofÂ !PagedFileManagerÂ is allowed. You cannot instantiate the class by calling its constructor. Instead you should get an instance of the class by calling the Instance() function ofÂ !PagedFileManager. The Instance() function has been implemented for you in pfm.cc. The same applies to theÂ !RecordBasedFileManager.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>155</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>156</th><td class="r"><ins>&nbsp;* '''Q5''': As for pages, if I understand correctly, the !Read/Write/AppendPageÂ functions are operating on these files, and if you want to write the 3rd page (page number: 2) of a file, you'd seek 8K bytes into the file and start writing the data. Is this correct, or am I misunderstanding the concept of pages?[[BR]]'''A''':</ins></td>
                  </tr><tr>
                          <th>Â </th><th>157</th><td class="r"><ins>&nbsp; &nbsp;* Read reads a page that has to already exist[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>158</th><td class="r"><ins>&nbsp; &nbsp;* Append adds a new page at the end of the file[[BR]]</ins></td>
                  </tr><tr>
                          <th>Â </th><th>159</th><td class="r"><ins>&nbsp; &nbsp;* Write overwrites a page that has to already exist[[BR]]To write to the 3rd page of a file, the file should already have at least 2 pages (page numbers: 0,1) that contain valid data. Then you can either append data to 3rd page if it doesn't exist, or overwrite the 3rd page if it already exists. Please do not leave "holes" in files by writing past EOF. We won't allow the case of appending garbage pages to happen.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>160</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>161</th><td class="r"><ins>&nbsp;* '''Q6''': Since I need to change the path of codebase in makefile.inc to test the project, do I need to change it back when I submit the zip file?Â [[BR]]'''A''': No, you don't need to change back, but you need to instead make sure the path isÂ '''relative'''Â so that the test.sh script will also work on another machine.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>162</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>163</th><td class="r"><ins>&nbsp;* '''Q7''': When inserting a tuple, do we only have to consider insertion of the new tuple at the end of the last page? Or do we have to be able to support insertion in whatever free space may exist among all the current pages?[[BR]]'''A''': You should first try to insert the record on the last (currently existing) page. If that fails, you should then try to find the first page with sufficient space available (e.g., looking from the beginning of the file). If none exists, then (and only then) should you append a new page to hold the new tuple.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>164</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>165</th><td class="r"><ins>&nbsp;* '''Q8''': What's the data format for data being passed to insertRecord?Â [[BR]]'''A''': The API format for insertRecord is as follows: Suppose you have five fields and their types are varchar(20), integer, varchar(20), real, and string. If a record is ("Tom", 25, "UCIrvine", 3.1415, 100), then the format of the record should be: [1 byte for the null-indicators for the fields: bit 00000000] [4 bytes for the length 3] [3 bytes for the string "Tom"] [4 bytes for the integer value 25] [4 bytes for the length 8] [8 bytes for the string "UCIrvine"] [4 bytes for the float value 3.1415] [4 bytes for the integer value 100]. Note that integer and real type fields do not have an associated length value in front of them; this is because each of these types always occupies 4 bytes.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>166</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>167</th><td class="r"><ins>&nbsp; The first part of the input containsÂ ''n''Â bytes for passing the null information about each of the incoming record's fields. The valueÂ ''n''Â can be calculated by using this formula: ceil(number of fields in a record / 8). For example, in this case, since there are 5 fields, the size of "n" can be calculated by ceil(5/8) = 1. If there are 20 fields, the size will be ceil(20/8) = 3. The left-most bit in the first byte corresponds to the first field. The right-most bit in the first byte corresponds to the eighth field. If there are more than eight fields, the left-most bit in the second byte corresponds to the ninth field and so on.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>168</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>169</th><td class="r"><ins>&nbsp; If a field value is NULL, the corresponding bit in the null bit vector will be set to 1. For example, if we have a record ("Tom", 25, NULL, NULL, 100) whose third attribute and fourth attribute are NULL, the first part containsÂ ''00110000''Â as the bit pattern in one byte. The actual byte representation will be: [1 byte for the null-indicators for the fields: 00110000] [4 bytes for the length 3] [3 bytes for the string "Tom"] [4 bytes for the integer value 25] [4 bytes for the integer value 100]. Note that there are no values to represent NULL values in the actual data. You MUST follow this API format!</ins></td>
                  </tr><tr>
                          <th>Â </th><th>170</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>171</th><td class="r"><ins>&nbsp; NOTE: This API data format is just intended for passing data into the insertRecord(). This does not mean that the internal representation of your record should be the same as this format -- in fact, it almost certainly will not be! (On-page record formatting options will be covered in lecture, and your project should make good choices for what it does based on what you learn in class.)</ins></td>
                  </tr><tr>
                          <th>Â </th><th>172</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>173</th><td class="r"><ins>&nbsp;* '''Q9''': Can we assume that a record can fit on a page (i.e., the size of a record &lt; the predefined page size)?Â [[BR]]'''A''': Yes. You can assume that a record can fit on a page.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>174</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>175</th><td class="r"><ins>== Platform Q &amp; A ==</ins></td>
                  </tr><tr>
                          <th>Â </th><th>176</th><td class="r"><ins>&nbsp;* '''Q1''': Do I have to use a specific OS platform?Â [[BR]]'''A''': You can implement your code on any operating system where g++ works, such as Windows or Linux. However, you cannot use any platform specific APIs. And once again, note that the assistants will use a Linux machine to grade your code. Please make sure that your code works on Linux!</ins></td>
                  </tr><tr>
                          <th>Â </th><th>177</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>178</th><td class="r"><ins>&nbsp;* '''Q2''': I am a Windows user. How do I test my code on Linux?Â [[BR]]'''A''': First, you could test your code by logging into your ICS account and uploading your code to your home directory. For details, refer toÂ http://www.ics.uci.edu/computing/linux/hosts.php. Another way is to install a VM such as VMware Player orÂ !VirtualBoxÂ on Windows and install the Linux OS in that VM. Refer to the "Try Linux VM to test your code" section in this document.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>179</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>180</th><td class="r"><ins>&nbsp;* '''Q3''': After downloading the codebase and setting it up in Eclipse, I can not execute it. How can I execute it?Â [[BR]]'''A''': On Windows, if you see the error message - "Info: Nothing to build for cs222", then put "g++ -static-libgcc -static-libstdc++" as the value in Command by visiting Project -&gt; Properties -&gt; Tool Settings -&gt; MinGW C++ Linker.Â [[BR]]On Mac OS X, if you see this error message - "Launch failed, binary not found", check the "Mach-O 64 Parser is selected" option by visiting Project &gt; Properties &gt; C/C++ Build &gt; Settings &gt; Binary Parsers. OR, click "Debug"/"cs222" and click "Run" in case you chose Cross GCC.</ins></td>
                  </tr><tr>
                          <th>Â </th><th>181</th><td class="r"><ins></ins></td>
                  </tr><tr>
                          <th>Â </th><th>182</th><td class="r"><ins>&nbsp;* '''Q4''': How do I enable GDB debugging feature on OS X?Â [[BR]]'''A''': It's not a simple process. Refer to this page:Â http://ntraft.com/installing-gdb-on-os-x-mavericks/</ins></td>
                  </tr><tr>
                          <th>Â </th><th>183</th><td class="r"><ins></ins></td>
                  </tr><tr class="last">
                          <th>Â </th><th>184</th><td class="r"><ins>&nbsp;* '''Q5''': Which gcc version should I use?Â [[BR]]'''A''': The reader(s) will use gcc 5.4 to grade your code. If you use a different version, please write it on your report. Also, note that OS X doesn't provide gcc as the default compiler. Rather, it provides clang as the default compiler. You can check it by executing "gcc --version" command. Please test your code using standard gcc on Linux.</ins></td>
                  </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
      </div>
  </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/wiki/public/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/wiki/public/about"><strong>Trac 1.0.13</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ