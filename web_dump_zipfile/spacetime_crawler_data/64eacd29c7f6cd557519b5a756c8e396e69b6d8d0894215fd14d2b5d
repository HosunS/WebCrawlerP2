¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueD4448¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueX4Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXThu, 13 Sep 2018 17:03:45 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueT"1160-575c3b09412ba"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXFri, 08 Feb 2019 10:18:03 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/html; charset=UTF-8Kraw_content¢DtypeEvalueY`<HEAD>
<TITLE>CS 260P - Syllabus</TITLE>
</HEAD>

<body bgcolor="#FFFFFF">
<meta name="description" value="SYLLABUS">
<meta name="keywords" value="syll">
<meta name="resource-type" value="document">
<meta name="distribution" value="global">

<center>
<h2> <b> Syllabus - CS 260P - Fundamentals of Algorithms with Applications</b></h2> 
<h3>
<b>Michael T. Goodrich</b> 
</h3>
</center>

<ul>
<li><b>Course Description.</b> 
Covers fundamental concepts in the design and analysis of algorithms and is geared toward practical application and implementation. Topics include greedy algorithms, deterministic and randomized graph algorithms, models of network flow, fundamental algorithmic techniques, and NP-completeness.

<li><b>Coursework.</b> Coursework will consist of weekly homeworks,
two midterms, two programming projects,
and a comprehensive final exam. The overall grade
will be determined 10% from homework, 20% from each midterm, 10% from
each project, and 30% from the final.
Group work on homeworks is permitted, but each
student must list his or her collaborators in writing for each problem.
If a student turns in a solution without listing
the others who helped produce this solution,
this act will be considered cheating (for it is plagarism).
Late homework assignments will not be accepted,
but for the overall total homework score, 
the lowest homework score will be dropped.
Group work on programming projects is not allowed--each program
must be individually written.
</li>

<li><b>Exam policy.</b>
Exam performance must be 100% individual effort; no collaboration
is allowed on exams.  Any collaboration or copying on exams 
will be considered cheating.
In addition to the procedures of the
<a href="http://www.ics.uci.edu/ugrad/policies/index.php#cheating">ICS 
Cheating Policy</a>, students caught cheating on exams will be given a 
failing grade in the class.
</li>

<li><b>Laptop policy.</b>
Laptops may be brought to class, but should remain <b>closed</b> during lectures
and exams.
<a href="http://www.npr.org/2016/04/17/474525392/attention-students-put-your-laptops-away">Here's one reason why.</a>
<a href="https://www.nytimes.com/2017/11/22/business/laptops-not-during-lecture-or-meeting.html?_r=0">Here is another.</a>
</li>

<li><b>Required Text.</b> The course text, which is required, will be 
<a href="https://www.wiley.com/en-us/Algorithm+Design+and+Applications-p-9781118335918">
Algorithm Design and Applications</a>,
by Goodrich and Tamassia.
Note: all royalties earned by Dr. Goodrich as a result 
of students in this class purchasing this book will be donated to
the charity,
<a href="https://www.fh.org/">Food for the Hungry</a>.
<li><b>Recommended Book.</b> A recommended course book is
<a href="https://www.amazon.com/Guide-Experimental-Algorithmics-Catherine-McGeoch/dp/0521173019">A Guide to Experimental Algorithmics</a>, by 
McGeoch.
</li>

</li>
</ul>

<h3>Tentative Schedule</h3>

<ul>
<li><b>Week 1:</b></li>

<ul>
<li>
Growth of functions.
Amortization.  
Basic Data Structures.
</li>
</ul>

<li><b>Week 2:</b></li>

<ul>
<li>
Sorting, comparison trees, and lower bounds. Mergesort. 
Quicksort. 
Bucket sort. 
Selection.
</li>
</ul>

<li>
<b>Week 3:</b></li>


<ul><li>
Fundamental techniques.
The greedy method.
Divide-and-conquer.
</li>
</ul>

<li>
<b>Week 4:</b></li>


<ul>
<li>
Dynamic programming. 
Matrix-chains.  
Knapsack.  Longest common subsequence.
</li>
</ul>

<li>
<b>Week 5:</b></li>
<font color="RED">Midterm I</font><br>

<ul>
<li>
Graphs and their representations.
</li>
</ul>

<li>
<b>Week 6:</b></li>
<ul>
<li>
Graph algorithms. Depth first search. 
Breadth-first search.
Topological sort. 
Shortest paths.
</li>
</ul>


<li>
<b>Week 7:</b></li>

<ul>
<li>
More graph algorithms.
Minimum spanning trees. Network flow.
</li>
</ul>

<li>
<b>Week 8:</b></li>
<font color="RED">Midterm II</font><br>



<ul>
<li>
P and NP. NP-Completeness. 
</li>
</ul>

<li>
<b>Week 9:</b></li>

<ul>
<li>
NP-Completeness Reductions. 
</li>
</ul>

<li>
<b>Week 10:</b>

<ul>
<li>
Randomized algorithms. 
</li>
</ul>

</ul>

<p>
<p>
Copyright &copy 2018
<a href="http://www.ics.uci.edu/~goodrich/">
Michael T. Goodrich</a>, as to all lectures. 
Students are prohibited from selling 
(or being paid for taking) notes during this course to or by any
person or commercial firm without the express written permission of the
professor teaching this course or from Disabled Services Center (DSC).

</BODY>
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ