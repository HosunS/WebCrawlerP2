¦Ifinal_url¡DtypeLhttp_headers¢DtypeEvalue‡¢Ak¢DtypeEvalueNContent-LengthAv¢DtypeEvalueC959¢Ak¢DtypeEvalueMAccept-RangesAv¢DtypeEvalueEbytes¢Ak¢DtypeEvalueFServerAv¢DtypeEvalueXjApache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips SVN/1.7.14 Phusion_Passenger/4.0.53 mod_perl/2.0.10 Perl/v5.16.3¢Ak¢DtypeEvalueMLast-ModifiedAv¢DtypeEvalueXWed, 17 Apr 2013 01:54:19 GMT¢Ak¢DtypeEvalueDETagAv¢DtypeEvalueS"3bf-4da84c39988c0"¢Ak¢DtypeEvalueDDateAv¢DtypeEvalueXThu, 31 Jan 2019 14:54:25 GMT¢Ak¢DtypeEvalueLContent-TypeAv¢DtypeEvalueXtext/plain; charset=UTF-8Kraw_content¢DtypeEvalueY¿/*
    $Id: closeunique.h 1107 2007-04-16 23:59:13Z rvernica $

    Copyright (C) 2007 by The Regents of the University of California

    Redistribution of this file is permitted under the terms of the
    GNU Public License (GPL).

    Date: 01/14/2006
    Author: Rares Vernica <rvernica@ics.uci.edu>
*/

#ifndef _closeunique_h_
#define _closeunique_h_

#include "ppdsample.h"
#include "indexentry.h"

class CloseUnique: public PPDSample 
{
private: 
  const unsigned queueSize, uniqueNo;
  unsigned sampleIdx, sampleMax;
  ContIndexEntryVect samplePair;
  Cluster cluster;
  ContCluster::const_iterator stringIt;
  set<SimVect> uniqueVect;

public:
  CloseUnique(const vector<string> *d, Clusters *c, ContQueryPivot *q, 
              const unsigned samplePer,
              const unsigned queueSize, const unsigned uniqueNo);
  bool hasNext() const;
  PPDTriple next();

private:
  void buildSample();
  unsigned countUnique();
  void step();
};

#endif
Mis_redirected¢DtypeEvalueôIhttp_code¢DtypeEvalueÈQdownload_complete¢DtypeEvalueõ